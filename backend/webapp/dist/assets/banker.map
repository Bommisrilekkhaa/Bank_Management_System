{"version":3,"sources":["vendor/ember-cli/app-prefix.js","banker/app.js","banker/components/account-input.js","banker/components/admin-dashboard.js","banker/components/auth-form.js","banker/components/branch-input.js","banker/components/customer-dashboard.js","banker/components/ember-notify.js","banker/components/ember-notify/message.js","banker/components/loan-input.js","banker/components/manager-dashboard.js","banker/components/nav-bar.js","banker/components/notify-box.js","banker/components/transaction-input.js","banker/components/view-account.js","banker/components/view-accounts.js","banker/components/view-loan.js","banker/components/view-loans.js","banker/components/view-transaction.js","banker/components/view-transactions.js","banker/components/welcome-page.js","banker/controllers/application.js","banker/controllers/banks.js","banker/controllers/banks/bank.js","banker/controllers/banks/bank/accounts.js","banker/controllers/banks/bank/accounts/account.js","banker/controllers/banks/bank/accounts/account/edit.js","banker/controllers/banks/bank/accounts/account/index.js","banker/controllers/banks/bank/accounts/account/loans.js","banker/controllers/banks/bank/accounts/account/loans/index.js","banker/controllers/banks/bank/accounts/account/loans/loan.js","banker/controllers/banks/bank/accounts/account/loans/loan/edit.js","banker/controllers/banks/bank/accounts/account/loans/loan/emi.js","banker/controllers/banks/bank/accounts/account/loans/loan/index.js","banker/controllers/banks/bank/accounts/account/loans/new.js","banker/controllers/banks/bank/accounts/account/transactions.js","banker/controllers/banks/bank/accounts/account/transactions/index.js","banker/controllers/banks/bank/accounts/account/transactions/new.js","banker/controllers/banks/bank/accounts/account/transactions/transaction.js","banker/controllers/banks/bank/accounts/index.js","banker/controllers/banks/bank/accounts/new.js","banker/controllers/banks/bank/branches.js","banker/controllers/banks/bank/branches/branch.js","banker/controllers/banks/bank/branches/branch/edit.js","banker/controllers/banks/bank/branches/branch/index.js","banker/controllers/banks/bank/branches/index.js","banker/controllers/banks/bank/branches/new.js","banker/controllers/banks/bank/edit.js","banker/controllers/banks/bank/index.js","banker/controllers/banks/bank/loans.js","banker/controllers/banks/bank/loans/index.js","banker/controllers/banks/bank/loans/loan.js","banker/controllers/banks/bank/loans/loan/edit.js","banker/controllers/banks/bank/loans/loan/emi.js","banker/controllers/banks/bank/loans/loan/index.js","banker/controllers/banks/bank/loans/new.js","banker/controllers/banks/bank/transactions.js","banker/controllers/banks/bank/transactions/index.js","banker/controllers/banks/bank/transactions/new.js","banker/controllers/banks/bank/transactions/transaction.js","banker/controllers/banks/bank/users.js","banker/controllers/banks/bank/users/index.js","banker/controllers/banks/bank/users/user.js","banker/controllers/banks/bank/users/user/dashboard.js","banker/controllers/banks/bank/users/user/edit.js","banker/controllers/banks/bank/users/user/index.js","banker/controllers/banks/index.js","banker/controllers/banks/new.js","banker/controllers/login.js","banker/controllers/register.js","banker/controllers/super-admin-login.js","banker/controllers/users.js","banker/controllers/users/index.js","banker/controllers/users/user.js","banker/controllers/users/user/edit.js","banker/controllers/users/user/index.js","banker/helpers/app-version.js","banker/helpers/eq.js","banker/helpers/format-date.js","banker/helpers/pluralize.js","banker/helpers/range.js","banker/helpers/singularize.js","banker/initializers/app-version.js","banker/initializers/container-debug-adapter.js","banker/initializers/data-adapter.js","banker/initializers/ember-data.js","banker/initializers/export-application-global.js","banker/initializers/injectStore.js","banker/initializers/store.js","banker/initializers/transforms.js","banker/instance-initializers/ember-data.js","banker/resolver.js","banker/router.js","banker/routes/banks.js","banker/routes/banks/bank.js","banker/routes/banks/bank/accounts.js","banker/routes/banks/bank/accounts/account.js","banker/routes/banks/bank/accounts/account/edit.js","banker/routes/banks/bank/accounts/account/index.js","banker/routes/banks/bank/accounts/account/loans.js","banker/routes/banks/bank/accounts/account/loans/index.js","banker/routes/banks/bank/accounts/account/loans/loan.js","banker/routes/banks/bank/accounts/account/loans/loan/edit.js","banker/routes/banks/bank/accounts/account/loans/loan/emi.js","banker/routes/banks/bank/accounts/account/loans/loan/index.js","banker/routes/banks/bank/accounts/account/loans/new.js","banker/routes/banks/bank/accounts/account/transactions.js","banker/routes/banks/bank/accounts/account/transactions/index.js","banker/routes/banks/bank/accounts/account/transactions/new.js","banker/routes/banks/bank/accounts/account/transactions/transaction.js","banker/routes/banks/bank/accounts/index.js","banker/routes/banks/bank/accounts/new.js","banker/routes/banks/bank/branches.js","banker/routes/banks/bank/branches/branch.js","banker/routes/banks/bank/branches/branch/edit.js","banker/routes/banks/bank/branches/branch/index.js","banker/routes/banks/bank/branches/index.js","banker/routes/banks/bank/branches/new.js","banker/routes/banks/bank/edit.js","banker/routes/banks/bank/index.js","banker/routes/banks/bank/loans.js","banker/routes/banks/bank/loans/index.js","banker/routes/banks/bank/loans/loan.js","banker/routes/banks/bank/loans/loan/edit.js","banker/routes/banks/bank/loans/loan/emi.js","banker/routes/banks/bank/loans/loan/index.js","banker/routes/banks/bank/loans/new.js","banker/routes/banks/bank/transactions.js","banker/routes/banks/bank/transactions/index.js","banker/routes/banks/bank/transactions/new.js","banker/routes/banks/bank/transactions/transaction.js","banker/routes/banks/bank/users.js","banker/routes/banks/bank/users/index.js","banker/routes/banks/bank/users/user.js","banker/routes/banks/bank/users/user/dashboard.js","banker/routes/banks/bank/users/user/index.js","banker/routes/banks/index.js","banker/routes/banks/new.js","banker/routes/index.js","banker/routes/login.js","banker/routes/not-found.js","banker/routes/register.js","banker/routes/super-admin-login.js","banker/routes/users/index.js","banker/routes/users/user.js","banker/routes/users/user/edit.js","banker/routes/users/user/index.js","banker/services/ajax.js","banker/services/branch-select.js","banker/services/fetch.js","banker/services/notify.js","banker/services/session.js","banker/services/shared-data.js","banker/templates/application.js","banker/templates/banks.js","banker/templates/banks/bank.js","banker/templates/banks/bank/accounts.js","banker/templates/banks/bank/accounts/account.js","banker/templates/banks/bank/accounts/account/edit.js","banker/templates/banks/bank/accounts/account/index.js","banker/templates/banks/bank/accounts/account/loans.js","banker/templates/banks/bank/accounts/account/loans/index.js","banker/templates/banks/bank/accounts/account/loans/loan.js","banker/templates/banks/bank/accounts/account/loans/loan/edit.js","banker/templates/banks/bank/accounts/account/loans/loan/emi.js","banker/templates/banks/bank/accounts/account/loans/loan/index.js","banker/templates/banks/bank/accounts/account/loans/new.js","banker/templates/banks/bank/accounts/account/transactions.js","banker/templates/banks/bank/accounts/account/transactions/index.js","banker/templates/banks/bank/accounts/account/transactions/new.js","banker/templates/banks/bank/accounts/account/transactions/transaction.js","banker/templates/banks/bank/accounts/index.js","banker/templates/banks/bank/accounts/new.js","banker/templates/banks/bank/branches.js","banker/templates/banks/bank/branches/branch.js","banker/templates/banks/bank/branches/branch/edit.js","banker/templates/banks/bank/branches/branch/index.js","banker/templates/banks/bank/branches/index.js","banker/templates/banks/bank/branches/new.js","banker/templates/banks/bank/edit.js","banker/templates/banks/bank/index.js","banker/templates/banks/bank/loans.js","banker/templates/banks/bank/loans/index.js","banker/templates/banks/bank/loans/loan.js","banker/templates/banks/bank/loans/loan/edit.js","banker/templates/banks/bank/loans/loan/emi.js","banker/templates/banks/bank/loans/loan/index.js","banker/templates/banks/bank/loans/new.js","banker/templates/banks/bank/transactions.js","banker/templates/banks/bank/transactions/index.js","banker/templates/banks/bank/transactions/new.js","banker/templates/banks/bank/transactions/transaction.js","banker/templates/banks/bank/users.js","banker/templates/banks/bank/users/user.js","banker/templates/banks/bank/users/user/dashboard.js","banker/templates/banks/index.js","banker/templates/banks/new.js","banker/templates/components/account-input.js","banker/templates/components/admin-dashboard.js","banker/templates/components/auth-form.js","banker/templates/components/branch-input.js","banker/templates/components/customer-dashboard.js","banker/templates/components/loan-input.js","banker/templates/components/manager-dashboard.js","banker/templates/components/nav-bar.js","banker/templates/components/notify-box.js","banker/templates/components/transaction-input.js","banker/templates/components/view-account.js","banker/templates/components/view-accounts.js","banker/templates/components/view-loan.js","banker/templates/components/view-loans.js","banker/templates/components/view-transaction.js","banker/templates/components/view-transactions.js","banker/templates/login.js","banker/templates/not-found.js","banker/templates/register.js","banker/templates/super-admin-login.js","banker/templates/users.js","banker/templates/users/index.js","banker/templates/users/user.js","banker/templates/users/user/edit.js","banker/templates/users/user/index.js","banker/utils/util.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('banker/app', ['exports', 'banker/resolver', 'ember-load-initializers', 'banker/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('banker/components/account-input', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    errorMessage: '',\n    branchNames: [],\n    userRole: _util.role,\n    statuses: [_util.status.ACTIVE, _util.status.PENDING],\n    types: [_util.accountType.BUSINESS, _util.accountType.SAVINGS],\n    role: Ember.computed('branchNames', function () {\n      return (0, _util.getSessionData)().user_role;\n    }),\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      // console.log(\"init...\");\n      this.loadBranches();\n    },\n\n\n    filteredStatuses: Ember.computed('branchNames', function () {\n      if (this.get('acc_status') == _util.status.ACTIVE) {\n        return [_util.status.INACTIVE, _util.status.ACTIVE];\n      } else {\n        return [_util.status.ACTIVE, _util.status.PENDING];\n      }\n    }),\n\n    accNo: '',\n    acc_type: '',\n    acc_balance: '',\n    acc_status: '',\n    username: '',\n    fullname: '',\n    branch_name: '',\n    isEdit: false,\n    branchId: '',\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n\n      url = url + '/branches';\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('branchNames', response.data);\n      }).catch(function (error) {\n        console.error(\"Failed to load branches:\", error);\n      });\n    },\n\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('types').includes(this.get('acc_type'))) {\n          this.set(\"errorMessage\", 'Please select a valid account type.');\n          return;\n        }\n        if (this.get('role') != this.userRole.CUSTOMER) {\n          if (this.get('isEdit')) {\n            if (!this.get('filteredStatuses').includes(this.get('acc_status'))) {\n              this.set(\"errorMessage\", \"Please select a valid account status.\");\n              return;\n            }\n          } else {\n            if (!this.get('statuses').includes(this.get('acc_status'))) {\n              this.set(\"errorMessage\", \"Please select a valid account status.\");\n              return;\n            }\n          }\n        }\n\n        if (!this.get('branchId') || String(this.get('branchId')).trim() === '') {\n          this.set(\"errorMessage\", 'Please select a branch.');\n          return;\n        }\n\n        if (this.get('role') != 'MANAGER') {\n          this.get('sharedData').set('branchId', this.get('branchId'));\n        }\n\n        var accountData = {\n          acc_type: this.get('acc_type') == _util.accountType.BUSINESS ? 0 : 1,\n          // acc_balance: this.get('acc_balance'),\n          username: this.get('username'),\n          acc_status: this.get('acc_status') == '' ? 0 : this.get('acc_status') == _util.status.PENDING ? 0 : this.get('acc_status') == _util.status.ACTIVE ? 1 : 2,\n          bank_id: this.get('sharedData').get('bankId'),\n          user_id: this.get('user_id')\n        };\n\n        var url = 'http://localhost:8080/banker/api/v1/';\n        var bankId = this.get('sharedData').get('bankId');\n        var branchId = this.get(\"branchId\");\n        if (this.get('isEdit')) {\n          var accNo = this.get('sharedData').get('accNo');\n          if (bankId != \"*\") {\n            url = url + ('banks/' + bankId);\n          }\n          if (branchId != '*') {\n            url = url + ('/branches/' + branchId);\n          }\n          if (accNo != \"*\") {\n            url = url + ('/accounts/' + accNo);\n          }\n\n          this.get('fetchService').fetch(url, _util.methods.PUT, accountData).then(function () {\n            // alert('Account updated successfully!');\n\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Account Edited successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toAccount\");\n            }, 2000);\n          }).catch(function (error) {\n            // alert('Error updating account');\n            console.error(error);\n            _this2.sendAction(\"toAccount\");\n          });\n        } else {\n          if (bankId != \"*\") {\n            url = url + ('banks/' + bankId);\n          }\n          if (branchId != '*') {\n            url = url + ('/branches/' + branchId);\n          }\n          url = url + '/accounts';\n\n          this.get('fetchService').fetch(url, _util.methods.POST, accountData).then(function () {\n\n            _this2.resetForm();\n\n            _this2.get('notification').showNotification('Account Created successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toAccount\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error(error);\n            _this2.sendAction(\"toAccount\");\n          });\n        }\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction('toAccount');\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        accNo: '',\n        acc_type: '',\n        fullname: '',\n        acc_status: '',\n        username: '',\n        branch_name: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/admin-dashboard', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({});\n});","define('banker/components/auth-form', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    confirmPassword: '',\n    errorMessage: '',\n    bank_name: '',\n    bankNames: [],\n    isSignup: false,\n    BankId: '',\n    nameError: '',\n    dobError: '',\n    pnoError: '',\n    addrError: '',\n    usernameError: '',\n    passwordError: '',\n    confirmPasswordError: '',\n    roleError: '',\n    bankNameError: '',\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.loadBanks();\n    },\n    loadBanks: function loadBanks() {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/banks';\n      // console.log(url);\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('bankNames', response.data);\n      }).catch(function (error) {\n        console.error(\"Failed to load banks:\", error);\n      });\n    },\n    setBankId: function setBankId() {\n      var array = this.get('bankNames');\n      for (var i = 0; i < array.length; i++) {\n        var item = array[i];\n        if (item['bank_name'] === this.get('bank_name')) {\n          this.set('BankId', item['bank_id']);\n          break;\n        }\n      }\n    },\n    checkStorage: function checkStorage() {\n      this.get('sharedData').set('bankId', this.get('BankId'));\n    },\n\n\n    actions: {\n      submitForm: function submitForm() {\n        var username = this.get('username');\n        var password = this.get('password');\n        var selectedRole = this.get('selectedRole');\n\n        if (!username || !password) {\n          this.set('errorMessage', 'Username and password are required.');\n          return;\n        }\n\n        if (!this.get('isSuper') && !this.get('isSignup') && !this.get('bank_name')) {\n          this.set('errorMessage', 'Please select a bank');\n          return;\n        }\n\n        if (password.length < 8) {\n          this.set('errorMessage', 'Password must be at least 8 characters.');\n          return;\n        }\n\n        if (this.get('isSignup')) {\n          var confirmPassword = this.get('confirmPassword');\n          if (password !== confirmPassword) {\n            this.set('errorMessage', 'Passwords do not match.');\n            return;\n          }\n\n          if (!this.get('name') || !this.get('dob') || !this.get('addr') || !this.get('pno') || !selectedRole) {\n            this.set('errorMessage', 'All fields are required for signup.');\n            return;\n          }\n\n          if (this.get('pno').length !== 10 || isNaN(this.get('pno'))) {\n            this.set('errorMessage', 'Please enter a valid 10-digit phone number.');\n            return;\n          }\n        }\n\n        this.set('errorMessage', '');\n\n        var action = this.get('isSignup') ? 'onSignup' : 'onLogin';\n\n        this.setBankId();\n        this.checkStorage();\n        var dob = this.get('dob');\n        var date = dob ? new Date(dob) : null;\n        var formattedDate = date && !isNaN(date.getTime()) ? date.toISOString().slice(0, 10) : 'Invalid Date';\n\n        var credentials = {\n          username: this.get('username'),\n          password: this.get('password'),\n          user_role: this.get('selectedRole') == _util.role.ADMIN ? 0 : this.get('selectedRole') == _util.role.MANAGER ? 1 : 2,\n          full_name: this.get('name'),\n          date_of_birth: formattedDate,\n          user_address: this.get('addr'),\n          user_phonenumber: this.get('pno'),\n          bank_id: this.get('BankId')\n        };\n\n        this.sendAction(action, credentials);\n        this.resetForm();\n      },\n      toggleMode: function toggleMode() {\n        this.toggleProperty('isSignup');\n        this.sendAction(this.get('isSignup') ? 'toSignup' : 'toLogin');\n      },\n      superAdminForm: function superAdminForm() {\n        if (!this.get('username') || !this.get('password')) {\n          this.set('errorMessage', 'All fields are required.');\n          return;\n        }\n        var credentials = {\n          username: this.get('username'),\n          password: this.get('password')\n        };\n        this.sendAction(\"toSuperAdmin\", credentials);\n      },\n      validateName: function validateName() {\n        if (!this.get('name')) {\n          this.set('nameError', 'Name is required.');\n        } else {\n          this.set('nameError', '');\n        }\n      },\n      validateDob: function validateDob() {\n        if (!this.get('dob')) {\n          this.set('dobError', 'Date of birth is required.');\n        } else {\n          this.set('dobError', '');\n        }\n      },\n      validatePno: function validatePno() {\n        var pno = this.get('pno');\n        if (!pno || pno.length !== 10 || isNaN(pno)) {\n          this.set('pnoError', 'Please enter a valid 10-digit phone number.');\n        } else {\n          this.set('pnoError', '');\n        }\n      },\n      validateAddr: function validateAddr() {\n        if (!this.get('addr')) {\n          this.set('addrError', 'Address is required.');\n        } else {\n          this.set('addrError', '');\n        }\n      },\n      validateUsername: function validateUsername() {\n        if (!this.get('username')) {\n          this.set('usernameError', 'Username is required.');\n        } else {\n          this.set('usernameError', '');\n        }\n      },\n      validatePassword: function validatePassword() {\n        var password = this.get('password');\n        if (!password || password.length < 8) {\n          this.set('passwordError', 'Password must be at least 8 characters.');\n        } else {\n          this.set('passwordError', '');\n        }\n      },\n      validatePass: function validatePass() {\n        var password = this.get('password');\n        if (!password || password.length < 8) {\n          this.set('passwordError', 'Invalid password');\n        } else {\n          this.set('passwordError', '');\n        }\n      },\n      validateConfirmPassword: function validateConfirmPassword() {\n        if (!this.get('confirmPassword')) {\n          this.set('confirmPasswordError', 'Confirm Password is required.');\n        } else if (this.get('password') !== this.get('confirmPassword')) {\n          this.set('confirmPasswordError', 'Passwords do not match.');\n        } else {\n          this.set('confirmPasswordError', '');\n        }\n      },\n      validateRole: function validateRole() {\n        if (!this.get('selectedRole')) {\n          this.set('roleError', 'Please select a role.');\n        } else {\n          this.set('roleError', '');\n        }\n      },\n      validateBankName: function validateBankName() {\n        if (!this.get('bank_name')) {\n          this.set('bankNameError', 'Please select a bank.');\n        } else {\n          this.set('bankNameError', '');\n        }\n      }\n    },\n    resetForm: function resetForm() {\n      this.setProperties({\n        username: '',\n        password: '',\n        confirmPassword: '',\n        selectedRole: '',\n        name: '',\n        dob: '',\n        addr: '',\n        pno: '',\n        bank_name: '',\n        BankId: '',\n        nameError: '',\n        dobError: '',\n        pnoError: '',\n        addrError: '',\n        usernameError: '',\n        passwordError: '',\n        confirmPasswordError: '',\n        roleError: '',\n        bankNameError: '',\n        errorMessage: ''\n      });\n    }\n  });\n});","define('banker/components/branch-input', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    errorMessage: '',\n    branchId: '',\n    name: '',\n    address: '',\n    branch_number: '',\n    sharedData: Ember.inject.service('shared-data'),\n    manager_id: '',\n    isEdit: false,\n    availableManagers: [],\n    init: function init() {\n      this._super.apply(this, arguments);\n      // console.log(\"init...\");\n      this.loadManagers();\n    },\n    loadManagers: function loadManagers() {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + '/users?filter_manager=true';\n\n      // console.log(this.get('bankId'));\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('availableManagers', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load managers:\", error);\n      });\n    },\n\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('name') || this.get('name').trim() === '') {\n          this.set(\"errorMessage\", 'Branch name cannot be empty.');\n          return;\n        }\n\n        if (!this.get('address') || this.get('address').trim() === '') {\n          this.set(\"errorMessage\", 'Branch address cannot be empty.');\n          return;\n        }\n\n        if (!this.get('manager_id') || this.get('manager_id') <= 0) {\n          this.set(\"errorMessage\", 'Invalid Manager ID .');\n          return;\n        }\n\n        var branchData = {\n          branch_name: this.get('name'),\n          branch_address: this.get('address'),\n          manager_id: this.get('manager_id'),\n          bankId: this.get('sharedData').get('bankId'),\n          branchId: this.get('branchId')\n        };\n\n        if (this.get('isEdit')) {\n          var bankId = this.get('sharedData').get('bankId');\n          var url = 'http://localhost:8080/banker/api/v1/';\n          if (bankId != \"*\") {\n            url = url + ('banks/' + bankId);\n          }\n          // console.log(branchData);\n          if (branchData.branchId != '*') {\n            url = url + ('/branches/' + branchData.branchId);\n          }\n          this.get('fetchService').fetch(url, _util.methods.PUT, branchData).then(function () {\n\n            // console.log('Branch updated successfully!');\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Branch Edited successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toBranch\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error updating branch:', error);\n          });\n        } else {\n\n          var _bankId = this.get('sharedData').get('bankId');\n          var _url = 'http://localhost:8080/banker/api/v1/';\n          if (_bankId != \"*\") {\n            _url = _url + ('banks/' + _bankId);\n          }\n          _url = _url + '/branches';\n\n          this.get('fetchService').fetch(_url, _util.methods.POST, branchData).then(function () {\n            // console.log('Branch created successfully!');\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Branch Created successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toBranch\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error creating branch:', error);\n          });\n        }\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction(\"toBranch\");\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        name: '',\n        address: '',\n        manager_id: '',\n        branch_number: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/customer-dashboard', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        calculateEMI: function calculateEMI(loanAmount, interestRate, tenureMonths, loanAvailedDate) {\n            var monthlyInterestRate = interestRate / 12 / 100;\n            var emiAmount = loanAmount * monthlyInterestRate * Math.pow(1 + monthlyInterestRate, tenureMonths) / (Math.pow(1 + monthlyInterestRate, tenureMonths) - 1);\n            emiAmount = Math.round(emiAmount);\n            var emiSchedule = [];\n            var currentPaymentDate = new Date(loanAvailedDate);\n\n            for (var i = 1; i <= tenureMonths; i++) {\n                currentPaymentDate.setMonth(currentPaymentDate.getMonth() + 1);\n                emiSchedule.push({\n                    emiNumber: i,\n                    toBePaidDate: new Date(currentPaymentDate),\n                    actualPaidDate: null,\n                    emiAmount: emiAmount\n                });\n            }\n\n            return emiSchedule;\n        },\n\n        actions: {\n            showEmiModal: function showEmiModal(loanDetails) {\n\n                if (loanDetails) {\n                    var loanAmount = loanDetails.loan_amount;\n                    var interestRate = loanDetails.loan_interest;\n                    var tenureMonths = loanDetails.loan_duration;\n                    var loanAvailedDate = loanDetails.loan_availed_date;\n\n                    var emiSchedule = this.calculateEMI(loanAmount, interestRate, tenureMonths, loanAvailedDate);\n                    this.set('emiSchedule', emiSchedule);\n                    this.set('selectedLoanId', loanDetails.loan_id);\n                    this.set('emi', emiSchedule[0]);\n                    document.getElementById('emiModal').style.display = 'flex';\n                } else {\n                    console.error(\"Loan details not found for the selected loan ID\");\n                }\n            },\n            closeEmiModal: function closeEmiModal() {\n                document.getElementById('emiModal').style.display = 'none';\n            }\n        }\n\n    });\n});","define('banker/components/ember-notify', ['exports', 'ember-notify/components/ember-notify'], function (exports, _emberNotify) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberNotify.default;\n});","define('banker/components/ember-notify/message', ['exports', 'ember-notify/components/ember-notify/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _message.default;\n});","define('banker/components/loan-input', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    errorMessage: '',\n    accounts: [],\n    loan_id: '',\n    loan_type: '',\n    loan_amount: '',\n    loan_interest: '',\n    loan_duration: '',\n    loan_status: '',\n    loan_availed_date: '',\n    isEdit: false,\n    isDirect: false,\n    accNo: '',\n    sharedData: Ember.inject.service('shared-data'),\n    userRole: _util.role,\n    statuses: [_util.loanStatus.PENDING, _util.loanStatus.APPROVED],\n    types: [_util.loanType.BUSINESSLOAN, _util.loanType.EDUCATIONLOAN, _util.loanType.HOMELOAN],\n    durations: [6, 12, 18, 24],\n    init: function init() {\n      this._super.apply(this, arguments);\n      // console.log(\"Loan form initialized...\");\n      if (this.get('isDirect')) {\n        this.loadAccounts();\n      }\n    },\n\n    role: Ember.computed('accounts', function () {\n\n      return (0, _util.getSessionData)().user_role;\n    }),\n\n    filteredStatuses: Ember.computed('loan_amount', function () {\n      if (this.get('loan_amount') > 3000000) {\n        return [_util.loanStatus.PENDING, _util.loanStatus.REJECTED];\n      } else if (this.get('loan_status') == _util.loanStatus.APPROVED) {\n        return [_util.loanStatus.APPROVED, _util.loanStatus.CLOSED];\n      } else {\n        return [_util.loanStatus.PENDING, _util.loanStatus.APPROVED];\n      }\n    }),\n\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n\n    loadAccounts: function loadAccounts() {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var bankId = this.get('sharedData').get('bankId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      url = url + '/accounts?filter_status=active';\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('accounts', response.data);\n      }).catch(function () {\n        console.error(\"Failed to load accounts:\");\n      });\n    },\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('types').includes(this.get('loan_type'))) {\n          this.set(\"errorMessage\", 'Please select a valid loan type.');\n          return;\n        }\n\n        if (this.get('role') != this.userRole.CUSTOMER) {\n          if (this.get('isEdit')) {\n            if (!this.get('filteredStatuses').includes(this.get('loan_status'))) {\n              this.set(\"errorMessage\", \"Please select a valid loan status.\");\n              return;\n            }\n          } else {\n            if (!this.get('statuses').includes(this.get('loan_status'))) {\n              this.set(\"errorMessage\", \"Please select a valid loan status.\");\n              return;\n            }\n          }\n        }\n\n        if (!this.get('loan_amount') || this.get('loan_amount') <= 0) {\n          this.set(\"errorMessage\", 'Loan amount must be a positive number.');\n          return;\n        }\n\n        if (!this.get('loan_duration') || this.get('loan_duration') <= 0) {\n          this.set(\"errorMessage\", 'Loan duration must be a positive number.');\n          return;\n        }\n\n        var loanData = {\n          loan_type: this.get('loan_type') == _util.loanType.HOMELOAN ? 0 : this.get('loan_type') == _util.loanType.BUSINESSLOAN ? 1 : 2,\n          loan_amount: this.get('loan_amount'),\n          loan_duration: this.get('loan_duration'),\n          loan_status: this.get('loan_status') == '' ? 0 : this.get('loan_status') == _util.loanStatus.PENDING ? 0 : this.get('loan_status') == _util.loanStatus.APPROVED ? 1 : this.get('loan_status') == _util.loanStatus.CLOSED ? 2 : 3,\n          acc_number: this.get('isDirect') ? this.get('accNo') : this.get('sharedData').get('accNo')\n        };\n\n        var url = 'http://localhost:8080/banker/api/v1/';\n        var bankId = this.get('sharedData').get(\"bankId\");\n        var branchid = this.get('sharedData').get(\"branchId\");\n        var accno = loanData.acc_number;\n        var loanId = this.get('sharedData').get(\"loanId\");\n        if (bankId != \"*\") {\n          url = url + ('banks/' + bankId);\n        }\n        if (branchid != '*') {\n          url = url + ('/branches/' + branchid);\n        }\n        if (accno != \"*\") {\n          url = url + ('/accounts/' + accno);\n        }\n\n        if (this.get('isEdit')) {\n          if (loanId != \"*\") {\n            url = url + ('/loans/' + loanId);\n          }\n          this.get('fetchService').fetch(url, _util.methods.PUT, loanData).then(function () {\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Loan Edited successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toLoan\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error updating loan:', error);\n          });\n        } else {\n          url = url + '/loans';\n          this.get('fetchService').fetch(url, _util.methods.POST, loanData).then(function () {\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Loan Created successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toLoan\");\n            }, 2000);\n          }).catch(function (error) {\n            _this2.resetForm();\n            _this2.sendAction(\"toLoan\");\n            console.error('Error creating loan:', error);\n          });\n        }\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction('toLoan');\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        loan_id: '',\n        loan_type: '',\n        loan_amount: '',\n        loan_interest: '',\n        loan_duration: '',\n        loan_status: '',\n        loan_availed_date: '',\n        isEdit: false,\n        accNo: ''\n      });\n    }\n  });\n});","define('banker/components/manager-dashboard', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({});\n});","define('banker/components/nav-bar', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    fetchService: Ember.inject.service('fetch'),\n    session: Ember.inject.service(),\n    sharedData: Ember.inject.service('shared-data'),\n    branches: [],\n    userRole: _util.role,\n    role: Ember.computed(function () {\n      return (0, _util.getSessionData)().user_role;\n    }),\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      if (this.get('role') == _util.role.ADMIN || this.get('role') == _util.role.CUSTOMER) {\n        this.loadBranches();\n      }\n    },\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n\n      url = url + '/branches';\n      Ember.run.later(function () {\n        _this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n          // console.log(response);\n          _this.set('branches', response.data);\n        }).catch(function (error) {\n          console.error(\"Failed to load branches:\", error);\n        });\n      }, 3000);\n    },\n    changeBranch: function changeBranch(branchId) {\n\n      this.get('branchSelection').changeBranch(branchId);\n    },\n\n    actions: {\n      navigate: function navigate(routeName) {\n        this.set('branch_name', '');\n        console.log(this.get('branch_name'));\n        this.set('currentRoute', routeName);\n        routeName = routeName + \"Route\";\n        this.get(routeName)();\n      },\n      logout: function logout() {\n        this.get('logout')();\n      },\n      setbranch: function setbranch(branch_name) {\n        var array = this.get('branches');\n\n        if (!Array.isArray(array)) {\n          console.error('branches is not defined or not an array');\n          return;\n        }\n        if (branch_name == '') {\n          this.get('sharedData').set('branchId', '*');\n          this.changeBranch(\"*\");\n        } else {\n          var selectedBranch = array.find(function (item) {\n            return item.branch_name === branch_name;\n          });\n\n          if (selectedBranch) {\n            this.get('sharedData').set('branchId', selectedBranch.branch_id);\n            this.changeBranch(selectedBranch.branch_id);\n            // console.log('Branch ID set to:', selectedBranch.branch_id);\n          } else {\n            console.warn('Branch not found');\n          }\n        }\n      }\n    }\n    // willDestroyElement() {\n    //   this._super(...arguments);\n\n    //   // Remove observer\n    //   this.removeObserver('sharedData.branchId', this, this.handleBranchChange);\n    // },\n  });\n});","define('banker/components/notify-box', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    message: '',\n    type: '',\n\n    classNameBindings: ['type', 'notification-top-right']\n\n  });\n});","define('banker/components/transaction-input', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    errorMessage: '',\n    statuses: [_util.transactionStatus.PENDING, _util.transactionStatus.SUCCESS],\n    types: [_util.transactionType.CREDIT, _util.transactionType.DEBIT],\n    isDirect: false,\n    accounts: [],\n    isEmi: Ember.computed('transaction_type', function () {\n      return this.get('transaction_type') == _util.transactionType.EMI;\n    }),\n    init: function init() {\n      this._super.apply(this, arguments);\n      // console.log(\"Transaction form initialized...\");\n      if (this.get('isDirect')) {\n        this.loadAccounts();\n      }\n    },\n\n    role: Ember.computed('accounts', function () {\n\n      return (0, _util.getSessionData)().user_role;\n    }),\n\n    loadAccounts: function loadAccounts() {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var bankId = this.get('sharedData').get('bankId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      url = url + '/accounts?filter_status=active';\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('accounts', response.data);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n    transaction_datetime: '',\n    transaction_type: '',\n    transaction_status: '',\n    transaction_amount: '',\n    accNo: '',\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('transaction_amount') || this.get('transaction_amount') <= 0) {\n          this.set(\"errorMessage\", 'Transaction amount must be a positive number.');\n          return;\n        }\n        var date = new Date();\n\n        var year = date.getFullYear();\n        var month = String(date.getMonth() + 1).padStart(2, '0');\n        var day = String(date.getDate()).padStart(2, '0');\n\n        var hours = String(date.getHours()).padStart(2, '0');\n        var minutes = String(date.getMinutes()).padStart(2, '0');\n        var seconds = String(date.getSeconds()).padStart(2, '0');\n\n        var formattedDate = year + '-' + month + '-' + day + ' ' + hours + ':' + minutes + ':' + seconds;\n\n        var transactionData = {\n          transaction_datetime: new Date(formattedDate),\n          transaction_type: this.get('transaction_type') == _util.transactionType.CREDIT ? 0 : this.get('transaction_type') == _util.transactionType.DEBIT ? 1 : 2,\n          transaction_amount: this.get('transaction_amount'),\n          acc_number: this.get('isDirect') ? this.get('accNo') : this.get('sharedData').get('accNo')\n        };\n\n        var url = 'http://localhost:8080/banker/api/v1/';\n        var bankId = this.get('sharedData').get('bankId');\n        var branchId = this.get('sharedData').get('branchId');\n        var accno = transactionData.acc_number;\n        if (bankId != \"*\") {\n          url = url + ('banks/' + bankId);\n        }\n        if (branchId != '*') {\n          url = url + ('/branches/' + branchId);\n        }\n        if (accno != \"*\") {\n          url = url + ('/accounts/' + accno);\n        }\n        url = url + '/transactions';\n\n        this.get('fetchService').fetch(url, _util.methods.POST, transactionData).then(function () {\n          // console.log('Transaction created successfully!');\n          _this2.resetForm();\n          _this2.get('notification').showNotification('Transaction Created successfully!', 'success');\n\n          Ember.run.later(function () {\n            _this2.sendAction(\"toTransaction\");\n          }, 2000);\n        }).catch(function (error) {\n          console.error('Error creating transaction:', error);\n          _this2.resetForm();\n          _this2.sendAction(\"toTransaction\");\n        });\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction('toTransaction');\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        transaction_datetime: '',\n        transaction_type: '',\n        transaction_status: '',\n        transaction_amount: '',\n        accNo: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/view-account', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        status: _util.status,\n        actions: {\n            loans: function loans() {\n                this.sendAction(\"toLoans\", this.get('sharedData').get('accNo'));\n            },\n            transactions: function transactions() {\n                this.sendAction(\"toTransactions\", this.get('sharedData').get('accNo'));\n            }\n        }\n\n    });\n});","define('banker/components/view-accounts', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    fetchService: Ember.inject.service('fetch'),\n    accounts: [],\n    userRole: _util.role,\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n    searchQuery: '',\n    selectedAccountType: '',\n    selectedAccountStatus: '',\n    currentPage: 1,\n    itemsPerPage: 8,\n\n    FilteredAccounts: function FilteredAccounts() {\n\n      var selectedAccountType = this.get('selectedAccountType');\n      var selectedAccountStatus = this.get('selectedAccountStatus');\n\n      this.sendAction('changeAccounts', this.get('currentPage'), selectedAccountType, selectedAccountStatus, this.get('searchQuery'));\n    },\n\n\n    totalPages: Ember.computed('totalAccounts', 'itemsPerPage', function () {\n\n      var totalItems = this.get('totalAccounts');\n      var itemsPerPage = this.get('itemsPerPage');\n      return Math.ceil(totalItems / itemsPerPage);\n    }),\n\n    visiblePages: Ember.computed('accounts', 'currentPage', 'totalPages', function () {\n      var currentPage = this.get('currentPage');\n      var totalPages = this.get('totalPages');\n      var visiblePages = [];\n\n      if (totalPages <= 5) {\n        for (var i = 1; i <= totalPages; i++) {\n          visiblePages.push(i);\n        }\n      } else {\n        if (currentPage <= 3) {\n          for (var _i = 1; _i <= 4; _i++) {\n            visiblePages.push(_i);\n          }\n        } else if (currentPage >= totalPages - 2) {\n          for (var _i2 = totalPages - 3; _i2 <= totalPages; _i2++) {\n            visiblePages.push(_i2);\n          }\n        } else {\n          for (var _i3 = currentPage - 1; _i3 <= currentPage + 1; _i3++) {\n            visiblePages.push(_i3);\n          }\n        }\n      }\n\n      return visiblePages;\n    }),\n\n    showFirstPage: Ember.computed('accounts', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showLastPage: Ember.computed('accounts', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    showLeftEllipsis: Ember.computed('accounts', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showRightEllipsis: Ember.computed('accounts', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    searchSuggestion: function searchSuggestion() {\n      var accounts = this.get('accounts') || [];\n      var query = this.get('searchQuery');\n\n      if (query) {\n        var suggestions = [];\n\n        accounts.forEach(function (account) {\n          if (account.username.startsWith(query) && suggestions.indexOf(account.username) === -1) {\n            suggestions.push(account.username);\n          }\n        });\n\n        this.set('searchSuggestions', suggestions);\n      } else {\n        this.set('searchSuggestions', []);\n      }\n    },\n\n\n    actions: {\n      FilterReset: function FilterReset() {\n        this.set('selectedAccountType', '');\n        this.set('selectedAccountStatus', '');\n        this.FilteredAccounts();\n      },\n      AccountType: function AccountType(value) {\n        this.set('selectedAccountType', value);\n        this.FilteredAccounts();\n      },\n      AccountStatus: function AccountStatus(value) {\n        this.set('selectedAccountStatus', value);\n        this.FilteredAccounts();\n      },\n      viewAccount: function viewAccount(account) {\n        this.sendAction('viewaccount', account);\n      },\n      addNewAccount: function addNewAccount() {\n        this.sendAction('toaddNewAccount');\n      },\n      editAccount: function editAccount(account) {\n        this.sendAction('toeditAccount', true, account);\n      },\n      goToPage: function goToPage(page) {\n        this.set('currentPage', page);\n        this.sendAction('changeAccounts', page, this.get('selectedAccountType'), this.get('selectedAccountStatus'), this.get('searchQuery'));\n      },\n      nextPage: function nextPage() {\n        var currentPage = this.get('currentPage');\n        var totalPages = this.get('totalPages');\n        if (currentPage < totalPages) {\n          this.incrementProperty('currentPage');\n        }\n        this.sendAction('changeAccounts', this.get('currentPage'), this.get('selectedAccountType'), this.get('selectedAccountStatus'), this.get('searchQuery'));\n      },\n      previousPage: function previousPage() {\n        var currentPage = this.get('currentPage');\n        if (currentPage > 1) {\n          this.decrementProperty('currentPage');\n        }\n        this.sendAction('changeAccounts', this.get('currentPage'), this.get('selectedAccountType'), this.get('selectedAccountStatus'), this.get('searchQuery'));\n      },\n      updateSearchQuery: function updateSearchQuery(value) {\n        this.set('searchQuery', value);\n        this.searchSuggestion();\n      },\n      performSearch: function performSearch() {\n\n        this.sendAction('changeAccounts', this.get('currentPage'), this.get('selectedAccountType'), this.get('selectedAccountStatus'), this.get('searchQuery'));\n\n        this.set('currentPage', 1);\n        this.set('searchSuggestions', []);\n      },\n      selectSuggestion: function selectSuggestion(suggestion) {\n        this.set('searchQuery', suggestion);\n        this.searchSuggestion();\n        this.set('currentPage', 1);\n      }\n    }\n  });\n});","define('banker/components/view-loan', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        status: _util.loanStatus,\n        actions: {\n            toEmis: function toEmis(loan) {\n                var InterestRate = loan.loan_interest / 12 / 100;\n                var emiAmount = loan.loan_amount * InterestRate * Math.pow(1 + InterestRate, loan.loan_duration) / (Math.pow(1 + InterestRate, loan.loan_duration) - 1);\n                emiAmount = Math.round(emiAmount);\n                this.sendAction(\"toEmis\", loan, emiAmount);\n            }\n        }\n    });\n});","define('banker/components/view-loans', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    loans: [],\n    userRole: _util.role,\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n    selectQuery: '',\n    selectedLoanType: '',\n    selectedLoanStatus: '',\n    currentPage: 1,\n    itemsPerPage: 8,\n    status: _util.loanStatus,\n    FilteredLoans: function FilteredLoans() {\n\n      var selectedLoanType = this.get('selectedLoanType');\n      var selectedLoanStatus = this.get('selectedLoanStatus');\n\n      this.sendAction('changeLoans', this.get('currentPage'), selectedLoanType, selectedLoanStatus, this.get('searchQuery'));\n      // accounts = accounts.filter(account => account.acc_type === selectedLoanType);\n    },\n\n\n    totalPages: Ember.computed('totalLoans', 'itemsPerPage', function () {\n      var totalItems = this.get('totalLoans');\n      var itemsPerPage = this.get('itemsPerPage');\n      return Math.ceil(totalItems / itemsPerPage);\n    }),\n\n    visiblePages: Ember.computed('loans', 'currentPage', 'totalPages', function () {\n      var currentPage = this.get('currentPage');\n      var totalPages = this.get('totalPages');\n      var visiblePages = [];\n\n      if (totalPages <= 5) {\n        for (var i = 1; i <= totalPages; i++) {\n          visiblePages.push(i);\n        }\n      } else {\n        if (currentPage <= 3) {\n          for (var _i = 1; _i <= 4; _i++) {\n            visiblePages.push(_i);\n          }\n        } else if (currentPage >= totalPages - 2) {\n          for (var _i2 = totalPages - 3; _i2 <= totalPages; _i2++) {\n            visiblePages.push(_i2);\n          }\n        } else {\n          for (var _i3 = currentPage - 1; _i3 <= currentPage + 1; _i3++) {\n            visiblePages.push(_i3);\n          }\n        }\n      }\n\n      return visiblePages;\n    }),\n\n    showFirstPage: Ember.computed('loans', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showLastPage: Ember.computed('loans', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    showLeftEllipsis: Ember.computed('loans', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showRightEllipsis: Ember.computed('loans', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n    searchSuggestion: function searchSuggestion() {\n      var loans = this.get('loans') || [];\n      var query = this.get('searchQuery');\n\n      if (query) {\n        var suggestions = [];\n\n        loans.forEach(function (loan) {\n          if (loan.acc_number.toString().startsWith(query) && suggestions.indexOf(loan.acc_number) === -1) {\n            suggestions.push(loan.acc_number);\n          }\n        });\n\n        this.set('searchSuggestions', suggestions);\n      } else {\n        this.set('searchSuggestions', []);\n      }\n    },\n\n    actions: {\n      FilterReset: function FilterReset() {\n        this.set('selectedLoanType', '');\n        this.set('selectedLoanStatus', '');\n        this.FilteredLoans();\n      },\n      LoanType: function LoanType(value) {\n        this.set('selectedLoanType', value);\n        this.FilteredLoans();\n      },\n      LoanStatus: function LoanStatus(value) {\n        this.set('selectedLoanStatus', value);\n        this.FilteredLoans();\n      },\n      viewLoan: function viewLoan(loan) {\n        this.sendAction('viewLoan', loan);\n      },\n      addNewLoan: function addNewLoan() {\n        this.sendAction('toaddNewLoan');\n      },\n      editLoan: function editLoan(loan) {\n        this.sendAction('toeditLoan', true, loan);\n      },\n      goToPage: function goToPage(page) {\n        this.set('currentPage', page);\n\n        this.sendAction('changeLoans', page, this.get('selectedLoanType'), this.get('selectedLoanStatus'), this.get('searchQuery'));\n      },\n      nextPage: function nextPage() {\n        var currentPage = this.get('currentPage');\n        var totalPages = this.get('totalPages');\n        if (currentPage < totalPages) {\n          this.incrementProperty('currentPage');\n        }\n        this.sendAction('changeLoans', this.get('currentPage'), this.get('selectedLoanType'), this.get('selectedLoanStatus'), this.get('searchQuery'));\n      },\n      previousPage: function previousPage() {\n        var currentPage = this.get('currentPage');\n        if (currentPage > 1) {\n          this.decrementProperty('currentPage');\n        }\n        this.sendAction('changeLoans', this.get('currentPage'), this.get('selectedLoanType'), this.get('selectedLoanStatus'), this.get('searchQuery'));\n      },\n      updateSearchQuery: function updateSearchQuery(value) {\n        this.set('searchQuery', value);\n        this.searchSuggestion();\n      },\n      performSearch: function performSearch() {\n\n        this.sendAction('changeLoans', this.get('currentPage'), this.get('selectedLoanType'), this.get('selectedLoanStatus'), this.get('searchQuery'));\n\n        this.set('currentPage', 1);\n        this.set('searchSuggestions', []);\n      },\n      selectSuggestion: function selectSuggestion(suggestion) {\n        this.set('searchQuery', suggestion);\n        this.searchSuggestion();\n\n        this.set('currentPage', 1);\n      }\n    }\n  });\n});","define('banker/components/view-transaction', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({});\n});","define('banker/components/view-transactions', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    transactions: [],\n    userRole: _util.role,\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n    searchQuery: '',\n    selectedTransactionType: '',\n    selectedTransactionStatus: '',\n    currentPage: 1,\n    itemsPerPage: 8,\n\n    filteredTransactions: Ember.computed('transactions', 'selectedTransactionType', 'selectedTransactionStatus', function () {\n      var transactions = this.get('transactions') || [];\n      var selectedTransactionType = this.get('selectedTransactionType');\n      var selectedTransactionStatus = this.get('selectedTransactionStatus');\n\n      if (selectedTransactionType) {\n        transactions = transactions.filter(function (transaction) {\n          return transaction.transaction_type === selectedTransactionType;\n        });\n      }\n\n      if (selectedTransactionStatus) {\n        transactions = transactions.filter(function (transaction) {\n          return transaction.transaction_status === selectedTransactionStatus;\n        });\n      }\n\n      return transactions;\n    }),\n\n    FilteredTransactions: function FilteredTransactions() {\n\n      var selectedTransactionType = this.get('selectedTransactionType');\n      var selectedTransactionStatus = this.get('selectedTransactionStatus');\n\n      this.sendAction('changeTransactions', this.get('currentPage'), selectedTransactionType, selectedTransactionStatus, this.get('searchQuery'));\n    },\n\n\n    totalPages: Ember.computed('totalTransactions', 'itemsPerPage', function () {\n      var totalItems = this.get('totalTransactions');\n      var itemsPerPage = this.get('itemsPerPage');\n      return Math.ceil(totalItems / itemsPerPage);\n    }),\n\n    visiblePages: Ember.computed('transactions', 'currentPage', 'totalPages', function () {\n      var currentPage = this.get('currentPage');\n      var totalPages = this.get('totalPages');\n      var visiblePages = [];\n\n      if (totalPages <= 5) {\n        for (var i = 1; i <= totalPages; i++) {\n          visiblePages.push(i);\n        }\n      } else {\n        if (currentPage <= 3) {\n          for (var _i = 1; _i <= 4; _i++) {\n            visiblePages.push(_i);\n          }\n        } else if (currentPage >= totalPages - 2) {\n          for (var _i2 = totalPages - 3; _i2 <= totalPages; _i2++) {\n            visiblePages.push(_i2);\n          }\n        } else {\n          for (var _i3 = currentPage - 1; _i3 <= currentPage + 1; _i3++) {\n            visiblePages.push(_i3);\n          }\n        }\n      }\n\n      return visiblePages;\n    }),\n\n    showFirstPage: Ember.computed('transactions', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showLastPage: Ember.computed('transactions', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    showLeftEllipsis: Ember.computed('transactions', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showRightEllipsis: Ember.computed('transactions', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    searchSuggestion: function searchSuggestion() {\n      var transactions = this.get('transactions') || [];\n      var query = this.get('searchQuery');\n\n      if (query) {\n        var suggestions = [];\n\n        transactions.forEach(function (transaction) {\n\n          if (transaction.acc_number.toString().startsWith(query) && suggestions.indexOf(transaction.acc_number) === -1) {\n            suggestions.push(transaction.acc_number);\n          }\n        });\n\n        this.set('searchSuggestions', suggestions);\n      } else {\n        this.set('searchSuggestions', []);\n      }\n    },\n\n\n    actions: {\n      FilterReset: function FilterReset() {\n        this.set('selectedTransactionType', '');\n        this.set('selectedTransactionStatus', '');\n        this.FilteredTransactions();\n      },\n      TransactionType: function TransactionType(value) {\n        this.set('selectedTransactionType', value);\n        this.FilteredTransactions();\n      },\n      TransactionStatus: function TransactionStatus(value) {\n        this.set('selectedTransactionStatus', value);\n        this.FilteredTransactions();\n      },\n      viewTransaction: function viewTransaction(transaction) {\n        this.sendAction('viewTransaction', transaction);\n      },\n      addNewTransaction: function addNewTransaction() {\n        this.sendAction('toaddNewTransaction');\n      },\n      goToPage: function goToPage(page) {\n        this.set('currentPage', page);\n        this.sendAction('changeTransactions', page, this.get('selectedTransactionType'), this.get('selectedTransactionStatus'), this.get('searchQuery'));\n      },\n      nextPage: function nextPage() {\n        var currentPage = this.get('currentPage');\n        var totalPages = this.get('totalPages');\n        if (currentPage < totalPages) {\n          this.incrementProperty('currentPage');\n        }\n        this.sendAction('changeTransactions', this.get('currentPage'), this.get('selectedTransactionType'), this.get('selectedTransactionStatus'), this.get('searchQuery'));\n      },\n      previousPage: function previousPage() {\n        var currentPage = this.get('currentPage');\n        if (currentPage > 1) {\n          this.decrementProperty('currentPage');\n        }\n        this.sendAction('changeTransactions', this.get('currentPage'), this.get('selectedTransactionType'), this.get('selectedTransactionStatus'), this.get('searchQuery'));\n      },\n      updateSearchQuery: function updateSearchQuery(value) {\n        this.set('searchQuery', value);\n        this.searchSuggestion();\n      },\n      performSearch: function performSearch() {\n\n        this.sendAction('changeTransactions', this.get('currentPage'), this.get('selectedTransactionType'), this.get('selectedTransactionStatus'), this.get('searchQuery'));\n\n        this.set('currentPage', 1);\n        this.set('searchSuggestions', []);\n      },\n      selectSuggestion: function selectSuggestion(suggestion) {\n        this.set('searchQuery', suggestion);\n        this.searchSuggestion();\n\n        this.set('currentPage', 1);\n      }\n    }\n  });\n});","define('banker/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('banker/controllers/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service('session'),\n    sharedData: Ember.inject.service('shared-data'),\n    fetchService: Ember.inject.service('fetch'),\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n    isAuthRoute: Ember.computed('currentRouteName', function () {\n      var authRoutes = ['login', 'register', 'index', 'super-admin-login'];\n      return authRoutes.includes(this.get('currentRouteName'));\n    }),\n\n    actions: {\n      logout: function logout() {\n        var _this = this;\n\n        this.get('session').logout().then(function () {\n          _this.transitionToRoute('login');\n        });\n      },\n      toUsers: function toUsers() {\n        this.transitionToRoute('users');\n      },\n      toBank: function toBank() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        this.transitionToRoute('banks.bank', this.get('bankId'));\n      },\n      toBanks: function toBanks() {\n        this.transitionToRoute('banks');\n      },\n      toBranch: function toBranch() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        var bankId = this.get('bankId');\n        // console.log(this.get('branchId'));\n        this.transitionToRoute('banks.bank.branches.branch', bankId, this.get('sharedData').get('branchId')).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: bankId\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      toBranches: function toBranches() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        this.transitionToRoute('banks.bank.branches', this.get('bankId'));\n      },\n      toAccounts: function toAccounts() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        this.transitionToRoute('banks.bank.accounts', this.get('bankId'));\n      },\n      todashboard: function todashboard() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        // console.log(\"bankId : \"+this.get('bankId'));\n        this.transitionToRoute('banks.bank.users.user.dashboard', this.get('bankId'), this.get('userId'));\n      },\n      toTransactions: function toTransactions() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        this.transitionToRoute('banks.bank.transactions', this.get('bankId'));\n      },\n      toLoans: function toLoans() {\n        this.set('bankId', this.get('sharedData').get('bankId'));\n        this.transitionToRoute('banks.bank.loans', this.get('bankId'));\n      }\n    }\n  });\n});","define('banker/controllers/banks', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account', ['exports'], function (exports) {\n   'use strict';\n\n   Object.defineProperty(exports, \"__esModule\", {\n      value: true\n   });\n   exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toAccount: function toAccount() {\n                this.transitionToRoute(\"banks.bank.accounts\", this.get('sharedData').get('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/accounts/account/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    acc: [],\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    loadAccount: function loadAccount(accNo) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get('branchId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accNo != \"*\") {\n        url = url + ('/accounts/' + accNo);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('acc', response.data);\n        _this.set('acc', _this.get('acc')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load account:\", error);\n      });\n    },\n\n    actions: {\n      toLoans: function toLoans() {\n        this.transitionToRoute('banks.bank.accounts.account.loans', this.get('sharedData').get('accNo'));\n      },\n      toTransactions: function toTransactions() {\n        this.transitionToRoute('banks.bank.accounts.account.transactions', this.get('sharedData').get('accNo'));\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/account/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/loans/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    loans: [],\n    loadLoans: function loadLoans(page, selectedType, selectedStatus, searchQuery) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + ('/loans?page=' + page);\n\n      if (selectedType && selectedType != '') {\n        url = url + ('&filter_type=' + selectedType);\n      }\n      if (selectedStatus && selectedStatus != '') {\n        url = url + ('&filter_status=' + selectedStatus);\n      }\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('loans', response.data);\n        _this.set('totalLoans', response.totalLoans);\n      }).catch(function (error) {\n        _this.set('loans', []);\n        console.error(\"Failed to load loans:\", error);\n      });\n    },\n\n    actions: {\n      viewloan: function viewloan(loan) {\n        this.transitionToRoute('banks.bank.accounts.account.loans.loan', loan.acc_number, loan.loan_id);\n      },\n      addNewLoan: function addNewLoan() {\n        this.transitionToRoute('banks.bank.accounts.account.loans.new');\n      },\n      editLoan: function editLoan(isEdit, loan) {\n        this.transitionToRoute('banks.bank.accounts.account.loans.loan.edit', loan.loan_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: isEdit,\n            loan_id: loan.loan_id,\n            loan_type: loan.loan_type,\n            loan_amount: loan.loan_amount,\n            loan_interest: loan.loan_interest,\n            loan_duration: loan.loan_duration,\n            loan_status: loan.loan_status,\n            loan_availed_date: loan.loan_availed_date\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      },\n      changeLoans: function changeLoans(page, selectedType, selectedStatus, searchQuery) {\n        this.loadLoans(page, selectedType, selectedStatus, searchQuery);\n      }\n    }\n\n  });\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan', ['exports'], function (exports) {\n   'use strict';\n\n   Object.defineProperty(exports, \"__esModule\", {\n      value: true\n   });\n   exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.accounts.account.loans\", this.get('sharedData').get('accNo'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan/emi', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        fetchService: Ember.inject.service('fetch'),\n        sharedData: Ember.inject.service('shared-data'),\n        emis: [],\n        generatedEmis: [],\n\n        loadEmis: function loadEmis() {\n            var _this = this;\n\n            var bankId = this.get('sharedData').get('bankId');\n            var loanId = this.get('sharedData').get('loanId');\n            var url = 'http://localhost:8080/banker/api/v1/';\n\n            if (bankId != \"*\") {\n                url = url + ('banks/' + bankId);\n            }\n\n            if (loanId != '*') {\n                url = url + ('/loans/' + loanId);\n            }\n            url = url + '/emis';\n\n            this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n                _this.set('emis', response);\n                _this.set('generatedEmis', _this.generateTable(_this.get('emis')));\n            }).catch(function (error) {\n                console.error(\"Failed to load EMIs:\", error);\n            });\n        },\n        generateTable: function generateTable(emis) {\n            var emiSchedule = [];\n\n            var totalEmis = this.get('loan').loan_duration;\n\n            var loanAvailedDate = this.get('loan').length <= 0 ? new Date() : new Date(this.get('loan').loan_availed_date.replace(/-/g, '/'));\n\n            var emisArray = this.get('emis');\n\n            for (var i = 0; i < emisArray.length; i++) {\n                var emi = emisArray[i];\n                var emiNumber = emi.emi_number || '-';\n                var transactionId = emi.transaction_id || '-';\n                var actualPaidDate = emi.actual_paid_date ? new Date(emi.actual_paid_date.replace(/-/g, '/')) : '-';\n\n                var toBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(toBePaidDate.getTime())) {\n                    toBePaidDate.setMonth(toBePaidDate.getMonth() + emiNumber);\n                } else {\n                    toBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: emiNumber,\n                    transactionId: transactionId,\n                    toBePaidDate: toBePaidDate instanceof Date ? toBePaidDate.toLocaleDateString() : toBePaidDate,\n                    actualPaidDate: actualPaidDate instanceof Date ? actualPaidDate.toLocaleDateString() : actualPaidDate\n                });\n            }\n\n            var nextEmiNumber = emis.length > 0 ? emis[emis.length - 1].emi_number + 1 : 1;\n            if (nextEmiNumber <= totalEmis) {\n                var nextToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(nextToBePaidDate.getTime())) {\n                    nextToBePaidDate.setMonth(nextToBePaidDate.getMonth() + nextEmiNumber);\n                } else {\n                    nextToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: nextEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: nextToBePaidDate instanceof Date ? nextToBePaidDate.toLocaleDateString() : nextToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            if (emiSchedule.length === 0) {\n                var firstEmiNumber = 1;\n                var firstToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(firstToBePaidDate.getTime())) {\n                    firstToBePaidDate.setMonth(firstToBePaidDate.getMonth() + firstEmiNumber);\n                } else {\n                    firstToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: firstEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: firstToBePaidDate instanceof Date ? firstToBePaidDate.toLocaleDateString() : firstToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            return emiSchedule;\n        },\n\n\n        actions: {\n            addNewEmi: function addNewEmi() {\n                var _this2 = this;\n\n                this.transitionToRoute('banks.bank.accounts.account.transactions.new', this.get('sharedData').get('bankId'), this.get('loan').acc_number).then(function (newRoute) {\n                    newRoute.controller.setProperties({\n                        transaction_type: 'emi',\n                        transaction_amount: _this2.get('emiAmount')\n                    });\n                }).catch(function (error) {\n                    console.error(\"Transition failed\", error);\n                });\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    loan: [],\n    loadLoan: function loadLoan(loanId) {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (loanId != \"*\") {\n        url = url + ('/loans/' + loanId);\n      }\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('loan', response.data);\n        _this.set('loan', _this.get('loan')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load loan:\", error);\n      });\n    },\n\n\n    actions: {\n      toEmis: function toEmis(loan, emiAmount) {\n        var bankId = this.get('sharedData').get('bankId');\n        this.transitionToRoute(\"banks.bank.accounts.account.loans.loan.emi\", bankId, loan.acc_number, loan.loan_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            loan: loan,\n            emiAmount: emiAmount\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/account/loans/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.accounts.account.loans\", this.get('sharedData').get('accNo'));\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/accounts/account/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/transactions/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    transactions: [],\n    sharedData: Ember.inject.service('shared-data'),\n    loadTransactions: function loadTransactions(page, selectedType, selectedStatus, searchQuery) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + ('/transactions?page=' + page);\n\n      if (selectedType && selectedType != '') {\n        url = url + ('&filter_type=' + selectedType);\n      }\n      if (selectedStatus && selectedStatus != '') {\n        url = url + ('&filter_status=' + selectedStatus);\n      }\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('transactions', response.data);\n        _this.set('totalTransactions', response.totalTransactions);\n      }).catch(function (error) {\n        _this.set('transactions', []);\n        console.error(\"Failed to load transactions:\", error);\n      });\n    },\n\n\n    actions: {\n      viewTransaction: function viewTransaction(transaction) {\n        this.transitionToRoute('banks.bank.accounts.account.transactions.transaction', transaction.acc_number, transaction.transaction_id);\n      },\n      addNewTransaction: function addNewTransaction() {\n        // console.log(branchId);\n        this.transitionToRoute('banks.bank.accounts.account.transactions.new');\n      },\n      changeTransactions: function changeTransactions(page, selectedType, selectedStatus, searchQuery) {\n        this.loadTransactions(page, selectedType, selectedStatus, searchQuery);\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/account/transactions/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toTransaction: function toTransaction() {\n                this.transitionToRoute(\"banks.bank.accounts.account.transactions\", this.get('sharedData').get('accNo'));\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/accounts/account/transactions/transaction', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    fetchService: Ember.inject.service('fetch'),\n    transaction: [],\n    sharedData: Ember.inject.service('shared-data'),\n    loadTransaction: function loadTransaction(transactionId) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (transactionId != \"*\") {\n\n        url = url + ('/transactions/' + transactionId);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('transaction', response.data);\n        _this.set('transaction', _this.get('transaction')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load transaction:\", error);\n      });\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.get('branchSelection').on('branchChanged', this, this.handleBranchChange);\n    },\n    handleBranchChange: function handleBranchChange(currentRouteName) {\n      // console.log(currentRouteName);\n      if (currentRouteName == 'banks.bank.accounts.index') {\n        this.loadAccounts(1);\n      }\n    },\n\n    accounts: [],\n\n    loadAccounts: function loadAccounts(page, selectedType, selectedStatus, searchQuery) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = this.get('sharedData').get('branchId');\n      var bankId = this.get('sharedData').get('bankId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      url = url + ('/accounts?page=' + page);\n      if (selectedType && selectedType != '') {\n        url = url + ('&filter_type=' + selectedType);\n      }\n      if (selectedStatus && selectedStatus != '') {\n        url = url + ('&filter_status=' + selectedStatus);\n      }\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response.data);\n        _this.set('accounts', response.data);\n        _this.set('totalAccounts', response.totalAccounts);\n      }).catch(function (error) {\n        _this.set('accounts', []);\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n\n    actions: {\n      viewaccount: function viewaccount(account) {\n        var bankId = this.get('sharedData').get('bankId');\n        this.get('sharedData').set('branchId', account.branch_id);\n        this.transitionToRoute('banks.bank.accounts.account', bankId, account.acc_no);\n      },\n      addNewAccount: function addNewAccount() {\n\n        this.transitionToRoute('banks.bank.accounts.new');\n      },\n      editAccount: function editAccount(isEdit, account) {\n\n        var bankId = this.get('sharedData').get('bankId');\n        this.get('sharedData').set('branchId', account.branch_id);\n        console.log(account.branch_id);\n        this.transitionToRoute('banks.bank.accounts.account.edit', bankId, account.acc_no).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            isEdit: isEdit,\n            accNo: account.acc_no,\n            acc_type: account.acc_type,\n            acc_balance: account.acc_balance,\n            acc_status: account.acc_status,\n            username: account.username,\n            fullname: account.user_fullname,\n            branch_name: account.branch_name,\n            branch_Id: account.branch_id,\n            userId: account.user_id\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      changeAccounts: function changeAccounts(page, selectedType, selectedStatus, searchQuery) {\n        this.loadAccounts(page, selectedType, selectedStatus, searchQuery);\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    actions: {\n      toAccount: function toAccount() {\n        this.transitionToRoute(\"banks.bank.accounts\", this.get('sharedData').get('bankId'));\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/branches', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/branches/branch', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/branches/branch/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toBranch: function toBranch() {\n                this.transitionToRoute(\"banks.bank.branches\", this.get('sharedData').get('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/branches/branch/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sessionService: Ember.inject.service('session'),\n    notification: Ember.inject.service('notify'),\n    sharedData: Ember.inject.service('shared-data'),\n    branch: [],\n    userRole: _util.role,\n    role: Ember.computed('branch', function () {\n      return (0, _util.getSessionData)().user_role;\n    }),\n    loadBranch: function loadBranch() {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get('branchId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != \"*\") {\n        url = url + ('/branches/' + branchId);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('branch', response.data);\n        _this.set('branch', _this.get('branch')[0]);\n        // console.log(this.get('branch'));\n      }).catch(function (error) {\n        console.error(\"Failed to load branch:\", error);\n      });\n    },\n\n    actions: {\n      viewAccounts: function viewAccounts() {\n        var bankId = this.get('sharedData').get('bankId');\n        this.transitionToRoute('banks.bank.accounts', bankId);\n      },\n      delete: function _delete(branch) {\n        var _this2 = this;\n\n        var bankId = this.get('sharedData').get('bankId');\n        var url = 'http://localhost:8080/banker/api/v1/';\n        if (bankId != \"*\") {\n          url = url + ('banks/' + bankId);\n        }\n        if (branch.branch_id != '*') {\n          url = url + ('/branches/' + branch.branch_id);\n        }\n        if (confirm('Are you sure you want to delete the branch: ' + branch.branch_name + '?')) {\n          this.get('fetchService').fetch(url, _util.methods.DELETE).then(function () {\n            _this2.get('sharedData').set('branchId', '*');\n            _this2.get('notification').showNotification('Branch Deleted successfully!', 'success');\n            Ember.run.later(function () {\n              _this2.get('sessionService').logout().then(function () {\n                _this2.transitionToRoute('login');\n              });\n            }, 2000);\n          }).catch(function (error) {\n            console.error(\"Failed to delete branch:\", error);\n          });\n        }\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/branches/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('sharedData'),\n    branches: [],\n    searchQuery: '',\n    selectedBranchStatus: '',\n    currentPage: 1,\n    itemsPerPage: 8,\n\n    loadBranches: function loadBranches(page, searchQuery) {\n      var _this = this;\n\n      // console.log(this.get('bankId'));\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n\n      url = url + ('/branches?page=' + page);\n\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('branches', response.data);\n        _this.set('totalBranches', response.totalBranches);\n      }).catch(function (error) {\n        _this.set('branches', []);\n        console.error(\"Failed to load branches:\", error);\n      });\n    },\n\n\n    totalPages: Ember.computed('totalBranches', 'itemsPerPage', function () {\n      var totalItems = this.get('totalBranches');\n      var itemsPerPage = this.get('itemsPerPage');\n      return Math.ceil(totalItems / itemsPerPage);\n    }),\n\n    visiblePages: Ember.computed('branches', 'currentPage', 'totalPages', function () {\n      var currentPage = this.get('currentPage');\n      var totalPages = this.get('totalPages');\n      var visiblePages = [];\n\n      if (totalPages <= 5) {\n        for (var i = 1; i <= totalPages; i++) {\n          visiblePages.push(i);\n        }\n      } else {\n        if (currentPage <= 3) {\n          for (var _i = 1; _i <= 4; _i++) {\n            visiblePages.push(_i);\n          }\n        } else if (currentPage >= totalPages - 2) {\n          for (var _i2 = totalPages - 3; _i2 <= totalPages; _i2++) {\n            visiblePages.push(_i2);\n          }\n        } else {\n          for (var _i3 = currentPage - 1; _i3 <= currentPage + 1; _i3++) {\n            visiblePages.push(_i3);\n          }\n        }\n      }\n\n      return visiblePages;\n    }),\n\n    showFirstPage: Ember.computed('branches', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showLastPage: Ember.computed('branches', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    showLeftEllipsis: Ember.computed('branches', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showRightEllipsis: Ember.computed('branches', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    searchSuggestion: function searchSuggestion() {\n      var branches = this.get('branches') || [];\n      var query = this.get('searchQuery').toLowerCase();\n\n      if (query) {\n        var suggestions = [];\n\n        branches.forEach(function (branch) {\n          if (branch.branch_name.toLowerCase().startsWith(query) && suggestions.indexOf(branch.branch_name) === -1) {\n            suggestions.push(branch.branch_name);\n          }\n          if (branch.manager_name.toLowerCase().startsWith(query) && suggestions.indexOf(branch.manager_name) === -1) {\n            suggestions.push(branch.manager_name);\n          }\n        });\n\n        this.set('searchSuggestions', suggestions);\n      } else {\n        this.set('searchSuggestions', []);\n      }\n    },\n\n\n    actions: {\n      viewBranch: function viewBranch(branch) {\n        var bankId = this.get('sharedData').get('bankId');\n        this.transitionToRoute('banks.bank.branches.branch', bankId, branch.branch_id);\n      },\n      addNewBranch: function addNewBranch() {\n\n        var bankId = this.get('sharedData').get('bankId');\n        // console.log(this.get('bankId'));\n        this.transitionToRoute('banks.bank.branches.new', bankId);\n      },\n      editBranch: function editBranch(branch) {\n\n        var bankId = this.get('sharedData').get('bankId');\n        this.transitionToRoute('banks.bank.branches.branch.edit', bankId, branch.branch_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: true,\n            branchId: branch.branch_id,\n            branch_name: branch.branch_name,\n            branch_address: branch.branch_address,\n            branch_number: branch.branch_number,\n            manager_id: branch.manager_id,\n            manager_name: branch.manager_name\n          });\n        }).catch(function (error) {\n\n          console.error(\"Transition failed\", error);\n        });\n      },\n      deleteBranch: function deleteBranch(branch) {\n        var _this2 = this;\n\n        var bankId = this.get('sharedData').get('bankId');\n        var url = 'http://localhost:8080/banker/api/v1/';\n        if (bankId != \"*\") {\n          url = url + ('banks/' + bankId);\n        }\n        if (branch.branch_id != '*') {\n          url = url + ('/branches/' + branch.branch_id);\n        }\n        if (confirm('Are you sure you want to delete the branch: ' + branch.branch_name + '?')) {\n\n          this.get('fetchService').fetch(url, _util.methods.DELETE).then(function () {\n            // console.log('Branch deleted successfully');\n            _this2.get('notification').showNotification('Branch Deleted successfully!', 'success');\n            Ember.run.later(function () {\n              _this2.transitionToRoute('banks.bank.branches', bankId);\n              _this2.loadBranches(1);\n            }, 2000);\n          }).catch(function (error) {\n            console.error(\"Failed to delete branch:\", error);\n          });\n        }\n      },\n      goToPage: function goToPage(page) {\n        this.set('currentPage', page);\n        this.loadBranches(page, this.get('searchQuery'));\n      },\n      nextPage: function nextPage() {\n        var currentPage = this.get('currentPage');\n        var totalPages = this.get('totalPages');\n        if (currentPage < totalPages) {\n          this.incrementProperty('currentPage');\n        }\n        this.loadBranches(this.get('currentPage'), this.get('searchQuery'));\n      },\n      previousPage: function previousPage() {\n        var currentPage = this.get('currentPage');\n        if (currentPage > 1) {\n          this.decrementProperty('currentPage');\n        }\n        this.loadBranches(this.get('currentPage'), this.get('searchQuery'));\n      },\n      updateSearchQuery: function updateSearchQuery(value) {\n        this.set('searchQuery', value);\n        this.searchSuggestion();\n      },\n      performSearch: function performSearch() {\n        this.loadBranches(this.get('currentPage'), this.get('searchQuery'));\n\n        this.set('currentPage', 1);\n        this.set('searchSuggestions', []);\n      },\n      selectSuggestion: function selectSuggestion(suggestion) {\n        this.set('searchQuery', suggestion);\n        this.searchSuggestion();\n\n        this.set('currentPage', 1);\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/branches/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    actions: {\n      toBranch: function toBranch() {\n        this.transitionToRoute(\"banks.bank.branches\", this.get('sharedData').get('bankId'));\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('sharedData'),\n    branches: [],\n\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n\n      url = url + '/branches';\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('branches', response.data);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        var bankId = this.get('sharedData').get('bankId');\n        var branchId = this.get('branchId');\n        var bank = this.get('bank');\n        var bankData = {\n          bank_name: bank.bank_name,\n          admin_id: bank.admin_id,\n          main_branch_id: branchId\n        };\n        var url = 'http://localhost:8080/banker/api/v1/';\n        if (bankId != '*') {\n          url = url + ('banks/' + bankId);\n        }\n        this.get('fetchService').fetch(url, _util.methods.PUT, bankData).then(function () {\n          // console.log(\"bank update successfully.\");\n          _this2.reset();\n          _this2.get('notification').showNotification('Bank Edited successfully!', 'success');\n\n          Ember.run.later(function () {\n            _this2.transitionToRoute('banks.bank', _this2.get('sharedData').get('bankId'));\n          }, 2000);\n        }).catch(function (error) {\n          console.error(\"Failed to load accounts:\", error);\n        });\n      },\n      cancel: function cancel() {\n\n        this.transitionToRoute('banks.bank');\n      }\n    },\n    reset: function reset() {\n      this.set('bank.bank_name', '');\n      this.set('branchId', '');\n    }\n  });\n});","define('banker/controllers/banks/bank/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    fetchService: Ember.inject.service('fetch'),\n    branch: [],\n    banks: [],\n    userRole: _util.role,\n    role: Ember.computed('banks', function () {\n\n      return (0, _util.getSessionData)().user_role;\n    }),\n    loadBanks: function loadBanks(bankId) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('banks', response.data);\n        var branchId = _this.get('banks')[0].main_branch_id;\n        if (branchId != \"*\") {\n          url = url + ('/branches/' + branchId);\n        }\n\n        _this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n          _this.set('branch', response.data);\n          _this.set('branch', _this.get('branch')[0]);\n        }).catch(function (error) {\n          console.error(\"Failed to load banks:\", error);\n        });\n      }).catch(function (error) {\n        console.error(\"Failed to load banks:\", error);\n      });\n    },\n\n\n    actions: {\n      updateMainBranch: function updateMainBranch(bank) {\n        this.transitionToRoute('banks.bank.edit', bank.bank_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            bank: bank\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n\n  });\n});","define('banker/controllers/banks/bank/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/loans/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.get('branchSelection').on('branchChanged', this, this.handleBranchChange);\n    },\n    handleBranchChange: function handleBranchChange(newBranchId, currentRouteName) {\n      if (currentRouteName == 'banks.bank.loans.index') {\n        this.loadLoans(1);\n      }\n    },\n\n\n    loans: [],\n    loadLoans: function loadLoans(page, selectedType, selectedStatus, searchQuery) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + ('/loans?page=' + page);\n\n      if (selectedType && selectedType != '') {\n        url = url + ('&filter_type=' + selectedType);\n      }\n      if (selectedStatus && selectedStatus != '') {\n        url = url + ('&filter_status=' + selectedStatus);\n      }\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n\n      // console.log(this.get('accNo'));\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('loans', response.data);\n        _this.set('totalLoans', response.totalLoans);\n      }).catch(function (error) {\n        _this.set('loans', []);\n        console.error(\"Failed to load loans:\", error);\n      });\n    },\n\n    actions: {\n      viewloan: function viewloan(loan) {\n        this.get('sharedData').set('accNo', loan.acc_number);\n        this.transitionToRoute('banks.bank.loans.loan', this.get('sharedData').get('bankId'), loan.loan_id);\n      },\n      addNewLoan: function addNewLoan() {\n        var _this2 = this;\n\n        // console.log(branchId);\n        this.transitionToRoute('banks.bank.loans.new').then(function (newRoute) {\n          newRoute.controller.setProperties({\n            accNo: _this2.get('accNo')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      },\n      editLoan: function editLoan(isEdit, loan) {\n        this.get('sharedData').set('accNo', loan.acc_number);\n        this.transitionToRoute('banks.bank.loans.loan.edit', loan.loan_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: isEdit,\n            loan_id: loan.loan_id,\n            loan_type: loan.loan_type,\n            loan_amount: loan.loan_amount,\n            loan_interest: loan.loan_interest,\n            loan_duration: loan.loan_duration,\n            loan_status: loan.loan_status,\n            loan_availed_date: loan.loan_availed_date,\n            accNo: loan.acc_number\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      },\n      changeLoans: function changeLoans(page, selectedType, selectedStatus, searchQuery) {\n        this.loadLoans(page, selectedType, selectedStatus, searchQuery);\n      }\n    }\n\n  });\n});","define('banker/controllers/banks/bank/loans/loan', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/loans/loan/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.loans\", this.get('sharedData').get('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/loans/loan/emi', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        fetchService: Ember.inject.service('fetch'),\n        sharedData: Ember.inject.service('shared-data'),\n        emis: [],\n        generatedEmis: [],\n\n        loadEmis: function loadEmis() {\n            var _this = this;\n\n            var bankId = this.get('sharedData').get('bankId');\n            var loanId = this.get('sharedData').get('loanId');\n            var url = 'http://localhost:8080/banker/api/v1/';\n\n            if (bankId != \"*\") {\n                url = url + ('banks/' + bankId);\n            }\n\n            if (loanId != '*') {\n                url = url + ('/loans/' + loanId);\n            }\n            url = url + '/emis';\n\n            this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n                _this.set('emis', response);\n                _this.set('generatedEmis', _this.generateTable(_this.get('emis')));\n            }).catch(function (error) {\n                console.error(\"Failed to load EMIs:\", error);\n                _this.set('generatedEmis', _this.generateTable([]));\n            });\n        },\n        generateTable: function generateTable(emis) {\n            var emiSchedule = [];\n\n            // console.log(this.get('loan'));\n            var totalEmis = this.get('loan').loan_duration;\n            var loanAvailedDate = this.get('loan').length <= 0 ? new Date() : new Date(this.get('loan').loan_availed_date.replace(/-/g, '/'));\n\n            var emisArray = this.get('emis');\n\n            for (var i = 0; i < emisArray.length; i++) {\n                var emi = emisArray[i];\n                var emiNumber = emi.emi_number || '-';\n                var transactionId = emi.transaction_id || '-';\n                var actualPaidDate = emi.actual_paid_date ? new Date(emi.actual_paid_date.replace(/-/g, '/')) : '-';\n\n                var toBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(toBePaidDate.getTime())) {\n                    toBePaidDate.setMonth(toBePaidDate.getMonth() + emiNumber);\n                } else {\n                    toBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: emiNumber,\n                    transactionId: transactionId,\n                    toBePaidDate: toBePaidDate instanceof Date ? toBePaidDate.toLocaleDateString() : toBePaidDate,\n                    actualPaidDate: actualPaidDate instanceof Date ? actualPaidDate.toLocaleDateString() : actualPaidDate\n                });\n            }\n\n            var nextEmiNumber = emis.length > 0 ? emis[emis.length - 1].emi_number + 1 : 1;\n            if (nextEmiNumber <= totalEmis) {\n                var nextToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(nextToBePaidDate.getTime())) {\n                    nextToBePaidDate.setMonth(nextToBePaidDate.getMonth() + nextEmiNumber);\n                } else {\n                    nextToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: nextEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: nextToBePaidDate instanceof Date ? nextToBePaidDate.toLocaleDateString() : nextToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            if (emiSchedule.length === 0) {\n                var firstEmiNumber = 1;\n                var firstToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(firstToBePaidDate.getTime())) {\n                    firstToBePaidDate.setMonth(firstToBePaidDate.getMonth() + firstEmiNumber);\n                } else {\n                    firstToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: firstEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: firstToBePaidDate instanceof Date ? firstToBePaidDate.toLocaleDateString() : firstToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            return emiSchedule;\n        },\n\n\n        actions: {\n            addNewEmi: function addNewEmi() {\n                var _this2 = this;\n\n                this.transitionToRoute('banks.bank.accounts.account.transactions.new', this.get('sharedData').get('bankId'), this.get('loan').acc_number).then(function (newRoute) {\n                    newRoute.controller.setProperties({\n                        transaction_type: 'emi',\n                        transaction_amount: _this2.get('loanAmount'),\n                        accNo: _this2.get('loan').acc_number\n                    });\n                }).catch(function (error) {\n                    console.error(\"Transition failed\", error);\n                });\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/loans/loan/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    loan: [],\n    loadLoan: function loadLoan(loanId) {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (loanId != \"*\") {\n        url = url + ('/loans/' + loanId);\n      }\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('loan', response.data);\n        _this.set('loan', _this.get('loan')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load loan:\", error);\n      });\n    },\n\n    actions: {\n      toEmis: function toEmis(loan, emiAmount) {\n        var bankId = this.get('sharedData').get('bankId');\n        this.transitionToRoute(\"banks.bank.loans.loan.emi\", bankId, loan.loan_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            loan: loan,\n            loanAmount: emiAmount\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/loans/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.loans\", this.get('sharedData').get('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/transactions/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    transactions: [],\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.get('branchSelection').on('branchChanged', this, this.handleBranchChange);\n    },\n    handleBranchChange: function handleBranchChange(newBranchId, currentRouteName) {\n      if (currentRouteName == 'banks.bank.transactions.index') {\n        this.loadTransactions(1);\n      }\n    },\n    loadTransactions: function loadTransactions(page, selectedType, selectedStatus, searchQuery) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + ('/transactions?page=' + page);\n\n      if (selectedType && selectedType != '') {\n        url = url + ('&filter_type=' + selectedType);\n      }\n      if (selectedStatus && selectedStatus != '') {\n        url = url + ('&filter_status=' + selectedStatus);\n      }\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('transactions', response.data);\n        _this.set('totalTransactions', response.totalTransactions);\n      }).catch(function (error) {\n\n        _this.set('transactions', []);\n        console.error(\"Failed to load transactions:\", error);\n      });\n    },\n\n\n    actions: {\n      viewTransaction: function viewTransaction(transaction) {\n        var bankId = this.get('sharedData').get('bankId');\n        this.transitionToRoute('banks.bank.transactions.transaction', bankId, transaction.transaction_id);\n      },\n      addNewTransaction: function addNewTransaction() {\n\n        var bankId = this.get('sharedData').get('bankId');\n        // console.log(branchId);\n        this.transitionToRoute('banks.bank.transactions.new', bankId);\n      },\n      changeTransactions: function changeTransactions(page, selectedType, selectedStatus, searchQuery) {\n        this.loadTransactions(page, selectedType, selectedStatus, searchQuery);\n      }\n    }\n    // willDestroy() {\n    //   this._super(...arguments);\n    //   this.get('branchSelection').off('branchChanged', this, this.handleBranchChange);\n    // }\n  });\n});","define('banker/controllers/banks/bank/transactions/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        actions: {\n            toTransaction: function toTransaction() {\n                this.transitionToRoute(\"banks.bank.transactions\", this.get('sharedData').get('bankId'));\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/transactions/transaction', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    fetchService: Ember.inject.service('fetch'),\n    transaction: [],\n    sharedData: Ember.inject.service('shared-data'),\n    loadTransaction: function loadTransaction(transactionId) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = this.get('sharedData').get('bankId');\n      var branchId = this.get('sharedData').get(\"branchId\");\n      var accno = this.get('sharedData').get('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (transactionId != \"*\") {\n\n        url = url + ('/transactions/' + transactionId);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('transaction', response.data);\n        _this.set('transaction', _this.get('transaction')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load transaction:\", error);\n        // alert(\"Could not load transaction. Please try again later.\");\n      });\n    }\n  });\n});","define('banker/controllers/banks/bank/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/users/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/users/user/dashboard', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    userRole: _util.role,\n    getSessionData: function getSessionData() {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        this.set('sessionData', sessionData);\n      }\n    },\n    fetchAdminDashboard: function fetchAdminDashboard() {\n      var _this = this;\n\n      this.getSessionData();\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/banks/' + bankId + '/users/' + this.get('sessionData').user_id + '/dashboard';\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('branches', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load dashboard:\", error);\n      });\n    },\n    fetchManagerDashboard: function fetchManagerDashboard() {\n      var _this2 = this;\n\n      this.getSessionData();\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/banks/' + bankId + '/users/' + this.get('sessionData').user_id + '/dashboard';\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this2.set('branches', response);\n        var array = _this2.get('branches');\n        for (var i = 0; i < array.length; i++) {\n          var item = array[i];\n          if (item['manager_id'] == _this2.get('sessionData').user_id) {\n            _this2.set('branch', item);\n            _this2.get('sharedData').set('branchId', _this2.get('branch').branch_id);\n            // console.log(this.get('branch'));\n            break;\n          }\n        }\n      }).catch(function (error) {\n        console.error(\"Failed to load dashboard:\", error);\n      });\n    },\n    fetchCustomerDashboard: function fetchCustomerDashboard() {\n      var _this3 = this;\n\n      this.getSessionData();\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1/banks/' + bankId + '/users/' + this.get('sessionData').user_id + '/dashboard';\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n\n        var accounts = [];\n        var loans = [];\n        var transactions = [];\n        for (var i = 0; i < response.length; i++) {\n          var account = response[i];\n          var accountData = {\n            acc_no: account.acc_no,\n            acc_type: account.acc_type,\n            acc_balance: account.acc_balance,\n            acc_status: account.acc_status\n          };\n\n          var loanDetails = account.loan_details || [];\n          var transaction = account.transactions || [];\n\n          accounts.push(accountData);\n          for (var _i = 0; _i < loanDetails.length; _i++) {\n            var loan = loanDetails[_i];\n            loans.push(loan);\n          }\n          for (var _i2 = 0; _i2 < transaction.length; _i2++) {\n            var transac = transaction[_i2];\n            transactions.push(transac);\n          }\n        }\n\n        _this3.set('loanList', loans);\n        _this3.set('accountList', accounts);\n        _this3.set('transactionList', transactions);\n      }).catch(function (error) {\n        console.error(\"Failed to load dashboard:\", error);\n      });\n    }\n  });\n});","define('banker/controllers/banks/bank/users/user/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/users/user/index', ['exports'], function (exports) {\n   'use strict';\n\n   Object.defineProperty(exports, \"__esModule\", {\n      value: true\n   });\n   exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n\n    banks: [],\n\n    loadBanks: function loadBanks(page) {\n      var _this = this;\n\n      var url = 'http://localhost:8080/banker/api/v1/banks?page=' + page;\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('totalBanks', response.totalBanks);\n        _this.set('banks', response.data);\n      }).catch(function (error) {\n        _this.set('banks', []);\n        console.error(\"Failed to load banks:\", error);\n      });\n    },\n\n    currentPage: 1,\n    itemsPerPage: 8,\n    totalPages: Ember.computed('totalBanks', 'itemsPerPage', function () {\n\n      var totalItems = this.get('totalBanks');\n      var itemsPerPage = this.get('itemsPerPage');\n      return Math.ceil(totalItems / itemsPerPage);\n    }),\n\n    visiblePages: Ember.computed('banks', 'currentPage', 'totalPages', function () {\n      var currentPage = this.get('currentPage');\n      var totalPages = this.get('totalPages');\n      var visiblePages = [];\n\n      if (totalPages <= 5) {\n        for (var i = 1; i <= totalPages; i++) {\n          visiblePages.push(i);\n        }\n      } else {\n        if (currentPage <= 3) {\n          for (var _i = 1; _i <= 4; _i++) {\n            visiblePages.push(_i);\n          }\n        } else if (currentPage >= totalPages - 2) {\n          for (var _i2 = totalPages - 3; _i2 <= totalPages; _i2++) {\n            visiblePages.push(_i2);\n          }\n        } else {\n          for (var _i3 = currentPage - 1; _i3 <= currentPage + 1; _i3++) {\n            visiblePages.push(_i3);\n          }\n        }\n      }\n\n      return visiblePages;\n    }),\n\n    showFirstPage: Ember.computed('banks', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showLastPage: Ember.computed('banks', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    showLeftEllipsis: Ember.computed('banks', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showRightEllipsis: Ember.computed('banks', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    actions: {\n      viewBank: function viewBank(bank) {\n        this.transitionToRoute('banks.bank', bank.bank_id);\n      },\n      addNewBank: function addNewBank() {\n        this.transitionToRoute('banks.new').then(function () {}).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      goToPage: function goToPage(page) {\n        this.set('currentPage', page);\n        this.loadBanks(page);\n      },\n      nextPage: function nextPage() {\n        var currentPage = this.get('currentPage');\n        var totalPages = this.get('totalPages');\n        if (currentPage < totalPages) {\n          this.incrementProperty('currentPage');\n        }\n        this.loadBanks(this.get('currentPage'));\n      },\n      previousPage: function previousPage() {\n        var currentPage = this.get('currentPage');\n        if (currentPage > 1) {\n          this.decrementProperty('currentPage');\n        }\n        this.loadBanks(this.get('currentPage'));\n      }\n    }\n  });\n});","define('banker/controllers/banks/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('sharedData'),\n    errorMessage: '',\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      // console.log(\"init...\");\n    },\n    loadAdmins: function loadAdmins() {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + '/users?filter_admin=true';\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        _this.set('admins', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load admins:\", error);\n      });\n    },\n\n\n    bankId: '',\n    bank_name: '',\n    bank_code: '',\n    admin_id: '',\n    isEdit: false,\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('bank_name') || this.get('bank_name').trim() === '') {\n          this.set(\"errorMessage\", 'Please provide a bank name.');\n          return;\n        }\n\n        if (!this.get('bank_code') || this.get('bank_code').trim() === '') {\n          this.set(\"errorMessage\", 'Please provide a bank code.');\n          return;\n        }\n        if (!this.get('admin_id')) {\n          this.set(\"errorMessage\", 'Please select an admin');\n          return;\n        }\n\n        var bankData = {\n          bank_name: this.get('bank_name'),\n          bank_code: this.get('bank_code'),\n          admin_id: this.get('admin_id')\n        };\n\n        var url = 'http://localhost:8080/banker/api/v1/banks';\n\n        this.get('fetchService').fetch(url, _util.methods.POST, bankData).then(function () {\n          _this2.resetForm();\n          _this2.get('notification').showNotification('Bank created successfully!', 'success');\n          Ember.run.later(function () {\n            _this2.transitionToRoute('banks');\n          }, 2000);\n        }).catch(function (error) {\n          console.error('Error creating bank:', error);\n        });\n      },\n      cancel: function cancel() {\n        this.resetForm();\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        bankId: '',\n        bank_name: '',\n        bank_code: '',\n        bank_status: '',\n        admin_id: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/controllers/login', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    sharedData: Ember.inject.service('shared-data'),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    errorMessage: '',\n    userId: '',\n    getUserIdFromCookie: function getUserIdFromCookie() {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    },\n\n    actions: {\n      login: function login(credentials) {\n        var _this = this;\n\n        // console.log('Login action triggered'); \n        // console.log(credentials);\n        this.get('session').login(credentials).then(function () {\n          _this.set('userId', _this.getUserIdFromCookie());\n          if (_this.get('userId')) {\n\n            _this.transitionToRoute('banks.bank.users.user.dashboard', _this.get('sharedData').get('bankId'), _this.get('userId'));\n          } else {\n            _this.set('errorMessage', 'User ID not found in cookies');\n          }\n        }).catch(function (error) {\n          _this.set('errorMessage', error.message || 'Login failed');\n        });\n      },\n      signup: function signup(credentials) {\n        var _this2 = this;\n\n        // console.log('signup action triggered'); \n\n        this.get('session').signup(credentials).then(function () {\n          _this2.transitionToRoute('login');\n        }).catch(function (error) {\n          _this2.set('errorMessage', error.message || 'Signup failed');\n        });\n      },\n      toggleMode: function toggleMode() {\n        // console.log(isSignup);\n\n        this.transitionToRoute('register');\n      }\n    }\n  });\n});","define('banker/controllers/register', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    errorMessage: '',\n    actions: {\n      signup: function signup(credentials) {\n        var _this = this;\n\n        // console.log('signup action triggered'); \n\n        this.get('session').signup(credentials).then(function () {\n          _this.transitionToRoute('login');\n        }).catch(function (error) {\n          _this.set('errorMessage', error.message || 'Signup failed');\n        });\n      },\n      toggleMode: function toggleMode() {\n        // console.log(isSignup);\n        this.transitionToRoute('login');\n      }\n    }\n  });\n});","define('banker/controllers/super-admin-login', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        session: Ember.inject.service(),\n        actions: {\n            SuperAdminLogin: function SuperAdminLogin(credentials) {\n                var _this = this;\n\n                credentials.isSuperAdmin = true;\n                this.get('session').login(credentials).then(function () {\n\n                    _this.transitionToRoute('users');\n                }).catch(function (error) {\n                    _this.set('errorMessage', error.message || 'Login failed');\n                });\n            }\n        }\n\n    });\n});","define('banker/controllers/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/users/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    status: _util.status,\n    notification: Ember.inject.service('notify'),\n    users: [],\n    selectedUserRole: '',\n    selectedUserStatus: '',\n\n    currentPage: 1,\n    itemsPerPage: 8,\n    loadUsers: function loadUsers(page, selectedRole, selectedStatus, searchQuery) {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + ('/users?page=' + page);\n      if (selectedRole && selectedRole != '') {\n        url = url + ('&filter_role=' + selectedRole);\n      }\n      if (selectedStatus && selectedStatus != '') {\n        url = url + ('&filter_status=' + selectedStatus);\n      }\n      if (searchQuery && searchQuery != '') {\n        url = url + ('&search_item=' + searchQuery);\n      }\n\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('totalUsers', response.totalUsers);\n        _this.set('users', response.data);\n      }).catch(function (error) {\n        _this.set('users', []);\n        console.error(\"Failed to load users:\", error);\n      });\n    },\n    FilteredUsers: function FilteredUsers() {\n\n      var selectedUserRole = this.get('selectedUserRole');\n      var selectedUserStatus = this.get('selectedUserStatus');\n\n      this.loadUsers(this.get('currentPage'), selectedUserRole, selectedUserStatus, this.get('searchQuery'));\n    },\n\n\n    totalPages: Ember.computed('totalUsers', 'itemsPerPage', function () {\n\n      var totalItems = this.get('totalUsers');\n      var itemsPerPage = this.get('itemsPerPage');\n      return Math.ceil(totalItems / itemsPerPage);\n    }),\n\n    visiblePages: Ember.computed('users', 'currentPage', 'totalPages', function () {\n      var currentPage = this.get('currentPage');\n      var totalPages = this.get('totalPages');\n      var visiblePages = [];\n\n      if (totalPages <= 5) {\n        for (var i = 1; i <= totalPages; i++) {\n          visiblePages.push(i);\n        }\n      } else {\n        if (currentPage <= 3) {\n          for (var _i = 1; _i <= 4; _i++) {\n            visiblePages.push(_i);\n          }\n        } else if (currentPage >= totalPages - 2) {\n          for (var _i2 = totalPages - 3; _i2 <= totalPages; _i2++) {\n            visiblePages.push(_i2);\n          }\n        } else {\n          for (var _i3 = currentPage - 1; _i3 <= currentPage + 1; _i3++) {\n            visiblePages.push(_i3);\n          }\n        }\n      }\n\n      return visiblePages;\n    }),\n\n    showFirstPage: Ember.computed('users', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showLastPage: Ember.computed('users', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    showLeftEllipsis: Ember.computed('users', 'currentPage', function () {\n      return this.get('currentPage') > 3;\n    }),\n\n    showRightEllipsis: Ember.computed('users', 'currentPage', 'totalPages', function () {\n      return this.get('currentPage') < this.get('totalPages') - 2;\n    }),\n\n    searchSuggestion: function searchSuggestion() {\n      var users = this.get('users') || [];\n      var query = this.get('searchQuery');\n\n      if (query) {\n        var suggestions = [];\n\n        users.forEach(function (user) {\n          if (user.username.startsWith(query) && suggestions.indexOf(user.username) === -1) {\n            suggestions.push(user.username);\n          }\n        });\n\n        this.set('searchSuggestions', suggestions);\n      } else {\n        this.set('searchSuggestions', []);\n      }\n    },\n\n    actions: {\n      FilterReset: function FilterReset() {\n        this.set('selectedUserRole', '');\n        this.set('selectedUserStatus', '');\n        this.FilteredUsers();\n      },\n      UserRole: function UserRole(value) {\n        this.set('selectedUserRole', value);\n        this.FilteredUsers();\n      },\n      UserStatus: function UserStatus(value) {\n        this.set('selectedUserStatus', value);\n        this.FilteredUsers();\n      },\n      viewUser: function viewUser(user) {\n\n        this.transitionToRoute('users.user', user.user_id);\n      },\n      editUser: function editUser(user) {\n        this.transitionToRoute('users.user.edit', user.user_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: true,\n            userId: user.user_id,\n            fullname: user.fullname,\n            username: user.username,\n            user_role: user.user_role,\n            date_of_birth: user.date_of_birth,\n            user_phonenumber: user.user_phonenumber,\n            user_address: user.user_address,\n            user_status: user.user_status\n          });\n        }).catch(function (error) {\n          console.error(\"Failed to load users:\", error);\n        });\n      },\n      deleteUser: function deleteUser(user) {\n        var _this2 = this;\n\n        var bankId = this.get('sharedData').get('bankId');\n        var url = 'http://localhost:8080/banker/api/v1';\n        if (bankId != \"*\") {\n          url = url + ('/banks/' + bankId);\n        }\n        if (user.user_id != \"*\") {\n          url = url + ('/users/' + user.user_id);\n        }\n        if (confirm('Are you sure you want to delete the user: ' + user.fullname + '?')) {\n\n          this.get('fetchService').fetch(url, _util.methods.DELETE, user.user_id).then(function () {\n            // console.log('User deleted successfully');\n            _this2.get('notification').showNotification('User Deleted successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.transitionToRoute('users');\n              _this2.loadUsers(1);\n            }, 2000);\n          }).catch(function (error) {\n            console.error(\"Failed to load users:\", error);\n          });\n        }\n      },\n      goToPage: function goToPage(page) {\n        this.set('currentPage', page);\n        this.loadUsers(page, this.get('selectedUserRole'), this.get('selectedUserStatus'), this.get('searchQuery'));\n      },\n      nextPage: function nextPage() {\n        var currentPage = this.get('currentPage');\n        var totalPages = this.get('totalPages');\n        if (currentPage < totalPages) {\n          this.incrementProperty('currentPage');\n        }\n        this.loadUsers(this.get('currentPage'), this.get('selectedUserRole'), this.get('selectedUserStatus'), this.get('searchQuery'));\n      },\n      previousPage: function previousPage() {\n        var currentPage = this.get('currentPage');\n        if (currentPage > 1) {\n          this.decrementProperty('currentPage');\n        }\n        this.loadUsers(this.get('currentPage'), this.get('selectedUserRole'), this.get('selectedUserStatus'), this.get('searchQuery'));\n      },\n      updateSearchQuery: function updateSearchQuery(value) {\n        this.set('searchQuery', value);\n        this.searchSuggestion();\n      },\n      performSearch: function performSearch() {\n\n        this.loadUsers(this.get('currentPage'), this.get('selectedUserRole'), this.get('selectedUserStatus'), this.get('searchQuery'));\n\n        this.set('currentPage', 1);\n        this.set('searchSuggestions', []);\n      },\n      selectSuggestion: function selectSuggestion(suggestion) {\n        this.set('searchQuery', suggestion);\n        this.searchSuggestion();\n        this.set('currentPage', 1);\n      }\n    }\n  });\n});","define('banker/controllers/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/users/user/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    notification: Ember.inject.service('notify'),\n    fetchService: Ember.inject.service('fetch'),\n    statuses: [_util.status.INACTIVE, _util.status.ACTIVE],\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this = this;\n\n        if (!this.get('statuses').includes(this.get('user_status'))) {\n          this.set(\"errorMessage\", \"Please select a valid user status.\");\n          return;\n        }\n\n        var userId = this.get('sharedData').get('userId');\n        var url = 'http://localhost:8080/banker/api/v1';\n        var bankId = this.get('sharedData').get('bankId');\n        if (bankId != \"*\") {\n          url = url + ('/banks/' + bankId);\n        }\n        if (userId != \"*\") {\n          url = url + ('/users/' + userId);\n        }\n        var userData = {\n\n          user_status: this.get('user_status') == '' ? 0 : this.get('user_status') == _util.status.PENDING ? 0 : this.get('user_status') == _util.status.ACTIVE ? 1 : 2\n\n        };\n\n        this.get('fetchService').fetch(url, _util.methods.PUT, userData).then(function () {\n          // console.log(\"User updated successfully!\");\n          _this.resetForm();\n          _this.get('notification').showNotification('User Edited successfully!', 'success');\n          Ember.run.later(function () {\n            _this.transitionToRoute('users');\n          }, 2000);\n        }).catch(function (error) {\n          console.error('Error updating user:', error);\n        });\n      },\n      toUsers: function toUsers() {\n        this.transitionToRoute(\"banks.bank.users\", this.get('sharedData').get(\"bankId\"));\n      }\n    },\n    resetForm: function resetForm() {\n      this.setProperties({\n        userId: '',\n        user_status: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/controllers/users/user/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    fetchService: Ember.inject.service('fetch'),\n    sharedData: Ember.inject.service('shared-data'),\n    loadUser: function loadUser(userId) {\n      var _this = this;\n\n      var bankId = this.get('sharedData').get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + '/users';\n      if (userId != \"*\") {\n        url = url + ('/' + userId);\n      }\n      this.get('fetchService').fetch(url, _util.methods.GET).then(function (response) {\n        // console.log(response);\n        _this.set('user', response.data[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load users:\", error);\n      });\n    }\n  });\n});","define('banker/helpers/app-version', ['exports', 'banker/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('banker/helpers/eq', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.eq = eq;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function eq(_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        param1 = _ref2[0],\n        param2 = _ref2[1];\n\n    // console.log(\"eq\"+param2);\n    return param1 === param2;\n  }\n\n  exports.default = Ember.Helper.helper(eq);\n});","define('banker/helpers/format-date', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formatDate = formatDate;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function formatDate(_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        date = _ref2[0];\n\n    if (!date) {\n      return '';\n    }\n    return new Date(date).toLocaleDateString();\n  }\n\n  exports.default = Ember.Helper.helper(formatDate);\n});","define('banker/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('banker/helpers/range', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.range = range;\n  function range(params /*, hash*/) {\n    return params;\n  }\n\n  exports.default = Ember.Helper.helper(range);\n});","define('banker/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('banker/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'banker/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var name = void 0,\n      version = void 0;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('banker/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('banker/initializers/data-adapter', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('banker/initializers/export-application-global', ['exports', 'banker/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('banker/initializers/injectStore', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/store', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/transforms', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"banker/instance-initializers/ember-data\", [\"exports\", \"ember-data/instance-initializers/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('banker/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('banker/router', ['exports', 'banker/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n\n    this.route('login', { path: \"/banker/login\" });\n    this.route('register', { path: \"/banker/register\" });\n\n    this.route('users', { path: \"/banker/users\" }, function () {\n      this.route('user', { path: \"/:userId\" }, function () {\n        this.route('edit');\n      });\n    });\n\n    this.route('super-admin-login', { path: \"/banker/super-admin-login\" });\n\n    this.route('banks', { path: \"/banker/banks\" }, function () {\n      this.route('bank', { path: \"/:bankId\" }, function () {\n        this.route('accounts', function () {\n          this.route('account', { path: \"/:accNo\" }, function () {\n            this.route('transactions', function () {\n              this.route('transaction', { path: \"/:transactionId\" });\n              this.route('new');\n            });\n            this.route('loans', function () {\n              this.route('loan', { path: \"/:loanId\" }, function () {\n                this.route('edit');\n                this.route('emi');\n              });\n              this.route('new');\n            });\n            this.route('edit');\n          });\n          this.route('new');\n        });\n        this.route('branches', function () {\n          this.route('branch', { path: \"/:branchId\" }, function () {\n            this.route('edit');\n          });\n          this.route('new');\n        });\n        this.route('loans', function () {\n          this.route('loan', { path: \"/:loanId\" }, function () {\n            this.route('edit');\n            this.route('emi');\n          });\n          this.route('new');\n        });\n        this.route('transactions', function () {\n          this.route('transaction', { path: \"/:transactionId\" });\n          this.route('new');\n        });\n        this.route('users', { path: \"/users\" }, function () {\n          this.route('user', { path: \"/:userId\" }, function () {\n            this.route('dashboard');\n          });\n        });\n        this.route('edit');\n      });\n      this.route('new');\n    });\n\n    this.route('not-found', { path: \"/*path\" });\n  });\n\n  exports.default = Router;\n});","define('banker/routes/banks', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        model: function model(params) {\n            this.get('sharedData').set('bankId', params.bankId);\n            return params;\n        }\n    });\n});","define('banker/routes/banks/bank/accounts', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        model: function model(params) {\n            this.get('sharedData').set('accNo', params.accNo);\n            return params;\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER) {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n    },\n    setupController: function setupController(controller) {\n      controller.loadAccount(this.get('sharedData').get('accNo'));\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account/loans/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n      this.get('sharedData').set('transactionId', '*');\n    },\n    setupController: function setupController(controller) {\n      controller.loadLoans(1);\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        model: function model(params) {\n            this.get('sharedData').set('loanId', params.loanId);\n            return params;\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER) {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan/emi', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userrole = sessionData.user_role;\n\n            if (userrole == _util.role.SUPERADMIN) {\n                this.transitionTo('users');\n                return;\n            }\n        },\n        setupController: function setupController(controller) {\n            controller.loadEmis();\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n\n    beforeModel: function beforeModel() {\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadLoan(this.get('sharedData').get('loanId'));\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userrole = sessionData.user_role;\n\n            if (userrole == _util.role.SUPERADMIN) {\n                this.transitionTo('users');\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account/transactions/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadTransactions(1);\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/transactions/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userrole = sessionData.user_role;\n\n            if (userrole == _util.role.SUPERADMIN) {\n                this.transitionTo('users');\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/transactions/transaction', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    model: function model(params) {\n      this.get('sharedData').set('transactionId', params.transactionId);\n      return params;\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadTransaction(this.get('sharedData').get('transactionId'));\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n      this.get('sharedData').set('transactionId', '*');\n      this.get('sharedData').set('accNo', '*');\n      if (userrole != _util.role.MANAGER) {\n        this.get('sharedData').set('branchId', '*');\n      }\n      this.get('sharedData').set('loanId', '*');\n    },\n    setupController: function setupController(controller) {\n      controller.loadAccounts(1);\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/branches', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/branches/branch', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        model: function model(params) {\n            this.get('sharedData').set('branchId', params.branchId);\n            return params;\n        }\n    });\n});","define('banker/routes/banks/bank/branches/branch/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER || userrole == _util.role.MANAGER) {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/branches/branch/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER) {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadBranch(this.get('sharedData').get('branchId'));\n    }\n  });\n});","define('banker/routes/banks/bank/branches/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER || userrole == _util.role.MANAGER) {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n\n      this.get('sharedData').set('accNo', '*');\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n      this.get('sharedData').set('branchId', '*');\n      // this.get('sharedData').changedBranchId();\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadBranches(1);\n    }\n  });\n});","define('banker/routes/banks/bank/branches/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER || userrole == _util.role.MANAGER) {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        beforeModel: function beforeModel() {\n            var bankId = this.get('sharedData').get('bankId');\n\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var userrole = sessionData.user_role;\n\n            if (userrole == _util.role.SUPERADMIN) {\n                this.transitionTo('users');\n                return;\n            } else if (userrole == _util.role.CUSTOMER) {\n\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        },\n        setupController: function setupController(controller) {\n            controller.loadBranches();\n        }\n    });\n});","define('banker/routes/banks/bank/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      this.get('sharedData').set('accNo', '*');\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n      if (sessionData.user_role != _util.role.MANAGER) {\n        this.get('sharedData').set('branchId', '*');\n      }\n    },\n    setupController: function setupController(controller) {\n      // console.log(this.get('sharedData'));\n      controller.loadBanks(this.get('sharedData').get('bankId'));\n    }\n  });\n});","define('banker/routes/banks/bank/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/loans/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n\n      this.get('sharedData').set('accNo', '*');\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n      if (sessionData.user_role != 'MANAGER') {\n        this.get('sharedData').set('branchId', '*');\n      }\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadLoans(1);\n    }\n  });\n});","define('banker/routes/banks/bank/loans/loan', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        model: function model(params) {\n            this.get('sharedData').set('loanId', params.loanId);\n            return params;\n        }\n    });\n});","define('banker/routes/banks/bank/loans/loan/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else if (userrole == _util.role.CUSTOMER) {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/loans/loan/emi', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadEmis();\n    }\n  });\n});","define('banker/routes/banks/bank/loans/loan/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadLoan(this.get('sharedData').get('loanId'));\n    }\n  });\n});","define('banker/routes/banks/bank/loans/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/transactions/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n\n      this.get('sharedData').set('accNo', '*');\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n      if (sessionData.user_role != _util.role.MANAGER) {\n        this.get('sharedData').set('branchId', '*');\n      }\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadTransactions(1);\n    }\n  });\n});","define('banker/routes/banks/bank/transactions/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/transactions/transaction', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    model: function model(params) {\n      this.get('sharedData').set('transactionId', params.transactionId);\n      return params;\n    },\n    setupController: function setupController(controller) {\n\n      controller.loadTransaction(this.get('sharedData').get('transactionId'));\n    }\n  });\n});","define('banker/routes/banks/bank/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/users/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/users/user/dashboard', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n            var userrole = sessionData.user_role;\n\n            if (userrole == _util.role.SUPERADMIN) {\n                this.transitionTo('users');\n                return;\n            }\n        },\n        setupController: function setupController(controller) {\n            var userrole = (0, _util.getSessionData)().user_role;\n\n            if (userrole == _util.role.ADMIN) {\n                controller.fetchAdminDashboard();\n            } else if (userrole == _util.role.MANAGER) {\n                controller.fetchManagerDashboard();\n            } else {\n                controller.fetchCustomerDashboard();\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/users/user/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n\n      var bankId = this.get('sharedData').get('bankId');\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole == _util.role.SUPERADMIN) {\n        this.transitionTo('users');\n        return;\n      } else {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n      }\n    }\n  });\n});","define('banker/routes/banks/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole !== _util.role.SUPERADMIN) {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n\n      this.get('sharedData').set('bankId', '*');\n      this.get('sharedData').set('accNo', '*');\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('userId', '*');\n      this.get('sharedData').set('transactionId', '*');\n      this.get('sharedData').set('branchId', '*');\n    },\n    setupController: function setupController(controller) {\n      controller.loadBanks(1);\n    }\n  });\n});","define('banker/routes/banks/new', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole !== _util.role.SUPERADMIN) {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    },\n    setupController: function setupController(controller) {\n      controller.loadAdmins();\n    }\n  });\n});","define('banker/routes/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n\n        beforeModel: function beforeModel() {\n            var bankId = this.get('sharedData').get('bankId');\n\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var userrole = sessionData.user_role;\n\n            if (userrole !== _util.role.SUPERADMIN) {\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            } else {\n                this.transitionTo('users');\n                return;\n            }\n        }\n    });\n});","define('banker/routes/login', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        beforeModel: function beforeModel() {\n            var sessionData = (0, _util.getSessionData)();\n            if (document.cookie != '') {\n                this.transitionTo('banks.bank.users.user.dashboard', this.get('sharedData').get('bankId'), sessionData.user_id);\n            }\n        }\n    });\n});","define('banker/routes/not-found', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    model: function model(params) {\n      console.log('Attempted to access unknown path:', params.path);\n    },\n    redirect: function redirect() {\n      var bankId = this.get('sharedData').get('bankId');\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole !== _util.role.SUPERADMIN) {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      } else {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/register', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        beforeModel: function beforeModel() {\n            var sessionData = (0, _util.getSessionData)();\n            if (document.cookie != '') {\n                this.transitionTo('banks.bank.users.user.dashboard', this.get('sharedData').get('bankId'), sessionData.user_id);\n            }\n        }\n    });\n});","define('banker/routes/super-admin-login', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        beforeModel: function beforeModel() {\n            if (document.cookie != '') {\n                this.transitionTo('users');\n            }\n            this.get('sharedData').set('bankId', '*');\n        }\n    });\n});","define('banker/routes/users/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    sharedData: Ember.inject.service('shared-data'),\n    beforeModel: function beforeModel() {\n      var bankId = this.get('sharedData').get('bankId');\n\n      var sessionData = (0, _util.getSessionData)();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var userrole = sessionData.user_role;\n\n      if (userrole !== _util.role.SUPERADMIN) {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n\n      this.get('sharedData').set('accNo', '*');\n      this.get('sharedData').set('loanId', '*');\n      this.get('sharedData').set('transactionId', '*');\n      this.get('sharedData').set('branchId', '*');\n      this.get('sharedData').set('bankId', \"*\");\n      this.get('sharedData').set('userId', \"*\");\n    },\n    setupController: function setupController(controller) {\n      controller.loadUsers(1);\n    }\n  });\n});","define('banker/routes/users/user', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        model: function model(params) {\n            this.get('sharedData').set('userId', params.userId);\n            return params;\n        }\n    });\n});","define('banker/routes/users/user/edit', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        sharedData: Ember.inject.service('shared-data'),\n        beforeModel: function beforeModel() {\n\n            var bankId = this.get('sharedData').get('bankId');\n\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('super-admin-login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var userrole = sessionData.user_role;\n\n            if (userrole !== _util.role.SUPERADMIN) {\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        }\n    });\n});","define('banker/routes/users/user/index', ['exports', 'banker/utils/util'], function (exports, _util) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n\n        sharedData: Ember.inject.service('shared-data'),\n        beforeModel: function beforeModel() {\n\n            var bankId = this.get('sharedData').get('bankId');\n\n            var sessionData = (0, _util.getSessionData)();\n\n            if (!sessionData) {\n                this.transitionTo('super-admin-login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var userrole = sessionData.user_role;\n\n            if (userrole !== _util.role.SUPERADMIN) {\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        },\n        setupController: function setupController(controller) {\n            controller.loadUser(this.get('sharedData').get('userId'));\n        }\n    });\n});","define('banker/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('banker/services/branch-select', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend(Ember.Evented, {\n    selectedBranchId: null,\n    sharedData: Ember.inject.service('shared-data'),\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.set('selectedBranchId', this.get('sharedData').get('branchId') || this.getDefaultBranchId());\n    },\n    changeBranch: function changeBranch(branchId) {\n      this.set('selectedBranchId', branchId);\n      this.get('sharedData').set('branchId', branchId);\n      var router = Ember.getOwner(this).lookup('router:main');\n      var currentRouteName = router.get('currentRouteName');\n      // console.log(currentRouteName);\n      this.trigger('branchChanged', currentRouteName);\n    },\n    getDefaultBranchId: function getDefaultBranchId() {\n      return '-1';\n    }\n  });\n});","define('banker/services/fetch', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n\n    fetch: function fetch(url, method, data) {\n      return Ember.$.ajax({\n        url: url,\n        type: method,\n        contentType: 'application/json',\n        data: JSON.stringify(data),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error) {\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            console.error(\"An error occurred in server!\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    }\n  });\n});","define('banker/services/notify', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    message: '',\n    type: '',\n    isNotificationVisible: false,\n\n    showNotification: function showNotification(message, type) {\n      this.set('message', message);\n      this.set('type', type);\n      this.set('isNotificationVisible', true);\n\n      Ember.run.later(this, function () {\n        this.clearNotification();\n      }, 2000);\n    },\n    clearNotification: function clearNotification() {\n      this.set('isNotificationVisible', false);\n      this.set('message', '');\n      this.set('type', '');\n    }\n  });\n});","define('banker/services/session', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n    sharedData: Ember.inject.service('shared-data'),\n    login: function login(credentials) {\n      var bankId = this.get('sharedData').get('bankId');\n      var username = credentials.username,\n          password = credentials.password,\n          isSuperAdmin = credentials.isSuperAdmin;\n\n      if (isSuperAdmin) {\n        bankId = -1;\n      }\n      // console.log(credentials);\n\n      var url = 'http://localhost:8080/banker/api/v1/auth?action=login';\n      if (isSuperAdmin) {\n        url = url + '&isSuperAdmin=true';\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'POST',\n        credentials: 'include',\n        contentType: 'application/json',\n        data: JSON.stringify({ username: username, password: password, bank_id: bankId }),\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          // console.log(xhr);\n          return response;\n        },\n        error: function error(_error) {\n          alert(\"Invalid credentials!!\");\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    signup: function signup(credentials) {\n      var username = credentials.username,\n          password = credentials.password,\n          user_role = credentials.user_role,\n          full_name = credentials.full_name,\n          date_of_birth = credentials.date_of_birth,\n          user_phonenumber = credentials.user_phonenumber,\n          user_address = credentials.user_address;\n\n      // console.log(credentials+'signup');\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/auth?action=register',\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          username: username,\n          password: password,\n          user_role: user_role,\n          full_name: full_name,\n          date_of_birth: date_of_birth,\n          user_phonenumber: user_phonenumber,\n          user_address: user_address\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          alert(\"Error:\" + _error2.responseJSON.message);\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    logout: function logout() {\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/auth?action=logout',\n        type: 'GET',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          document.cookie = document.cookie + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n          return response;\n        },\n        error: function error(_error3) {\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    }\n  });\n});","define('banker/services/shared-data', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Service.extend({\n        bankId: '*',\n        branchId: '*',\n        accNo: '*',\n        transactionId: '*',\n        loanId: '*',\n        userId: '*'\n\n        // changedBranchId() {\n        //     if(this.get('branchId')=='*')\n        //     {\n        //         this.trigger('branchChanged');\n        //         let targetController = this.controllerFor('application');\n        //         targetController.set('branch_name', 'all');\n\n        // }\n        // }\n\n    });\n});","define(\"banker/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"nJPBNGHZ\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isAuthRoute\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\n    \\\"],[1,[33,[\\\"nav-bar\\\"],null,[[\\\"logout\\\",\\\"branchesRoute\\\",\\\"accountsRoute\\\",\\\"dashboardRoute\\\",\\\"transactionsRoute\\\",\\\"loansRoute\\\",\\\"bankRoute\\\",\\\"banksRoute\\\",\\\"branchRoute\\\",\\\"usersRoute\\\"],[[33,[\\\"action\\\"],[[28,[null]],\\\"logout\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranches\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toAccounts\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"todashboard\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toTransactions\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toLoans\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBank\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBanks\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toUsers\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/application.hbs\" } });\n});","define(\"banker/templates/banks\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"BM7BMKZk\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks.hbs\" } });\n});","define(\"banker/templates/banks/bank\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xZPdNM0D\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"fK6faTLW\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VALQHMq6\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"90T/qSbx\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"account-input\\\"],null,[[\\\"isEdit\\\",\\\"accNo\\\",\\\"acc_type\\\",\\\"acc_balance\\\",\\\"acc_status\\\",\\\"username\\\",\\\"fullname\\\",\\\"branch_name\\\",\\\"branchId\\\",\\\"user_id\\\",\\\"toAccount\\\"],[true,[28,[null,\\\"accNo\\\"]],[28,[null,\\\"acc_type\\\"]],[28,[null,\\\"acc_balance\\\"]],[28,[null,\\\"acc_status\\\"]],[28,[null,\\\"username\\\"]],[28,[null,\\\"fullname\\\"]],[28,[null,\\\"branch_name\\\"]],[28,[null,\\\"branch_Id\\\"]],[28,[null,\\\"userId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toAccount\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"/7j+biR1\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-account\\\"],null,[[\\\"acc\\\",\\\"toLoans\\\",\\\"toTransactions\\\"],[[28,[null,\\\"acc\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toLoans\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toTransactions\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6GvgTOdB\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xKUrAWcj\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loans\\\"],null,[[\\\"loans\\\",\\\"isDirect\\\",\\\"totalLoans\\\",\\\"changeLoans\\\",\\\"viewLoan\\\",\\\"toaddNewLoan\\\",\\\"toeditLoan\\\"],[[28,[null,\\\"loans\\\"]],false,[28,[null,\\\"totalLoans\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"changeLoans\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"viewloan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewLoan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"editLoan\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JPkaz3Fx\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"IxYxvtRY\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"isEdit\\\",\\\"loan_id\\\",\\\"loan_type\\\",\\\"loan_amount\\\",\\\"loan_interest\\\",\\\"loan_duration\\\",\\\"loan_status\\\",\\\"loan_availed_date\\\",\\\"accNo\\\",\\\"bankId\\\",\\\"isDirect\\\",\\\"toLoan\\\"],[true,[28,[null,\\\"loan_id\\\"]],[28,[null,\\\"loan_type\\\"]],[28,[null,\\\"loan_amount\\\"]],[28,[null,\\\"loan_interest\\\"]],[28,[null,\\\"loan_duration\\\"]],[28,[null,\\\"loan_status\\\"]],[28,[null,\\\"loan_availed_date\\\"]],[28,[null,\\\"accNo\\\"]],[28,[null,\\\"bankId\\\"]],false,[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan/emi\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FsALyvBv\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-emi-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewEmi\\\"]],[13],[0,\\\"Make Payment\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"emi-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"EMI Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"To Be Paid Date\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actual Paid Date\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"generatedEmis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"emiNumber\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"transactionId\\\"]],false],[0,\\\"\\\\n           \\\"],[11,\\\"div\\\",[]],[16,\\\"class\\\",[34,[\\\"status-box \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"to-be-paid\\\",\\\"paid\\\"],null]]]],[13],[1,[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"To Be Paid\\\",\\\"Paid\\\"],null],false],[14],[0,\\\"\\\\n         \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"toBePaidDate\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"actualPaidDate\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"emi\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan/emi.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"hE3blQi0\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loan\\\"],null,[[\\\"loan\\\",\\\"toEmis\\\"],[[28,[null,\\\"loan\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toEmis\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"LE6pgDNF\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"isDirect\\\",\\\"toLoan\\\"],[false,[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"H1qcN2hg\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"c5Ru0dDV\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-transactions\\\"],null,[[\\\"transactions\\\",\\\"isDirect\\\",\\\"totalTransactions\\\",\\\"changeTransactions\\\",\\\"viewTransaction\\\",\\\"toaddNewTransaction\\\"],[[28,[null,\\\"transactions\\\"]],[28,[\\\"False\\\"]],[28,[null,\\\"totalTransactions\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"changeTransactions\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"viewTransaction\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewTransaction\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"loRVmyfu\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"transaction-input\\\"],null,[[\\\"isDirect\\\",\\\"transaction_type\\\",\\\"transaction_amount\\\",\\\"toTransaction\\\"],[false,[28,[null,\\\"transaction_type\\\"]],[28,[null,\\\"transaction_amount\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toTransaction\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions/transaction\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6F3ObMRR\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-transaction\\\"],null,[[\\\"transaction\\\"],[[28,[null,\\\"transaction\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions/transaction.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"g/g4K36F\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-accounts\\\"],null,[[\\\"accounts\\\",\\\"totalAccounts\\\",\\\"changeAccounts\\\",\\\"viewaccount\\\",\\\"toaddNewAccount\\\",\\\"toeditAccount\\\"],[[28,[null,\\\"accounts\\\"]],[28,[null,\\\"totalAccounts\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"changeAccounts\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"viewaccount\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewAccount\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"editAccount\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VbRegZQJ\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"account-input\\\"],null,[[\\\"toAccount\\\"],[[33,[\\\"action\\\"],[[28,[null]],\\\"toAccount\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cf/KS/cW\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/branch\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"D9WRcHTI\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/branch.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/branch/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9L4NDCPk\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"branch-input\\\"],null,[[\\\"isEdit\\\",\\\"address\\\",\\\"name\\\",\\\"branchId\\\",\\\"branch_number\\\",\\\"manager_id\\\",\\\"manager_name\\\",\\\"toBranch\\\"],[true,[28,[null,\\\"branch_address\\\"]],[28,[null,\\\"branch_name\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"branch_number\\\"]],[28,[null,\\\"manager_id\\\"]],[28,[null,\\\"manager_name\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/branch/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/branch/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"gsziDjrZ\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Branch Details\\\"],[14],[0,\\\"\\\\n   \\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_number\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_address\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Manager Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"viewAccounts\\\"]],[13],[0,\\\"View Accounts\\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_id\\\"]],[28,[\\\"branch\\\",\\\"main_branch_id\\\"]]],null]],null,{\\\"statements\\\":[[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"MANAGER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"delete\\\",[28,[\\\"branch\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-trash-fill\\\"],[13],[14],[0,\\\" delete Branch\\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/branch/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"0qQDogtO\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branches-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-account-btn\\\"],[15,\\\"style\\\",\\\"margin-top:20px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewBranch\\\"]],[13],[0,\\\"New Branch\\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"search-container\\\"],[15,\\\"style\\\",\\\"margin-top:20px\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"class\\\",\\\"search-input\\\"],[15,\\\"placeholder\\\",\\\"Search Branch name / Manager name\\\"],[16,\\\"value\\\",[26,[\\\"searchQuery\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateSearchQuery\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[15,\\\"style\\\",\\\"margin-right: 42%;padding:10px;margin-top:-3px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"performSearch\\\"]],[13],[0,\\\"Search\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"searchSuggestions\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"suggestions-list\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"searchSuggestions\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"selectSuggestion\\\",[28,[\\\"suggestion\\\"]]]],[13],[1,[28,[\\\"suggestion\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"suggestion\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\" \\\\n \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"branches-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Branch Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Branch Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Manager Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branches\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewBranch\\\",[28,[\\\"branch\\\"]]]],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewBranch\\\",[28,[\\\"branch\\\"]]]],[13],[1,[28,[\\\"branch\\\",\\\"branch_number\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewBranch\\\",[28,[\\\"branch\\\"]]]],[13],[1,[28,[\\\"branch\\\",\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editBranch\\\",[28,[\\\"branch\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-pencil\\\"],[13],[14],[0,\\\" Edit\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_id\\\"]],[28,[\\\"branch\\\",\\\"main_branch_id\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"deleteBranch\\\",[28,[\\\"branch\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-trash-fill\\\"],[13],[14],[0,\\\" Delete\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branches\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default;margin-right:40%;\\\"],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[13],[0,\\\"No Branches Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branches\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"pagination-controls\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"previousPage\\\"]],[13],[0,\\\"Previous\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showFirstPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",1]],[13],[0,\\\"1\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLeftEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:white;font-weight:bold;\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"visiblePages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"page\\\"]],[28,[\\\"currentPage\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"page\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[28,[\\\"page\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"page\\\"]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showRightEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:white;font-weight:bold;\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLastPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"totalPages\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[26,[\\\"totalPages\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"nextPage\\\"]],[13],[0,\\\"Next\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[14],[0,\\\"\\\\n \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"BynNByZO\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"branch-input\\\"],null,[[\\\"toBranch\\\"],[[33,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"KTwYytYr\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Edit Bank\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bankId\\\"],[13],[0,\\\"Bank Name\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"bankId\\\"],[16,\\\"value\\\",[28,[\\\"bank\\\",\\\"bank_name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branchId\\\"],[13],[0,\\\"Branch ID\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branchId\\\"],[16,\\\"value\\\",[26,[\\\"branchId\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branchId\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Branch\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_id\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_id\\\"]],[28,[\\\"bank\\\",\\\"main_branch_id\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Update Bank\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"a9il1mRT\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Bank Details\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"banks\\\"]]],null,{\\\"statements\\\":[[0,\\\"     \\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Code:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"bank_code\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Admin:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"admin_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n   \\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Main Branch Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"branch\\\",\\\"branch_name\\\"]],[28,[\\\"branch\\\",\\\"branch_name\\\"]],\\\"Not Assigned\\\"],null],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Main Branch Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"branch\\\",\\\"branch_address\\\"]],[28,[\\\"branch\\\",\\\"branch_address\\\"]],\\\"Not Assigned\\\"],null],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"ADMIN\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"    \\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[15,\\\"style\\\",\\\"margin-top:15px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"updateMainBranch\\\",[28,[\\\"bank\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-pencil\\\"],[13],[14],[0,\\\" Update Main Branch\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[\\\"bank\\\"]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xKCT9FUw\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"x3IkRvAD\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loans\\\"],null,[[\\\"loans\\\",\\\"totalLoans\\\",\\\"isDirect\\\",\\\"changeLoans\\\",\\\"viewLoan\\\",\\\"toaddNewLoan\\\",\\\"toeditLoan\\\"],[[28,[null,\\\"loans\\\"]],[28,[null,\\\"totalLoans\\\"]],true,[33,[\\\"action\\\"],[[28,[null]],\\\"changeLoans\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"viewloan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewLoan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"editLoan\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6v9/r6Fn\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dT0ZVPBf\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"isEdit\\\",\\\"loan_id\\\",\\\"loan_type\\\",\\\"loan_amount\\\",\\\"loan_interest\\\",\\\"loan_duration\\\",\\\"loan_status\\\",\\\"loan_availed_date\\\",\\\"accNo\\\",\\\"toLoan\\\"],[true,[28,[null,\\\"loan_id\\\"]],[28,[null,\\\"loan_type\\\"]],[28,[null,\\\"loan_amount\\\"]],[28,[null,\\\"loan_interest\\\"]],[28,[null,\\\"loan_duration\\\"]],[28,[null,\\\"loan_status\\\"]],[28,[null,\\\"loan_availed_date\\\"]],[28,[null,\\\"accNo\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan/emi\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"nfWE8SNt\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-emi-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewEmi\\\"]],[13],[0,\\\"Make Payment\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"emi-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"EMI Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"To Be Paid Date\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actual Paid Date\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"generatedEmis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"emiNumber\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"transactionId\\\"]],false],[0,\\\"\\\\n           \\\"],[11,\\\"div\\\",[]],[16,\\\"class\\\",[34,[\\\"status-box \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"to-be-paid\\\",\\\"paid\\\"],null]]]],[13],[1,[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"To Be Paid\\\",\\\"Paid\\\"],null],false],[14],[0,\\\"\\\\n         \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"toBePaidDate\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"actualPaidDate\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"emi\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan/emi.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"mnDm0mr1\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loan\\\"],null,[[\\\"loan\\\",\\\"toEmis\\\"],[[28,[null,\\\"loan\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toEmis\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"eV2n9z+0\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"isDirect\\\",\\\"toLoan\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lG1GKROB\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ERcgQLif\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-transactions\\\"],null,[[\\\"accNo\\\",\\\"transactions\\\",\\\"isDirect\\\",\\\"totalTransactions\\\",\\\"changeTransactions\\\",\\\"viewTransaction\\\",\\\"toaddNewTransaction\\\"],[[28,[null,\\\"accNo\\\"]],[28,[null,\\\"transactions\\\"]],true,[28,[null,\\\"totalTransactions\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"changeTransactions\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"viewTransaction\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewTransaction\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Xyrf4iDL\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"transaction-input\\\"],null,[[\\\"isDirect\\\",\\\"toTransaction\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"toTransaction\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions/transaction\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"va6r4Sqp\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"view-transaction\\\"],null,[[\\\"transaction\\\"],[[28,[null,\\\"transaction\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions/transaction.hbs\" } });\n});","define(\"banker/templates/banks/bank/users\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"j0SLfskV\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/user\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"poyFvRzi\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/user.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/user/dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"aVpgYIsV\", \"block\": \"{\\\"statements\\\":[[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"sessionData\\\",\\\"user_role\\\"]],[28,[\\\"userRole\\\",\\\"ADMIN\\\"]]],null]],null,{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"   \\\"],[1,[33,[\\\"admin-dashboard\\\"],null,[[\\\"branchName\\\",\\\"accountCount\\\",\\\"loansAvailed\\\",\\\"totalDeposits\\\"],[[28,[\\\"branch\\\",\\\"branchName\\\"]],[28,[\\\"branch\\\",\\\"accountCount\\\"]],[28,[\\\"branch\\\",\\\"loansAvailed\\\"]],[28,[\\\"branch\\\",\\\"totalDeposits\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"sessionData\\\",\\\"user_role\\\"]],[28,[\\\"userRole\\\",\\\"MANAGER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[33,[\\\"manager-dashboard\\\"],null,[[\\\"branch\\\"],[[28,[\\\"branch\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"sessionData\\\",\\\"user_role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[33,[\\\"customer-dashboard\\\"],null,[[\\\"accountList\\\",\\\"loanList\\\",\\\"transactionList\\\"],[[28,[null,\\\"accountList\\\"]],[28,[null,\\\"loanList\\\"]],[28,[null,\\\"transactionList\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/user/dashboard.hbs\" } });\n});","define(\"banker/templates/banks/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"HF/tTQwx\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"banks-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-bank-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewBank\\\"]],[13],[0,\\\"New Bank\\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"banks-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Bank Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Bank Code\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Admin Name\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"banks\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewBank\\\",[28,[\\\"bank\\\"]]]],[13],[0,\\\" \\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"bank_code\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"admin_name\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"bank\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n   \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"pagination-controls\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"previousPage\\\"]],[13],[0,\\\"Previous\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showFirstPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",1]],[13],[0,\\\"1\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLeftEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"visiblePages\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"page\\\"]],[28,[\\\"currentPage\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"page\\\"]]]],[13],[0,\\\"\\\\n        \\\"],[1,[28,[\\\"page\\\"]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"page\\\"]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showRightEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLastPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"totalPages\\\"]]]],[13],[0,\\\"\\\\n        \\\"],[1,[26,[\\\"totalPages\\\"]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"nextPage\\\"]],[13],[0,\\\"Next\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/index.hbs\" } });\n});","define(\"banker/templates/banks/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tjhNXFfW\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-form\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Create New Bank\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n   \\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bank_name\\\"],[13],[0,\\\"Bank Name\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"bank_name\\\"],[16,\\\"value\\\",[26,[\\\"bank_name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"bank_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bank_code\\\"],[13],[0,\\\"Bank Code\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"bank_code\\\"],[16,\\\"value\\\",[26,[\\\"bank_code\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"bank_code\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n   \\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"admin_name\\\"],[13],[0,\\\"Admin Name\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"admin_name\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"admin_id\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Admin\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"admins\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"admin\\\",\\\"admin_id\\\"]],null],[13],[1,[28,[\\\"admin\\\",\\\"admin_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"admin\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n \\\\n\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Create Bank\\\"],[14],[0,\\\"\\\\n   \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"banks\\\"],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/new.hbs\" } });\n});","define(\"banker/templates/components/account-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"BYHo4W2l\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-form\\\"],[15,\\\"style\\\",\\\"margin-top:20px\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Account\\\",\\\"Create New Account\\\"],null],false],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accNo\\\"],[13],[0,\\\"Account Number\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"accNo\\\"],[16,\\\"value\\\",[26,[\\\"accNo\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"accNo\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_type\\\"],[13],[0,\\\"Account Type\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"acc_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"       \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_status\\\"],[13],[0,\\\"Account Status\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredStatuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"acc_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_status\\\"],[13],[0,\\\"Account Status\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"acc_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[]}],[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"username\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"username\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branch_name\\\"],[13],[0,\\\"Branch Name\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branch_name\\\"],[16,\\\"value\\\",[26,[\\\"branch_name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branchId\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select branch\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branchNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_id\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_name\\\"]],[28,[\\\"branch_name\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Account\\\",\\\"Create Account\\\"],null],false],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n      \\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/account-input.hbs\" } });\n});","define(\"banker/templates/components/admin-dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"teGhNLb9\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-card\\\"],[15,\\\"style\\\",\\\"padding:40px 20px;\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[15,\\\"class\\\",\\\"branch-name\\\"],[13],[1,[26,[\\\"branchName\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:60px\\\"],[13],[0,\\\"Accounts:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[26,[\\\"accountCount\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:60px\\\"],[13],[0,\\\"Loans:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[26,[\\\"loansAvailed\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:60px\\\"],[13],[0,\\\"Total Deposits:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs. \\\"],[1,[26,[\\\"totalDeposits\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/admin-dashboard.hbs\" } });\n});","define(\"banker/templates/components/auth-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"crJ9nZzg\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[15,\\\"class\\\",\\\"auth-body\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Register\\\",\\\"Login\\\"],null],false],[14],[0,\\\"\\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"if\\\"],[[28,[\\\"isSuper\\\"]],\\\"superAdminForm\\\",\\\"submitForm\\\"],null]],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"name\\\"],[13],[0,\\\"Name\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"name\\\"],[15,\\\"type\\\",\\\"text\\\"],[16,\\\"value\\\",[26,[\\\"name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your full name\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateName\\\"],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"nameError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"nameError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"dob\\\"],[13],[0,\\\"Date of Birth\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"dob\\\"],[15,\\\"type\\\",\\\"date\\\"],[16,\\\"value\\\",[26,[\\\"dob\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"dob\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateDob\\\"],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"dobError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"dobError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"pno\\\"],[13],[0,\\\"Phone Number\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"pno\\\"],[15,\\\"type\\\",\\\"number\\\"],[16,\\\"value\\\",[26,[\\\"pno\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your phone number\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"pno\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validatePno\\\"],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"pnoError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"pnoError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"addr\\\"],[13],[0,\\\"Address\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"textarea\\\",[]],[15,\\\"id\\\",\\\"addr\\\"],[16,\\\"value\\\",[26,[\\\"addr\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your address\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"addr\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateAddr\\\"],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"addrError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"addrError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"username\\\"],[15,\\\"type\\\",\\\"text\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your username\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"username\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateUsername\\\"],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"usernameError\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"usernameError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"password\\\"],[13],[0,\\\"Password\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"password\\\"],[15,\\\"type\\\",\\\"password\\\"],[16,\\\"value\\\",[26,[\\\"password\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your password\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"password\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"validatePassword\\\",\\\"validatePass\\\"],null]],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"passwordError\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"passwordError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"confirmPassword\\\"],[13],[0,\\\"Confirm Password\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"confirmPassword\\\"],[15,\\\"type\\\",\\\"password\\\"],[16,\\\"value\\\",[26,[\\\"confirmPassword\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Confirm your password\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"confirmPassword\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateConfirmPassword\\\"],null],null],[13],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"confirmPasswordError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"confirmPasswordError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"role\\\"],[13],[0,\\\"Register as\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"role\\\"],[16,\\\"value\\\",[26,[\\\"selectedRole\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedRole\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateRole\\\"],null],null],[13],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[15,\\\"disabled\\\",\\\"\\\"],[15,\\\"selected\\\",\\\"\\\"],[13],[0,\\\"Select a role\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"MANAGER\\\"],[13],[0,\\\"Manager\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"CUSTOMER\\\"],[13],[0,\\\"Customer\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"ADMIN\\\"],[13],[0,\\\"Admin\\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"roleError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"roleError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[28,[\\\"isSuper\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bank_name\\\"],[13],[0,\\\"Bank Name\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n            \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"bank_name\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"value\\\",[26,[\\\"bank_name\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"bank_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"onblur\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"validateBankName\\\"],null],null],[13],[0,\\\"\\\\n              \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select bank\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"bankNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"bank\\\",\\\"bank_name\\\"]],null],[13],[1,[28,[\\\"bank\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"bank\\\"]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"bankNameError\\\"]]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[1,[26,[\\\"bankNameError\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Register\\\",\\\"Login\\\"],null],false],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isSuper\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"switch\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Switch to Login\\\",\\\"Switch to Register\\\"],null],false],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/auth-form.hbs\" } });\n});","define(\"banker/templates/components/branch-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"DZfCCks/\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-form\\\"],[15,\\\"style\\\",\\\"margin-top:40px;padding:40px 70px;\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Branch\\\",\\\"Create New Branch\\\"],null],false],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n     \\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"name\\\"],[13],[0,\\\"Branch Name\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"name\\\"],[16,\\\"value\\\",[26,[\\\"name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n  \\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"address\\\"],[13],[0,\\\"Branch Address\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"address\\\"],[16,\\\"value\\\",[26,[\\\"address\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"address\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branch_number\\\"],[13],[0,\\\"Branch Number\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"branch_number\\\"],[16,\\\"value\\\",[26,[\\\"branch_number\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branch_number\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"manager_id\\\"],[13],[0,\\\"Manager Name\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"manager_id\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"value\\\",[26,[\\\"manager_id\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"manager_id\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[26,[\\\"manager_id\\\"]],null],[13],[1,[26,[\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Manager\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]}],[6,[\\\"each\\\"],[[28,[\\\"availableManagers\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"manager\\\",\\\"manager_id\\\"]],null],[13],[1,[28,[\\\"manager\\\",\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"manager\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n  \\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Branch\\\",\\\"Create Branch\\\"],null],false],[14],[0,\\\"\\\\n      \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"banks.bank.branches\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/branch-input.hbs\" } });\n});","define(\"banker/templates/components/customer-dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Svrp/hCM\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-container\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-section section-1\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Loans Overview\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"loanList\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default\\\"],[15,\\\"class\\\",\\\"new-account-btn\\\"],[13],[0,\\\"No Loans Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"loanList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card-dash\\\"],[13],[0,\\\"\\\\n                        \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Loan ID: \\\"],[1,[28,[\\\"item\\\",\\\"loan_id\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Loan Type:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[1,[28,[\\\"item\\\",\\\"loan_type\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Loan Amount:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"item\\\",\\\"loan_amount\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Loan Duration:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[1,[28,[\\\"item\\\",\\\"loan_duration\\\"]],false],[0,\\\" months\\\"],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Availed Date:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[1,[28,[\\\"item\\\",\\\"loan_availed_date\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"showEmiModal\\\",[28,[\\\"item\\\"]]]],[13],[0,\\\"Emi Schedule\\\"],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                    \\\"],[14],[0,\\\"\\\\n                \\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]},null]],\\\"locals\\\":[]}],[0,\\\"        \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"right-container\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-section section-2\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Transactions Overview\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"transactionList\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default\\\"],[15,\\\"class\\\",\\\"new-account-btn\\\"],[13],[0,\\\"No Transactions Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"transactionList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card-dash\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Transaction ID: \\\"],[1,[28,[\\\"transaction\\\",\\\"transaction_id\\\"]],false],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Type:\\\"],[14],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_type\\\"]],false],[14],[0,\\\"\\\\n                            \\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Date:\\\"],[14],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_datetime\\\"]],false],[14],[0,\\\"\\\\n                            \\\"],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"transaction\\\"]},null]],\\\"locals\\\":[]}],[0,\\\"            \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-section section-3\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Accounts Overview\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"accountList\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default\\\"],[15,\\\"class\\\",\\\"new-account-btn\\\"],[13],[0,\\\"No Accounts Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"accountList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card-dash\\\"],[13],[0,\\\"\\\\n                        \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Account Number: \\\"],[1,[28,[\\\"item\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label-dash\\\"],[13],[0,\\\"Balance:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value-dash\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"item\\\",\\\"acc_balance\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]},null]],\\\"locals\\\":[]}],[0,\\\"            \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-modal\\\"],[15,\\\"id\\\",\\\"emiModal\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-modal-content\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"close-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"closeEmiModal\\\"]],[13],[0,\\\"×\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"EMI Schedule for Loan ID: Rs.\\\"],[1,[26,[\\\"selectedLoanId\\\"]],false],[14],[11,\\\"span\\\",[]],[13],[0,\\\"EMI Amount: Rs.\\\"],[1,[28,[\\\"emi\\\",\\\"emiAmount\\\"]],false],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"emi-table\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n                \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n                    \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"EMI Number\\\"],[14],[0,\\\"\\\\n                    \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"To-Be Paid Date\\\"],[14],[0,\\\"\\\\n                \\\"],[14],[0,\\\"\\\\n            \\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"emiSchedule\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n                        \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"emiNumber\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"td\\\",[]],[13],[1,[33,[\\\"format-date\\\"],[[28,[\\\"emi\\\",\\\"toBePaidDate\\\"]]],null],false],[14],[0,\\\"\\\\n                    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"emi\\\"]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/customer-dashboard.hbs\" } });\n});","define(\"banker/templates/components/loan-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lsIXSX/6\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[15,\\\"style\\\",\\\"margin-top:20px\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Loan\\\",\\\"Create New Loan\\\"],null],false],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_id\\\"],[13],[0,\\\"Loan ID\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"loan_id\\\"],[16,\\\"value\\\",[26,[\\\"loan_id\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_id\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_type\\\"],[13],[0,\\\"Loan Type\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"loan_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accNo\\\"],[13],[0,\\\"Account Number\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accNo\\\"],[16,\\\"value\\\",[26,[\\\"accNo\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"accNo\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Account Number\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"account\\\",\\\"acc_no\\\"]],null],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_amount\\\"],[13],[0,\\\"Loan Amount\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"number\\\"],[15,\\\"id\\\",\\\"loan_amount\\\"],[16,\\\"value\\\",[26,[\\\"loan_amount\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_amount\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_duration\\\"],[13],[0,\\\"Loan Duration\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_duration\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"value\\\",[34,[[26,[\\\"loan_duration\\\"]]]]],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_duration\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select duration\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"durations\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"duration\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"duration\\\"]],[28,[\\\"loan_duration\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"duration\\\"]],false],[0,\\\" Months\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"duration\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_status\\\"],[13],[0,\\\"Loan Status\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"loan_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_status\\\"],[13],[0,\\\"Loan Status\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredStatuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"loan_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Loan\\\",\\\"Create Loan\\\"],null],false],[14],[0,\\\"\\\\n   \\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[6,[\\\"link-to\\\"],[\\\"banks.bank.loans\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[6,[\\\"link-to\\\"],[\\\"banks.bank.accounts.account.loans\\\",[28,[\\\"bankId\\\"]],[28,[\\\"accNo\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/loan-input.hbs\" } });\n});","define(\"banker/templates/components/manager-dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cZPgSuvZ\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card-container\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[15,\\\"class\\\",\\\"card-title\\\"],[13],[0,\\\"Accounts\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Savings Accounts:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"savingsAccountCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-60px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Business Accounts:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"businessAccountCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card deposit-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[15,\\\"class\\\",\\\"card-title\\\"],[13],[0,\\\"Deposits\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Savings Deposits:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs. \\\"],[1,[28,[\\\"branch\\\",\\\"totalSavingsDeposits\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Business Deposits:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs. \\\"],[1,[28,[\\\"branch\\\",\\\"totalBusinessDeposits\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card loan-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[15,\\\"class\\\",\\\"card-title\\\"],[13],[0,\\\"Loans\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Home Loans:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"homeLoanCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Education Loans:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"educationLoanCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[15,\\\"style\\\",\\\"margin-left:-50px;margin-right:-50px;padding-left:60px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Business Loans:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"businessLoanCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/manager-dashboard.hbs\" } });\n});","define(\"banker/templates/components/nav-bar\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"g63WQ7hU\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"navbar\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"nav-items\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"SUPERADMIN\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"users\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"users\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Users\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"banks\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"banks\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Banks\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"SUPERADMIN\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"dashboard\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"dashboard\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Dashboard\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"bank\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"bank\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Bank\\\"],[14],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"ADMIN\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"branches\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"branches\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Branches\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"MANAGER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"branch\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"branch\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Branch\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"accounts\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"accounts\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Accounts\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"transactions\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"transactions\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Transactions\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentRoute\\\"]],\\\"loans\\\"],null],\\\"active\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"navigate\\\",\\\"loans\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Loans\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"SUPERADMIN\\\"]]],null]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"MANAGER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-dropdown\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branch\\\"],[16,\\\"value\\\",[26,[\\\"branch_name\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"setbranch\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All Branches\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_name\\\"]],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"logout\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"logout\\\"]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-box-arrow-left\\\"],[13],[14],[0,\\\"  Logout\\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/nav-bar.hbs\" } });\n});","define(\"banker/templates/components/notify-box\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"x9D31usa\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[16,\\\"class\\\",[34,[\\\"notification-top-right \\\",[26,[\\\"type\\\"]]]]],[13],[0,\\\"\\\\n  \\\"],[1,[26,[\\\"message\\\"]],false],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/notify-box.hbs\" } });\n});","define(\"banker/templates/components/transaction-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Vknyr6Fp\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Make New Payment\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isEmi\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transaction_type\\\"],[13],[0,\\\"Transaction Type\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"transaction_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"transaction_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"transaction_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEmi\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transaction_type\\\"],[13],[0,\\\"Transaction Type\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"transaction_type\\\"],[16,\\\"value\\\",[26,[\\\"transaction_type\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transaction_amount\\\"],[13],[0,\\\"Transaction Amount\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"number\\\"],[15,\\\"id\\\",\\\"transaction_amount\\\"],[16,\\\"value\\\",[26,[\\\"transaction_amount\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"transaction_amount\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEmi\\\"]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n  \\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accNo\\\"],[13],[0,\\\"Account Number\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n          \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accNo\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"value\\\",[26,[\\\"accNo\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"accNo\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Account Number\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"account\\\",\\\"acc_no\\\"]],null],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Proceed\\\"],[14],[0,\\\"\\\\n      \\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n     \\\\n  \\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/transaction-input.hbs\" } });\n});","define(\"banker/templates/components/view-account\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9diMPMIz\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Account Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Type:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_type\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Balance:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_balance\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"acc\\\",\\\"acc_status\\\"]],[28,[\\\"status\\\",\\\"ACTIVE\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"loans\\\"]],[13],[0,\\\"View Loans\\\"],[14],[0,\\\"\\\\n         \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"transactions\\\"]],[13],[0,\\\"View Transactions\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-account.hbs\" } });\n});","define(\"banker/templates/components/view-accounts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"SDfWb8Dv\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"accounts-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:50px\\\"],[15,\\\"class\\\",\\\"new-account-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewAccount\\\"]],[13],[0,\\\"New Account\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[15,\\\"style\\\",\\\"margin-top:-10px\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accountType\\\"],[13],[0,\\\"Type: \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accountType\\\"],[16,\\\"value\\\",[26,[\\\"selectedAccountType\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"AccountType\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"savings\\\"],[13],[0,\\\"Savings\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"business\\\"],[13],[0,\\\"Business\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accountStatus\\\"],[13],[0,\\\"Status: \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accountStatus\\\"],[16,\\\"value\\\",[26,[\\\"selectedAccountStatus\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"AccountStatus\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"active\\\"],[13],[0,\\\"Active\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"inactive\\\"],[13],[0,\\\"Inactive\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[15,\\\"style\\\",\\\"margin-top:7px;padding: 8px 10px 8px 10px;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"FilterReset\\\"]],[13],[0,\\\"Reset\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"search-container\\\"],[15,\\\"style\\\",\\\"margin-top:-10px\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"class\\\",\\\"search-input\\\"],[15,\\\"placeholder\\\",\\\"Search Username\\\"],[16,\\\"value\\\",[26,[\\\"searchQuery\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateSearchQuery\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[15,\\\"style\\\",\\\"margin-right: 42%;padding:10px;margin-top:-3px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"performSearch\\\"]],[13],[0,\\\"Search\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"searchSuggestions\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"suggestions-list\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"searchSuggestions\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"selectSuggestion\\\",[28,[\\\"suggestion\\\"]]]],[13],[1,[28,[\\\"suggestion\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"suggestion\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"accounts-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Account No\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Type\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"MANAGER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Branch Name\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"accounts\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"accounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewAccount\\\",[28,[\\\"account\\\"]]]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_type\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_status\\\"]],false],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"MANAGER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n                \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editAccount\\\",[28,[\\\"account\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-pencil\\\"],[13],[14],[0,\\\" Edit\\\"],[14],[0,\\\"\\\\n              \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"accounts\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"         \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default;margin-right:40%;\\\"],[15,\\\"class\\\",\\\"new-account-btn\\\"],[13],[0,\\\"No Accounts Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"accounts\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"pagination-controls\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"previousPage\\\"]],[13],[0,\\\"Previous\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showFirstPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",1]],[13],[0,\\\"1\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLeftEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"visiblePages\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"page\\\"]],[28,[\\\"currentPage\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"page\\\"]]]],[13],[0,\\\"\\\\n        \\\"],[1,[28,[\\\"page\\\"]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"page\\\"]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showRightEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLastPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"totalPages\\\"]]]],[13],[0,\\\"\\\\n        \\\"],[1,[26,[\\\"totalPages\\\"]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"nextPage\\\"]],[13],[0,\\\"Next\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-accounts.hbs\" } });\n});","define(\"banker/templates/components/view-loan\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"n0l8l6kn\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Loan Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Loan Id:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Loan Type:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_type\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Loan Amount:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"loan\\\",\\\"loan_amount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Interest:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_interest\\\"]],false],[0,\\\"%\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Duration:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_duration\\\"]],false],[0,\\\" Months\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Availed Date:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_availed_date\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:40px\\\"],[13],[0,\\\"Account Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"loan\\\",\\\"loan_status\\\"]],[28,[\\\"status\\\",\\\"REJECTED\\\"]]],null]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"loan\\\",\\\"loan_status\\\"]],[28,[\\\"status\\\",\\\"PENDING\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"toEmis\\\",[28,[\\\"loan\\\"]]]],[13],[0,\\\"View Emis\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-loan.hbs\" } });\n});","define(\"banker/templates/components/view-loans\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"eOD+n+5W\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loans-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:65px\\\"],[15,\\\"class\\\",\\\"new-loan-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewLoan\\\"]],[13],[0,\\\"New Loan\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loanType\\\"],[13],[0,\\\"Type:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loanType\\\"],[16,\\\"value\\\",[26,[\\\"selectedLoanType\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"LoanType\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"homeloan\\\"],[13],[0,\\\"Home Loan\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"businessloan\\\"],[13],[0,\\\"Business Loan\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"educationloan\\\"],[13],[0,\\\"Education Loan\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loanStatus\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loanStatus\\\"],[16,\\\"value\\\",[26,[\\\"selectedLoanStatus\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"LoanStatus\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"approved\\\"],[13],[0,\\\"Approved\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"rejected\\\"],[13],[0,\\\"Rejected\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"closed\\\"],[13],[0,\\\"Closed\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[15,\\\"style\\\",\\\"margin-top:7px;padding: 8px 10px 8px 10px;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"FilterReset\\\"]],[13],[0,\\\"Reset\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"search-container\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"class\\\",\\\"search-input\\\"],[15,\\\"placeholder\\\",\\\"Search Account Number\\\"],[16,\\\"value\\\",[26,[\\\"searchQuery\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateSearchQuery\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[15,\\\"style\\\",\\\"margin-right: 52%;padding:10px;margin-top:-3px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"performSearch\\\"]],[13],[0,\\\"Search\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"searchSuggestions\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"suggestions-list\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"searchSuggestions\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"selectSuggestion\\\",[28,[\\\"suggestion\\\"]]]],[13],[1,[28,[\\\"suggestion\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"suggestion\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"loans-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Loan ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Loan Type\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Loan Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Amount\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Action\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"loans\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"loans\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewLoan\\\",[28,[\\\"loan\\\"]]]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_id\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_type\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_status\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"Rs. \\\"],[1,[28,[\\\"loan\\\",\\\"loan_amount\\\"]],false],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"userRole\\\",\\\"CUSTOMER\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"              \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\",\\\"CLOSED\\\"]],[28,[\\\"loan\\\",\\\"loan_status\\\"]]],null]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\",\\\"REJECTED\\\"]],[28,[\\\"loan\\\",\\\"loan_status\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"editLoan\\\",[28,[\\\"loan\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-pencil\\\"],[13],[14],[0,\\\" Edit\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"              \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"loan\\\"]},null]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"loans\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"     \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default;margin-right:40%;\\\"],[15,\\\"class\\\",\\\"new-transaction-btn\\\"],[13],[0,\\\"No Loans Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"pagination-controls\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"previousPage\\\"]],[13],[0,\\\"Previous\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showFirstPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",1]],[13],[0,\\\"1\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLeftEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"visiblePages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"page\\\"]],[28,[\\\"currentPage\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"page\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[28,[\\\"page\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"page\\\"]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showRightEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLastPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"totalPages\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[26,[\\\"totalPages\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"nextPage\\\"]],[13],[0,\\\"Next\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]}],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-loans.hbs\" } });\n});","define(\"banker/templates/components/view-transaction\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1BS0Z6Lz\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Transaction Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Transaction Id:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Transaction Type:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_type\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Transaction Amount:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"transaction\\\",\\\"transaction_amount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Date and Time:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_datetime\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n   \\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-transaction.hbs\" } });\n});","define(\"banker/templates/components/view-transactions\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Ze/mr977\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transactions-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:65px\\\"],[15,\\\"class\\\",\\\"new-transaction-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewTransaction\\\"]],[13],[0,\\\"New Transaction\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transactionType\\\"],[13],[0,\\\"Type\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"transactionType\\\"],[16,\\\"value\\\",[26,[\\\"selectedTransactionType\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"TransactionType\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"emi\\\"],[13],[0,\\\"EMI\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"debit\\\"],[13],[0,\\\"Debit\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"credit\\\"],[13],[0,\\\"Credit\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transactionStatus\\\"],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"transactionStatus\\\"],[16,\\\"value\\\",[26,[\\\"selectedTransactionStatus\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"TransactionStatus\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"success\\\"],[13],[0,\\\"Success\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[15,\\\"style\\\",\\\"margin-top:7px;padding: 8px 10px 8px 10px;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"FilterReset\\\"]],[13],[0,\\\"Reset\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"search-container\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"class\\\",\\\"search-input\\\"],[15,\\\"placeholder\\\",\\\"Search Account Number\\\"],[16,\\\"value\\\",[26,[\\\"searchQuery\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateSearchQuery\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[15,\\\"style\\\",\\\"margin-right: 49%;padding:10px;margin-top:-3px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"performSearch\\\"]],[13],[0,\\\"Search\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"searchSuggestions\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"suggestions-list\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"searchSuggestions\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"selectSuggestion\\\",[28,[\\\"suggestion\\\"]]]],[13],[1,[28,[\\\"suggestion\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"suggestion\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"transactions-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction Type\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Amount\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Date and Time\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"transactions\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"transactions\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewTransaction\\\",[28,[\\\"transaction\\\"]]]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_id\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_type\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"transaction\\\",\\\"transaction_amount\\\"]],false],[14],[0,\\\"\\\\n            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_datetime\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"transaction\\\"]},null]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"transactions\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default;margin-right:40%;\\\"],[15,\\\"class\\\",\\\"new-transaction-btn\\\"],[13],[0,\\\"No Transactions Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"transactions\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"pagination-controls\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"previousPage\\\"]],[13],[0,\\\"Previous\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showFirstPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",1]],[13],[0,\\\"1\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLeftEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"visiblePages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"page\\\"]],[28,[\\\"currentPage\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"page\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[28,[\\\"page\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"page\\\"]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showRightEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLastPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"totalPages\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[26,[\\\"totalPages\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"nextPage\\\"]],[13],[0,\\\"Next\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-transactions.hbs\" } });\n});","define(\"banker/templates/login\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ReGcfSnU\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSignup\\\",\\\"onLogin\\\",\\\"toSignup\\\"],[false,[33,[\\\"action\\\"],[[28,[null]],\\\"login\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/login.hbs\" } });\n});","define(\"banker/templates/not-found\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ZdLGNXwx\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/not-found.hbs\" } });\n});","define(\"banker/templates/register\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"A1DaQ2EA\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSignup\\\",\\\"onSignup\\\",\\\"toLogin\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"signup\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/register.hbs\" } });\n});","define(\"banker/templates/super-admin-login\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"2cA4znvo\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSuper\\\",\\\"toSuperAdmin\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"SuperAdminLogin\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/super-admin-login.hbs\" } });\n});","define(\"banker/templates/users\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lod6kaI3\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users.hbs\" } });\n});","define(\"banker/templates/users/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1GcDQrwu\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"users-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userRole\\\"],[13],[0,\\\"Role\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"userRole\\\"],[16,\\\"value\\\",[26,[\\\"selectedUserRole\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"UserRole\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"admin\\\"],[13],[0,\\\"Admin\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"customer\\\"],[13],[0,\\\"Customer\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"manager\\\"],[13],[0,\\\"Manager\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userStatus\\\"],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"userStatus\\\"],[16,\\\"value\\\",[26,[\\\"selectedUserStatus\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"UserStatus\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"active\\\"],[13],[0,\\\"Active\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"inactive\\\"],[13],[0,\\\"Inactive\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[15,\\\"style\\\",\\\"margin-top:5px;padding:10px 15px 10px 15px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"FilterReset\\\"]],[13],[0,\\\"Reset\\\"],[14],[0,\\\"\\\\n    \\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"search-container\\\"],[15,\\\"style\\\",\\\"margin-top:-70px;margin-left:71%;width:29%;\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"input\\\",[]],[15,\\\"style\\\",\\\"width:170px;\\\"],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"class\\\",\\\"search-input\\\"],[15,\\\"placeholder\\\",\\\"Search Username\\\"],[16,\\\"value\\\",[26,[\\\"searchQuery\\\"]],null],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateSearchQuery\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[15,\\\"style\\\",\\\"padding:10px;margin-top:-3px\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"performSearch\\\"]],[13],[0,\\\"Search\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"searchSuggestions\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"suggestions-list\\\"],[15,\\\"style\\\",\\\"width:170px;\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"searchSuggestions\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"selectSuggestion\\\",[28,[\\\"suggestion\\\"]]]],[13],[1,[28,[\\\"suggestion\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"suggestion\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"users-table\\\"],[15,\\\"style\\\",\\\"margin-top:50px;\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Role\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"users\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"users\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_role\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_status\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editUser\\\",[28,[\\\"user\\\"]]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-pencil\\\"],[13],[14],[0,\\\" Edit\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"user\\\",\\\"user_status\\\"]],[28,[\\\"status\\\",\\\"PENDING\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"deleteUser\\\",[28,[\\\"user\\\"]]],[[\\\"bubbles\\\"],[false]]],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"bi bi-trash-fill\\\"],[13],[14],[0,\\\" Delete\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"user\\\"]},null]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"users\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"         \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"margin-top:60px;cursor:default;margin-right:40%;\\\"],[15,\\\"class\\\",\\\"new-account-btn\\\"],[13],[0,\\\"No Users Found!\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"users\\\",\\\"length\\\"]],0],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"pagination-controls\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"previousPage\\\"]],[13],[0,\\\"Previous\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showFirstPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],1],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",1]],[13],[0,\\\"1\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLeftEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"visiblePages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"page\\\"]],[28,[\\\"currentPage\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"page\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[28,[\\\"page\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"page\\\"]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showRightEllipsis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"ellipsis\\\"],[13],[0,\\\"...\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showLastPage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[16,\\\"class\\\",[34,[\\\"page-number \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"active\\\",\\\"\\\"],null]]]],[5,[\\\"action\\\"],[[28,[null]],\\\"goToPage\\\",[28,[\\\"totalPages\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[1,[26,[\\\"totalPages\\\"]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[16,\\\"disabled\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"currentPage\\\"]],[28,[\\\"totalPages\\\"]]],null],\\\"disabled\\\"],null],null],[5,[\\\"action\\\"],[[28,[null]],\\\"nextPage\\\"]],[13],[0,\\\"Next\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[14],[0,\\\"\\\\n \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/index.hbs\" } });\n});","define(\"banker/templates/users/user\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"T61ZsWzC\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/user.hbs\" } });\n});","define(\"banker/templates/users/user/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9GVO/GFr\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Edit User\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userId\\\"],[13],[0,\\\"Username\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"userId\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"user_status\\\"],[13],[0,\\\"User Status\\\"],[11,\\\"span\\\",[]],[15,\\\"style\\\",\\\"color:rgb(237, 69, 69);\\\"],[13],[0,\\\"*\\\"],[14],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"user_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"user_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"user_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Update User\\\"],[14],[0,\\\"\\\\n      \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"users\\\"],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/user/edit.hbs\" } });\n});","define(\"banker/templates/users/user/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tiSWuU4q\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"User Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[15,\\\"style\\\",\\\"margin-bottom:20px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:80px\\\"],[13],[0,\\\"Full Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"fullname\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[15,\\\"style\\\",\\\"margin-bottom:20px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:80px\\\"],[13],[0,\\\"Username:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[15,\\\"style\\\",\\\"margin-bottom:20px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:80px\\\"],[13],[0,\\\"Phone Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_phonenumber\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[15,\\\"style\\\",\\\"margin-bottom:20px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:80px\\\"],[13],[0,\\\"Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_address\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[15,\\\"style\\\",\\\"margin-bottom:20px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:80px\\\"],[13],[0,\\\"Role:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_role\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[15,\\\"style\\\",\\\"margin-bottom:20px\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[15,\\\"style\\\",\\\"padding-left:80px\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n   \\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/user/index.hbs\" } });\n});","define('banker/utils/util', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var methods = {\n        GET: 'GET',\n        POST: 'POST',\n        PUT: 'PUT',\n        DELETE: 'DELETE'\n    };\n    var role = {\n        ADMIN: 'ADMIN',\n        MANAGER: 'MANAGER',\n        CUSTOMER: 'CUSTOMER',\n        SUPERADMIN: 'SUPERADMIN'\n    };\n\n    var status = {\n        PENDING: 'pending',\n        ACTIVE: 'active',\n        INACTIVE: 'inactive'\n    };\n\n    var accountType = {\n        SAVINGS: 'savings',\n        BUSINESS: 'business'\n    };\n\n    var loanStatus = {\n        APPROVED: 'approved',\n        CLOSED: 'closed',\n        PENDING: 'pending',\n        REJECTED: 'rejected'\n    };\n\n    var loanType = {\n        BUSINESSLOAN: 'businessloan',\n        HOMELOAN: 'homeloan',\n        EDUCATIONLOAN: 'educationloan'\n    };\n\n    var transactionStatus = {\n        PENDING: 'pending',\n        SUCCESS: 'success'\n    };\n\n    var transactionType = {\n        DEBIT: 'debit',\n        CREDIT: 'credit',\n        EMI: 'emi'\n    };\n\n    var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n            var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n            return JSON.parse(cookieData);\n        }\n        return null;\n    };\n    exports.role = role;\n    exports.status = status;\n    exports.accountType = accountType;\n    exports.loanStatus = loanStatus;\n    exports.loanType = loanType;\n    exports.transactionStatus = transactionStatus;\n    exports.transactionType = transactionType;\n    exports.methods = methods;\n    exports.getSessionData = getSessionData;\n});","\n","define('banker/config/environment', ['ember'], function(Ember) {\n  var prefix = 'banker';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"banker/app\")[\"default\"].create({\"name\":\"banker\",\"version\":\"0.0.0+d78a6c2e\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClznIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChptLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACddtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACznGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxvEA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"banker.js"}