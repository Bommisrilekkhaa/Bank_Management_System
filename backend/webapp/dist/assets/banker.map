{"version":3,"sources":["vendor/ember-cli/app-prefix.js","banker/app.js","banker/components/account-input.js","banker/components/admin-dashboard.js","banker/components/auth-form.js","banker/components/branch-input.js","banker/components/customer-dashboard.js","banker/components/ember-notify.js","banker/components/ember-notify/message.js","banker/components/loan-input.js","banker/components/manager-dashboard.js","banker/components/nav-bar.js","banker/components/notify-box.js","banker/components/transaction-input.js","banker/components/view-account.js","banker/components/view-accounts.js","banker/components/view-loan.js","banker/components/view-loans.js","banker/components/view-transaction.js","banker/components/view-transactions.js","banker/components/welcome-page.js","banker/controllers/application.js","banker/controllers/banks.js","banker/controllers/banks/bank.js","banker/controllers/banks/bank/accounts.js","banker/controllers/banks/bank/accounts/account.js","banker/controllers/banks/bank/accounts/account/edit.js","banker/controllers/banks/bank/accounts/account/index.js","banker/controllers/banks/bank/accounts/account/loans.js","banker/controllers/banks/bank/accounts/account/loans/index.js","banker/controllers/banks/bank/accounts/account/loans/loan.js","banker/controllers/banks/bank/accounts/account/loans/loan/edit.js","banker/controllers/banks/bank/accounts/account/loans/loan/emi.js","banker/controllers/banks/bank/accounts/account/loans/loan/index.js","banker/controllers/banks/bank/accounts/account/loans/new.js","banker/controllers/banks/bank/accounts/account/transactions.js","banker/controllers/banks/bank/accounts/account/transactions/index.js","banker/controllers/banks/bank/accounts/account/transactions/new.js","banker/controllers/banks/bank/accounts/account/transactions/transaction.js","banker/controllers/banks/bank/accounts/index.js","banker/controllers/banks/bank/accounts/new.js","banker/controllers/banks/bank/branches.js","banker/controllers/banks/bank/branches/branch.js","banker/controllers/banks/bank/branches/branch/delete.js","banker/controllers/banks/bank/branches/branch/edit.js","banker/controllers/banks/bank/branches/branch/index.js","banker/controllers/banks/bank/branches/index.js","banker/controllers/banks/bank/branches/new.js","banker/controllers/banks/bank/edit.js","banker/controllers/banks/bank/index.js","banker/controllers/banks/bank/loans.js","banker/controllers/banks/bank/loans/index.js","banker/controllers/banks/bank/loans/loan.js","banker/controllers/banks/bank/loans/loan/edit.js","banker/controllers/banks/bank/loans/loan/emi.js","banker/controllers/banks/bank/loans/loan/index.js","banker/controllers/banks/bank/loans/new.js","banker/controllers/banks/bank/transactions.js","banker/controllers/banks/bank/transactions/index.js","banker/controllers/banks/bank/transactions/new.js","banker/controllers/banks/bank/transactions/transaction.js","banker/controllers/banks/bank/users.js","banker/controllers/banks/bank/users/index.js","banker/controllers/banks/bank/users/user.js","banker/controllers/banks/bank/users/user/dashboard.js","banker/controllers/banks/bank/users/user/edit.js","banker/controllers/banks/bank/users/user/index.js","banker/controllers/banks/index.js","banker/controllers/banks/new.js","banker/controllers/login.js","banker/controllers/register.js","banker/controllers/super-admin-login.js","banker/controllers/users.js","banker/controllers/users/index.js","banker/controllers/users/user.js","banker/controllers/users/user/edit.js","banker/controllers/users/user/index.js","banker/helpers/app-version.js","banker/helpers/eq.js","banker/helpers/format-date.js","banker/helpers/pluralize.js","banker/helpers/singularize.js","banker/initializers/app-version.js","banker/initializers/container-debug-adapter.js","banker/initializers/data-adapter.js","banker/initializers/ember-data.js","banker/initializers/export-application-global.js","banker/initializers/injectStore.js","banker/initializers/store.js","banker/initializers/transforms.js","banker/instance-initializers/ember-data.js","banker/resolver.js","banker/router.js","banker/routes/banks.js","banker/routes/banks/bank.js","banker/routes/banks/bank/accounts.js","banker/routes/banks/bank/accounts/account.js","banker/routes/banks/bank/accounts/account/edit.js","banker/routes/banks/bank/accounts/account/index.js","banker/routes/banks/bank/accounts/account/loans.js","banker/routes/banks/bank/accounts/account/loans/index.js","banker/routes/banks/bank/accounts/account/loans/loan.js","banker/routes/banks/bank/accounts/account/loans/loan/edit.js","banker/routes/banks/bank/accounts/account/loans/loan/emi.js","banker/routes/banks/bank/accounts/account/loans/loan/index.js","banker/routes/banks/bank/accounts/account/loans/new.js","banker/routes/banks/bank/accounts/account/transactions.js","banker/routes/banks/bank/accounts/account/transactions/index.js","banker/routes/banks/bank/accounts/account/transactions/new.js","banker/routes/banks/bank/accounts/account/transactions/transaction.js","banker/routes/banks/bank/accounts/index.js","banker/routes/banks/bank/accounts/new.js","banker/routes/banks/bank/branches.js","banker/routes/banks/bank/branches/branch.js","banker/routes/banks/bank/branches/branch/edit.js","banker/routes/banks/bank/branches/branch/index.js","banker/routes/banks/bank/branches/index.js","banker/routes/banks/bank/branches/new.js","banker/routes/banks/bank/edit.js","banker/routes/banks/bank/index.js","banker/routes/banks/bank/loans.js","banker/routes/banks/bank/loans/index.js","banker/routes/banks/bank/loans/loan.js","banker/routes/banks/bank/loans/loan/edit.js","banker/routes/banks/bank/loans/loan/emi.js","banker/routes/banks/bank/loans/loan/index.js","banker/routes/banks/bank/loans/new.js","banker/routes/banks/bank/transactions.js","banker/routes/banks/bank/transactions/index.js","banker/routes/banks/bank/transactions/new.js","banker/routes/banks/bank/transactions/transaction.js","banker/routes/banks/bank/users.js","banker/routes/banks/bank/users/index.js","banker/routes/banks/bank/users/user.js","banker/routes/banks/bank/users/user/dashboard.js","banker/routes/banks/bank/users/user/index.js","banker/routes/banks/index.js","banker/routes/banks/new.js","banker/routes/login.js","banker/routes/register.js","banker/routes/super-admin-login.js","banker/routes/users/index.js","banker/routes/users/user.js","banker/routes/users/user/edit.js","banker/routes/users/user/index.js","banker/services/accounts.js","banker/services/ajax.js","banker/services/banks.js","banker/services/branch-select.js","banker/services/branches.js","banker/services/dashboard.js","banker/services/emis.js","banker/services/loans.js","banker/services/notify.js","banker/services/session.js","banker/services/transactions.js","banker/services/users.js","banker/templates/application.js","banker/templates/banks.js","banker/templates/banks/bank.js","banker/templates/banks/bank/accounts.js","banker/templates/banks/bank/accounts/account.js","banker/templates/banks/bank/accounts/account/edit.js","banker/templates/banks/bank/accounts/account/index.js","banker/templates/banks/bank/accounts/account/loans.js","banker/templates/banks/bank/accounts/account/loans/index.js","banker/templates/banks/bank/accounts/account/loans/loan.js","banker/templates/banks/bank/accounts/account/loans/loan/edit.js","banker/templates/banks/bank/accounts/account/loans/loan/emi.js","banker/templates/banks/bank/accounts/account/loans/loan/index.js","banker/templates/banks/bank/accounts/account/loans/new.js","banker/templates/banks/bank/accounts/account/transactions.js","banker/templates/banks/bank/accounts/account/transactions/index.js","banker/templates/banks/bank/accounts/account/transactions/new.js","banker/templates/banks/bank/accounts/account/transactions/transaction.js","banker/templates/banks/bank/accounts/index.js","banker/templates/banks/bank/accounts/new.js","banker/templates/banks/bank/branches.js","banker/templates/banks/bank/branches/branch.js","banker/templates/banks/bank/branches/branch/edit.js","banker/templates/banks/bank/branches/branch/index.js","banker/templates/banks/bank/branches/index.js","banker/templates/banks/bank/branches/new.js","banker/templates/banks/bank/edit.js","banker/templates/banks/bank/index.js","banker/templates/banks/bank/loans.js","banker/templates/banks/bank/loans/index.js","banker/templates/banks/bank/loans/loan.js","banker/templates/banks/bank/loans/loan/edit.js","banker/templates/banks/bank/loans/loan/emi.js","banker/templates/banks/bank/loans/loan/index.js","banker/templates/banks/bank/loans/new.js","banker/templates/banks/bank/transactions.js","banker/templates/banks/bank/transactions/index.js","banker/templates/banks/bank/transactions/new.js","banker/templates/banks/bank/transactions/transaction.js","banker/templates/banks/bank/users.js","banker/templates/banks/bank/users/index.js","banker/templates/banks/bank/users/user.js","banker/templates/banks/bank/users/user/dashboard.js","banker/templates/banks/bank/users/user/edit.js","banker/templates/banks/bank/users/user/index.js","banker/templates/banks/index.js","banker/templates/banks/new.js","banker/templates/components/account-input.js","banker/templates/components/admin-dashboard.js","banker/templates/components/auth-form.js","banker/templates/components/branch-input.js","banker/templates/components/customer-dashboard.js","banker/templates/components/loan-input.js","banker/templates/components/manager-dashboard.js","banker/templates/components/nav-bar.js","banker/templates/components/notify-box.js","banker/templates/components/transaction-input.js","banker/templates/components/view-account.js","banker/templates/components/view-accounts.js","banker/templates/components/view-loan.js","banker/templates/components/view-loans.js","banker/templates/components/view-transaction.js","banker/templates/components/view-transactions.js","banker/templates/login.js","banker/templates/register.js","banker/templates/super-admin-login.js","banker/templates/users.js","banker/templates/users/index.js","banker/templates/users/user.js","banker/templates/users/user/edit.js","banker/templates/users/user/index.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('banker/app', ['exports', 'banker/resolver', 'ember-load-initializers', 'banker/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('banker/components/account-input', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    branchesService: Ember.inject.service('branches'),\n    accountsService: Ember.inject.service('accounts'),\n    errorMessage: '',\n    branchNames: [],\n    statuses: ['pending', 'active', 'inactive'],\n    types: ['savings', 'business'],\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      console.log(\"init...\");\n      this.loadBranches();\n    },\n\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n\n    accNo: '',\n    acc_type: '',\n    acc_balance: '',\n    acc_status: '',\n    username: '',\n    fullname: '',\n    branch_name: '',\n    bankId: localStorage.getItem(\"bankId\"),\n    isEdit: false,\n    branchId: '',\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      // console.log(this.get('bankId'));\n      this.get('branchesService').fetchBranches(this.get('bankId')).then(function (response) {\n        _this.set('branchNames', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load branches:\", error);\n      });\n    },\n\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('types').includes(this.get('acc_type'))) {\n          this.set(\"errorMessage\", 'Please select a valid account type.');\n          return;\n        }\n\n        if (!this.get('branch_name') || this.get('branch_name').trim() === '') {\n          this.set(\"errorMessage\", 'Please select a branch.');\n          return;\n        }\n        var array = this.get('branchNames');\n        for (var i = 0; i < array.length; i++) {\n          var item = array[i];\n          if (item['branch_name'] == this.get('branch_name')) {\n            this.branchId = item['branch_id'];\n          }\n        }\n\n        if (this.get('role') != 'MANAGER') {\n\n          localStorage.setItem('branchId', this.get('branchId'));\n        }\n        var userData = {\n          fullname: this.get('fullname'),\n          userId: this.get('userId')\n        };\n        var accountData = {\n          accNo: this.get('accNo'),\n          acc_type: this.get('acc_type'),\n          // acc_balance: this.get('acc_balance'),\n          username: this.get('username'),\n          acc_status: this.get('acc_status'),\n          fullname: this.get('fullname'),\n          bankId: this.get('bankId')\n        };\n\n        if (this.get('isEdit')) {\n\n          this.get('accountsService').updateAccount(accountData).then(function () {\n            // alert('Account updated successfully!');\n\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Account Edited successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toAccount\");\n            }, 2000);\n          }).catch(function (error) {\n            // alert('Error updating account');\n            console.error(error);\n          });\n        } else {\n\n          this.get('accountsService').createAccount(accountData).then(function () {\n\n            // alert('Account created successfully!');\n            _this2.resetForm();\n\n            _this2.get('notification').showNotification('Account Created successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toAccount\");\n            }, 2000);\n          }).catch(function (error) {\n            // alert('Error creating account');\n            console.error(error);\n          });\n        }\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        // this.transitionToRoute('accounts'); \n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        accNo: '',\n        acc_type: '',\n        // acc_balance: '',\n        fullname: '',\n        acc_status: '',\n        username: '',\n        branch_name: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/admin-dashboard', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({});\n});","define('banker/components/auth-form', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    banksService: Ember.inject.service('banks'),\n    accountsService: Ember.inject.service('accounts'),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    confirmPassword: '',\n    errorMessage: '',\n    bank_name: '',\n    BankNames: [],\n    isSignup: false,\n    BankId: '',\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.loadBanks();\n    },\n    loadBanks: function loadBanks() {\n      var _this = this;\n\n      this.get('banksService').fetchBanks().then(function (response) {\n        _this.set('bankNames', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load banks:\", error);\n      });\n    },\n    setBankId: function setBankId() {\n      var array = this.get('bankNames');\n      for (var i = 0; i < array.length; i++) {\n        var item = array[i];\n        if (item['bank_name'] == this.get('bank_name')) {\n          this.BankId = item['bank_id'];\n          break;\n        }\n      }\n    },\n    checkStorage: function checkStorage() {\n      if (localStorage.length != 0) {\n        localStorage.clear();\n      }\n\n      localStorage.setItem('bankId', this.get('BankId'));\n    },\n\n    actions: {\n      submitForm: function submitForm() {\n\n        var username = this.get('username');\n        var password = this.get('password');\n        var selectedRole = this.get('selectedRole');\n\n        if (!username || !password) {\n          this.set('errorMessage', 'Username and password are required.');\n          return;\n        }\n\n        if (!this.get('isSuper')) {\n          if (!this.get('bank_name')) {\n            this.set('errorMessage', 'please select a bank');\n            return;\n          }\n        }\n        if (password.length < 8) {\n          this.set('errorMessage', 'Password must be at least 8 characters long.');\n          return;\n        }\n\n        if (this.get('isSignup')) {\n          var confirmPassword = this.get('confirmPassword');\n          if (password !== confirmPassword) {\n            this.set('errorMessage', 'Passwords do not match.');\n            return;\n          }\n\n          if (!this.get('name') || !this.get('dob') || !this.get('addr') || !this.get('pno') || !selectedRole) {\n            this.set('errorMessage', 'All fields are required for signup.');\n            return;\n          }\n\n          if (this.get('pno').length !== 10 || isNaN(this.get('pno'))) {\n            this.set('errorMessage', 'Please enter a valid 10-digit phone number.');\n            return;\n          }\n        }\n\n        this.set('errorMessage', '');\n\n        var action = this.get('isSignup') ? 'onSignup' : 'onLogin';\n\n        // console.log('Submit button pressed'+action);  \n\n        var credentials = {\n          username: this.get('username'),\n          password: this.get('password'),\n          selectedRole: this.get('selectedRole'),\n          name: this.get('name'),\n          dob: this.get('dob'),\n          addr: this.get('addr'),\n          pno: this.get('pno'),\n          bankId: this.get('BankId')\n        };\n\n        this.setBankId();\n        this.checkStorage();\n        this.sendAction(action, credentials);\n      },\n      toggleMode: function toggleMode() {\n        var action = this.get('isSignup') ? 'toLogin' : 'toSignup';\n        if (action == 'toLogin') this.set('isSignup', false);else this.set('isSignup', true);\n\n        this.sendAction(action);\n      },\n      superAdminForm: function superAdminForm() {\n        if (!this.get('username') || !this.get('password')) {\n          this.set('errorMessage', 'Username and password are required.');\n          return;\n        }\n        var credentials = {\n          username: this.get('username'),\n          password: this.get('password')\n        };\n        this.sendAction(\"toSuperAdmin\", credentials);\n      }\n    }\n  });\n});","define('banker/components/branch-input', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    usersService: Ember.inject.service('users'),\n    errorMessage: '',\n    branchId: '',\n    name: '',\n    address: '',\n    branch_number: '',\n    bankId: localStorage.getItem(\"bankId\"),\n    manager_id: '',\n    isEdit: false,\n    availableManagers: [],\n    init: function init() {\n      this._super.apply(this, arguments);\n      console.log(\"init...\");\n      this.loadManagers();\n    },\n    loadManagers: function loadManagers() {\n      var _this = this;\n\n      // console.log(this.get('bankId'));\n      this.get('usersService').fetchManagers().then(function (response) {\n        _this.set('availableManagers', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load managers:\", error);\n      });\n    },\n\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('name') || this.get('name').trim() === '') {\n          this.set(\"errorMessage\", 'Branch name cannot be empty.');\n          return;\n        }\n\n        if (!this.get('address') || this.get('address').trim() === '') {\n          this.set(\"errorMessage\", 'Branch address cannot be empty.');\n          return;\n        }\n\n        if (!this.get('manager_id') || this.get('manager_id') <= 0) {\n          this.set(\"errorMessage\", 'Invalid Manager ID .');\n          return;\n        }\n\n        var branchData = {\n          name: this.get('name'),\n          address: this.get('address'),\n          manager_id: this.get('manager_id'),\n          bankId: this.get('bankId'),\n          branchId: this.get('branchId')\n        };\n\n        if (this.get('isEdit')) {\n          this.get('branchesService').updateBranch(branchData).then(function () {\n\n            console.log('Branch updated successfully!');\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Branch Edited successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toBranch\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error updating branch:', error);\n          });\n        } else {\n          this.get('branchesService').createBranch(branchData).then(function () {\n            console.log('Branch created successfully!');\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Branch Created successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toBranch\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error creating branch:', error);\n          });\n        }\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction(\"toBranch\");\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        name: '',\n        address: '',\n        manager_id: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/customer-dashboard', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        dashboardService: Ember.inject.service('dashboard'),\n        init: function init() {\n            var _this = this;\n\n            this._super.apply(this, arguments);\n            this.get('dashboardService').fetchCustomerDashboard().then(function (response) {\n                console.log(response);\n\n                var accounts = [];\n                for (var i = 0; i < response.length; i++) {\n                    var account = response[i];\n                    var accountData = {\n                        acc_no: account.acc_no,\n                        acc_type: account.acc_type,\n                        acc_balance: account.acc_balance,\n                        acc_status: account.acc_status\n                    };\n\n                    var loanDetails = account.loan_details || null;\n                    var transactions = account.transactions || [];\n\n                    accounts.push({\n                        account: accountData,\n                        loan_details: loanDetails,\n                        transactions: transactions\n                    });\n                }\n\n                _this.set('accountList', accounts);\n            }).catch(function (error) {\n                console.error(\"Failed to load dashboard:\", error);\n            });\n        },\n        calculateEMI: function calculateEMI(loanAmount, interestRate, tenureMonths, loanAvailedDate) {\n            var monthlyInterestRate = interestRate / 12 / 100;\n            var emiAmount = loanAmount * monthlyInterestRate * Math.pow(1 + monthlyInterestRate, tenureMonths) / (Math.pow(1 + monthlyInterestRate, tenureMonths) - 1);\n            emiAmount = Math.round(emiAmount);\n            var emiSchedule = [];\n            var currentPaymentDate = new Date(loanAvailedDate);\n\n            for (var i = 1; i <= tenureMonths; i++) {\n                currentPaymentDate.setMonth(currentPaymentDate.getMonth() + 1);\n                emiSchedule.push({\n                    emiNumber: i,\n                    toBePaidDate: new Date(currentPaymentDate),\n                    actualPaidDate: null,\n                    emiAmount: emiAmount\n                });\n            }\n\n            return emiSchedule;\n        },\n\n        actions: {\n            showEmiModal: function showEmiModal(loanId) {\n                var account = this.get('accountList').find(function (accountItem) {\n                    return accountItem.loan_details && accountItem.loan_details.loan_id === loanId;\n                });\n\n                if (account && account.loan_details) {\n                    var loanDetails = account.loan_details;\n                    var loanAmount = loanDetails.loan_amount;\n                    var interestRate = loanDetails.loan_interest;\n                    var tenureMonths = loanDetails.loan_duration;\n                    var loanAvailedDate = loanDetails.loan_availed_date;\n\n                    var emiSchedule = this.calculateEMI(loanAmount, interestRate, tenureMonths, loanAvailedDate);\n                    this.set('emiSchedule', emiSchedule);\n                    this.set('selectedLoanId', loanId);\n                    this.set('emi', emiSchedule[0]);\n                    document.getElementById('emiModal').style.display = 'flex';\n                } else {\n                    console.error(\"Loan details not found for the selected loan ID\");\n                }\n            },\n            closeEmiModal: function closeEmiModal() {\n                document.getElementById('emiModal').style.display = 'none';\n            }\n        }\n\n    });\n});","define('banker/components/ember-notify', ['exports', 'ember-notify/components/ember-notify'], function (exports, _emberNotify) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberNotify.default;\n});","define('banker/components/ember-notify/message', ['exports', 'ember-notify/components/ember-notify/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _message.default;\n});","define('banker/components/loan-input', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    accountsService: Ember.inject.service('accounts'),\n    loansService: Ember.inject.service('loans'),\n    errorMessage: '',\n    accounts: [],\n    loan_id: '',\n    loan_type: '',\n    loan_amount: '',\n    loan_interest: '',\n    loan_duration: '',\n    loan_status: '',\n    loan_availed_date: '',\n    isEdit: false,\n    isDirect: false,\n    accNo: '',\n    bankId: localStorage.getItem(\"bankId\"),\n    statuses: ['approved', 'closed', 'pending', 'rejected'],\n    types: ['businessloan', 'homeloan', 'educationloan'],\n    durations: [6, 12, 18, 24],\n    init: function init() {\n      this._super.apply(this, arguments);\n      console.log(\"Loan form initialized...\");\n      if (this.get('isDirect')) {\n        this.loadAccounts();\n      }\n    },\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    filteredStatuses: Ember.computed('loan_amount', function () {\n      if (this.get('loan_amount') > 3000000) {\n        return ['rejected'];\n      } else {\n        return ['approved', 'closed', 'pending'];\n      }\n    }),\n\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n\n    loadAccounts: function loadAccounts() {\n      var _this = this;\n\n      this.get('accountsService').fetchActiveAccounts(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('accounts', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('types').includes(this.get('loan_type'))) {\n          this.set(\"errorMessage\", 'Please select a valid loan type.');\n          return;\n        }\n\n        if (this.get('role') != 'CUSTOMER') {\n          if (!this.get('statuses').includes(this.get('loan_status'))) {\n            this.set(\"errorMessage\", \"Please select a valid loan status.\");\n            return;\n          }\n        }\n\n        if (!this.get('loan_amount') || this.get('loan_amount') <= 0) {\n          this.set(\"errorMessage\", 'Loan amount must be a positive number.');\n          return;\n        }\n\n        if (!this.get('loan_duration') || this.get('loan_duration') <= 0) {\n          this.set(\"errorMessage\", 'Loan duration must be a positive number.');\n          return;\n        }\n\n        var loanData = {\n          loan_id: this.get('loan_id'),\n          loan_type: this.get('loan_type'),\n          loan_amount: this.get('loan_amount'),\n          loan_duration: this.get('loan_duration'),\n          loan_status: this.get('loan_status'),\n          userId: this.get('userId'),\n          branchId: localStorage.getItem('branchId'),\n          bankId: this.get('bankId'),\n          accNo: this.get('isDirect') ? this.get('accNo') : localStorage.getItem('accNo')\n        };\n\n        if (this.get('isEdit')) {\n          this.get('loansService').updateLoan(loanData).then(function () {\n            console.log('Loan updated successfully!');\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Loan Edited successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toLoan\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error updating loan:', error);\n          });\n        } else {\n          this.get('loansService').createLoan(loanData).then(function () {\n            console.log('Loan created successfully!');\n            _this2.resetForm();\n            _this2.get('notification').showNotification('Loan Created successfully!', 'success');\n\n            Ember.run.later(function () {\n              _this2.sendAction(\"toLoan\");\n            }, 2000);\n          }).catch(function (error) {\n            console.error('Error creating loan:', error);\n          });\n        }\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction('toLoan');\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        loan_id: '',\n        loan_type: '',\n        loan_amount: '',\n        loan_interest: '',\n        loan_duration: '',\n        loan_status: '',\n        loan_availed_date: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/manager-dashboard', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    dashboardService: Ember.inject.service('dashboard'),\n\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n    init: function init() {\n      var _this = this;\n\n      this._super.apply(this, arguments);\n      this.get('dashboardService').fetchManagerDashboard().then(function (response) {\n        _this.set('branches', response);\n        var array = _this.get('branches');\n        for (var i = 0; i < array.length; i++) {\n          var item = array[i];\n          if (item['manager_id'] == _this.get('userId')) {\n            _this.set('branch', item);\n            localStorage.setItem('branchId', _this.get('branch').branch_id);\n            // console.log(this.get('branch'));\n            break;\n          }\n        }\n      }).catch(function (error) {\n        console.error(\"Failed to load dashboard:\", error);\n      });\n    }\n  });\n});","define('banker/components/nav-bar', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    branchesService: Ember.inject.service('branches'),\n    session: Ember.inject.service(),\n    bankId: localStorage.getItem('bankId'),\n    branches: [],\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n    init: function init() {\n      this._super.apply(this, arguments);\n      // console.log(\"init...\");\n      if (this.get('role') == 'ADMIN' || this.get('role') == 'CUSTOMER') {\n        this.loadBranches();\n      }\n      if (localStorage.getItem('branchId') == null) {\n        localStorage.setItem('branchId', '*');\n      }\n      if (localStorage.getItem('accNo') == null) {\n        localStorage.setItem('accNo', '*');\n      }\n      if (localStorage.getItem('loanId') == null) {\n        localStorage.setItem('loanId', '*');\n      }\n    },\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      console.log(this.get('bankId'));\n      this.get('branchesService').fetchBranches(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('branches', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load branches:\", error);\n      });\n    },\n    changeBranch: function changeBranch(branchId) {\n\n      this.get('branchSelection').changeBranch(branchId);\n    },\n\n    actions: {\n      logout: function logout() {\n        localStorage.clear();\n        this.get('logout')();\n      },\n      toUsers: function toUsers() {\n        this.get('toUsers')();\n      },\n      toBranch: function toBranch() {\n        this.get('toBranch')();\n      },\n      todashboard: function todashboard() {\n        this.get('todashboard')();\n      },\n      toBanks: function toBanks() {\n        this.get('toBanks')();\n      },\n      toBank: function toBank() {\n        this.get('toBank')();\n      },\n      toBranches: function toBranches() {\n        this.get('toBranches')();\n      },\n      toAccounts: function toAccounts() {\n        this.get('toAccounts')();\n      },\n      toTransactions: function toTransactions() {\n        this.get('toTransactions')();\n      },\n      toLoans: function toLoans() {\n        this.get('toLoans')();\n      },\n      setbranch: function setbranch(branch_name) {\n        var array = this.get('branches');\n\n        if (!Array.isArray(array)) {\n          console.error('branches is not defined or not an array');\n          return;\n        }\n        if (branch_name == 'all') {\n          localStorage.setItem('branchId', '*');\n          this.get('branchesService').set('branchId', '*');\n        } else {\n          var selectedBranch = array.find(function (item) {\n            return item.branch_name === branch_name;\n          });\n\n          if (selectedBranch) {\n            localStorage.setItem('branchId', selectedBranch.branch_id);\n            this.get('branchesService').set('branchId', selectedBranch.branch_id);\n            this.changeBranch(selectedBranch.branch_id);\n            // console.log('Branch ID set to:', selectedBranch.branch_id);\n          } else {\n            console.warn('Branch not found');\n          }\n        }\n      }\n    }\n  });\n});","define('banker/components/notify-box', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    message: '',\n    type: '',\n\n    classNameBindings: ['type', 'notification-top-right']\n\n  });\n});","define('banker/components/transaction-input', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    notification: Ember.inject.service('notify'),\n    accountsService: Ember.inject.service('accounts'),\n    transactionsService: Ember.inject.service('transactions'),\n    errorMessage: '',\n    statuses: ['pending', 'success'],\n    types: ['debit', 'credit'],\n    isDirect: false,\n    accounts: [],\n    bankId: localStorage.getItem('bankId'),\n    isEmi: Ember.computed('transaction_type', function () {\n      return this.get('transaction_type') == 'emi';\n    }),\n    init: function init() {\n      this._super.apply(this, arguments);\n      console.log(\"Transaction form initialized...\");\n      if (this.get('isDirect')) {\n        this.loadAccounts();\n      }\n    },\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    loadAccounts: function loadAccounts() {\n      var _this = this;\n\n      this.get('accountsService').fetchActiveAccounts(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('accounts', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n\n    transaction_id: '',\n    transaction_datetime: '',\n    transaction_type: '',\n    transaction_status: '',\n    transaction_amount: '',\n    accNo: '',\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('transaction_amount') || this.get('transaction_amount') <= 0) {\n          this.set(\"errorMessage\", 'Transaction amount must be a positive number.');\n          return;\n        }\n\n        var transactionData = {\n          transaction_id: this.get('transaction_id'),\n          transaction_datetime: new Date(),\n          transaction_type: this.get('transaction_type'),\n          transaction_status: this.get('transaction_status'),\n          transaction_amount: this.get('transaction_amount'),\n          userId: this.get('userId'),\n          accNo: this.get('isDirect') ? this.get('accNo') : localStorage.getItem('accNo'),\n          branchId: localStorage.getItem('branchId'),\n          bankId: localStorage.getItem('bankId')\n        };\n\n        this.get('transactionsService').createTransaction(transactionData).then(function () {\n          console.log('Transaction created successfully!');\n          _this2.resetForm();\n          _this2.get('notification').showNotification('Transaction Created successfully!', 'success');\n\n          Ember.run.later(function () {\n            _this2.sendAction(\"toTransaction\");\n          }, 2000);\n        }).catch(function (error) {\n          console.error('Error creating transaction:', error);\n        });\n      },\n      cancel: function cancel() {\n        this.resetForm();\n        this.sendAction('toTransaction');\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        transaction_id: '',\n        transaction_datetime: '',\n        transaction_type: '',\n        transaction_status: '',\n        transaction_amount: '',\n        accNo: '',\n        isEdit: false\n      });\n    }\n  });\n});","define(\"banker/components/view-account\", [\"exports\"], function (exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        accNo: localStorage.getItem(\"accNo\"),\n\n        actions: {\n            loans: function loans() {\n                this.sendAction(\"toLoans\", this.accNo);\n            },\n            transactions: function transactions() {\n                this.sendAction(\"toTransactions\", this.accNo);\n            }\n        }\n\n    });\n});","define('banker/components/view-accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    accountssService: Ember.inject.service('accounts'),\n    accounts: [],\n    branchId: localStorage.getItem('branchId'),\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    filteredAccounts: Ember.computed('accounts', 'selectedAccountType', 'selectedAccountStatus', function () {\n      var accounts = this.get('accounts');\n      var selectedAccountType = this.get('selectedAccountType');\n      var selectedAccountStatus = this.get('selectedAccountStatus');\n\n      if (selectedAccountType) {\n        accounts = accounts.filter(function (account) {\n          return account.acc_type === selectedAccountType;\n        });\n      }\n\n      if (selectedAccountStatus) {\n        accounts = accounts.filter(function (account) {\n          return account.acc_status === selectedAccountStatus;\n        });\n      }\n\n      return accounts;\n    }),\n\n    actions: {\n      viewAccount: function viewAccount(account) {\n        this.sendAction('viewaccount', account, this.get('branchId'));\n      },\n      addNewAccount: function addNewAccount() {\n        this.sendAction('toaddNewAccount', this.get('branchId'));\n      },\n      editAccount: function editAccount(account) {\n        this.sendAction('toeditAccount', true, account, this.get('branchId'));\n      }\n    }\n  });\n});","define(\"banker/components/view-loan\", [\"exports\"], function (exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        actions: {\n            toEmis: function toEmis(loan) {\n                var InterestRate = loan.loan_interest / 12 / 100;\n                var emiAmount = loan.loan_amount * InterestRate * Math.pow(1 + InterestRate, loan.loan_duration) / (Math.pow(1 + InterestRate, loan.loan_duration) - 1);\n                emiAmount = Math.round(emiAmount);\n                this.sendAction(\"toEmis\", loan, emiAmount);\n            }\n        }\n    });\n});","define('banker/components/view-loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    loansService: Ember.inject.service('loans'),\n    loans: [],\n    branchId: localStorage.getItem('branchId'),\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    selectedLoanType: '',\n    selectedLoanStatus: '',\n\n    filteredLoans: Ember.computed('loans', 'selectedLoanType', 'selectedLoanStatus', function () {\n      var loans = this.get('loans');\n      var selectedLoanType = this.get('selectedLoanType');\n      var selectedLoanStatus = this.get('selectedLoanStatus');\n\n      if (selectedLoanType) {\n        loans = loans.filter(function (loan) {\n          return loan.loan_type === selectedLoanType;\n        });\n      }\n\n      if (selectedLoanStatus) {\n        loans = loans.filter(function (loan) {\n          return loan.loan_status === selectedLoanStatus;\n        });\n      }\n\n      return loans;\n    }),\n\n    actions: {\n      viewLoan: function viewLoan(loan) {\n        this.sendAction('viewLoan', loan, this.get('branchId'));\n      },\n      addNewLoan: function addNewLoan() {\n        this.sendAction('toaddNewLoan', this.get('branchId'));\n      },\n      editLoan: function editLoan(loan) {\n        this.sendAction('toeditLoan', true, loan, this.get('branchId'));\n      },\n      clearFilters: function clearFilters() {\n        this.set('selectedLoanType', '');\n        this.set('selectedLoanStatus', '');\n      }\n    }\n  });\n});","define('banker/components/view-transaction', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({});\n});","define('banker/components/view-transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    transactionsService: Ember.inject.service('transactions'),\n    transactions: [],\n    branchId: localStorage.getItem('branchId'),\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    selectedTransactionType: '',\n    selectedTransactionStatus: '',\n\n    filteredTransactions: Ember.computed('transactions', 'selectedTransactionType', 'selectedTransactionStatus', function () {\n      var transactions = this.get('transactions');\n      var selectedTransactionType = this.get('selectedTransactionType');\n      var selectedTransactionStatus = this.get('selectedTransactionStatus');\n\n      if (selectedTransactionType) {\n        transactions = transactions.filter(function (transaction) {\n          return transaction.transaction_type === selectedTransactionType;\n        });\n      }\n\n      if (selectedTransactionStatus) {\n        transactions = transactions.filter(function (transaction) {\n          return transaction.transaction_status === selectedTransactionStatus;\n        });\n      }\n\n      return transactions;\n    }),\n\n    actions: {\n      viewTransaction: function viewTransaction(transaction) {\n        this.sendAction('viewTransaction', transaction, this.get('branchId'));\n      },\n      addNewTransaction: function addNewTransaction() {\n        this.sendAction('toaddNewTransaction', this.get('branchId'));\n      }\n    }\n  });\n});","define('banker/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('banker/controllers/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service('session'),\n    branchesService: Ember.inject.service('branches'),\n    bankId: localStorage.getItem('bankId'),\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n    isAuthRoute: Ember.computed('currentRouteName', function () {\n      var authRoutes = ['login', 'register', 'index', 'super-admin-login'];\n      return authRoutes.includes(this.get('currentRouteName'));\n    }),\n    branchNames: [],\n    branch: '',\n    branchId: '',\n    getBranchId: function getBranchId(userId) {\n      var _this = this;\n\n      this.get('branchesService').fetchBranches(this.get('bankId')).then(function (response) {\n        _this.set('branchNames', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load branches:\", error);\n      });\n\n      var array = this.get('branchNames');\n      for (var i = 0; i < array.length; i++) {\n        var item = array[i];\n        if (item['manager_id'] == userId) {\n          this.set('branch', item);\n          this.set('branchId', item['branch_id']);\n          break;\n        }\n      }\n    },\n\n\n    actions: {\n      logout: function logout() {\n        var _this2 = this;\n\n        this.get('session').logout().then(function () {\n          _this2.transitionToRoute('login');\n        });\n      },\n      toUsers: function toUsers() {\n        this.transitionToRoute('users');\n      },\n      toBank: function toBank() {\n        this.transitionToRoute('banks.bank', this.get('bankId'));\n      },\n      toBanks: function toBanks() {\n        this.transitionToRoute('banks');\n      },\n      toBranch: function toBranch() {\n        var _this3 = this;\n\n        var bankId = this.get('bankId');\n        this.getBranchId(this.get('userId'));\n        console.log(this.get('branchId'));\n        this.transitionToRoute('banks.bank.branches.branch', bankId, this.get('branchId')).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: bankId,\n            Branch: _this3.get('branch')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      toBranches: function toBranches() {\n        this.transitionToRoute('banks.bank.branches', this.get('bankId'));\n      },\n      toAccounts: function toAccounts() {\n        this.transitionToRoute('banks.bank.accounts', this.get('bankId'));\n      },\n      todashboard: function todashboard() {\n        this.transitionToRoute('banks.bank.users.user.dashboard', this.get('bankId'), this.get('userId'));\n      },\n      toTransactions: function toTransactions() {\n        this.transitionToRoute('banks.bank.transactions', this.get('bankId'));\n      },\n      toLoans: function toLoans() {\n        this.transitionToRoute('banks.bank.loans', this.get('bankId'));\n      }\n    }\n  });\n});","define('banker/controllers/banks', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    // accountsService: Ember.inject.service('accounts'),\n    // bankId: '',\n    // init() {\n    //   // console.log(\"controller\");\n    //   // this._super(...arguments);\n    //   // console.log(this.get('model.id'));\n    //   // this.loadAccounts();\n    // },\n    // accounts: [],\n\n    // loadAccounts() {\n    //   console.log(this.get('bankId'));\n    //   this.get('accountsService').fetchAccounts(this.get('bankId')).then((response) => {\n    //     console.log(response);\n    //     this.set('accounts', response);\n    //   }).catch((error) => {\n    //     console.error(\"Failed to load accounts:\", error);\n    //   });\n    // },\n\n    // actions: {\n    //   addNewAccount() {\n    //     console.log(this.get('bankId'));\n    //     this.transitionToRoute('banks.bank.accounts.new').then((newRoute)=>{\n\n    //       newRoute.controller.setProperties({\n    //         bankId:this.get('bankId')\n    //       });\n    //     }).catch((error) => {\n    //       console.error(\"Transition failed\", error);\n    //     });\n\n    //   },\n\n    //   editAccount(account) {\n    //     this.transitionToRoute('banks.bank.accounts.account.edit',this.get('bankId'),accountId).then((newRoute)=>{\n\n    //       newRoute.controller.setProperties({\n    //         isEdit: true,\n    //         acc_no: account.acc_no,\n    //         acc_type: account.acc_type,\n    //         acc_balance: account.acc_balance,\n    //         acc_status: account.acc_status,\n    //         username:account.username,\n    //         fullname: account.user_fullname,\n    //         branch_name: account.branch_name,\n    //         bankId:this.get('bankId')\n    //       });\n    //     }).catch((error) => {\n    //       console.error(\"Transition failed\", error);\n    //     });\n    //   }\n    // }\n  });\n});","define('banker/controllers/banks/bank/accounts/account', ['exports'], function (exports) {\n   'use strict';\n\n   Object.defineProperty(exports, \"__esModule\", {\n      value: true\n   });\n   exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        actions: {\n            toAccount: function toAccount() {\n                this.transitionToRoute(\"banks.bank.accounts\", this.get('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/accounts/account/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    acc: [],\n    accountsService: Ember.inject.service('accounts'),\n    loadAccount: function loadAccount() {\n      var _this = this;\n\n      this.get('accountsService').fetchAccount(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('acc', response);\n        _this.set('acc', _this.get('acc')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load account:\", error);\n      });\n    },\n\n    actions: {\n      toLoans: function toLoans() {\n        this.transitionToRoute('banks.bank.accounts.account.loans', localStorage.getItem('accNo')).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            bankId: localStorage.getItem('bankId'),\n            branchId: localStorage.getItem('branchId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      toTransactions: function toTransactions() {\n        this.transitionToRoute('banks.bank.accounts.account.transactions', localStorage.getItem('accNo')).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            bankId: localStorage.getItem('bankId'),\n            branchId: localStorage.getItem('branchId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/account/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/loans/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    loansService: Ember.inject.service('loans'),\n    loans: [],\n    loadLoans: function loadLoans() {\n      var _this = this;\n\n      console.log(this.get('accNo'));\n      this.get('loansService').fetchLoans(this.get('accNo'), this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('loans', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load loans:\", error);\n      });\n    },\n\n    actions: {\n      viewloan: function viewloan(loan) {\n        var _this2 = this;\n\n        // console.log(\"view....\"+this.get('bankId'));\n        this.transitionToRoute('banks.bank.accounts.account.loans.loan', loan.acc_number, loan.loan_id).then(function (newRoute) {\n\n          localStorage.setItem('loanId', loan.loan_id);\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            branchId: _this2.get('branchId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewLoan: function addNewLoan(branchId) {\n        var _this3 = this;\n\n        console.log(branchId);\n        this.transitionToRoute('banks.bank.accounts.account.loans.new').then(function (newRoute) {\n          newRoute.controller.setProperties({\n            accNo: _this3.get('accNo'),\n            branchId: branchId,\n            bankId: _this3.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      },\n      editLoan: function editLoan(isEdit, loan, branchId) {\n        var _this4 = this;\n\n        this.transitionToRoute('banks.bank.accounts.account.loans.loan.edit', loan.loan_id).then(function (newRoute) {\n          localStorage.setItem('loanId', loan.loan_id);\n          newRoute.controller.setProperties({\n            isEdit: isEdit,\n            loan_id: loan.loan_id,\n            loan_type: loan.loan_type,\n            loan_amount: loan.loan_amount,\n            loan_interest: loan.loan_interest,\n            loan_duration: loan.loan_duration,\n            loan_status: loan.loan_status,\n            loan_availed_date: loan.loan_availed_date,\n            accNo: _this4.get('accNo'),\n            bankId: _this4.get('bankId'),\n            branchId: branchId\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      }\n    }\n\n  });\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.accounts.account.loans\", localStorage.getItem('accNo'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan/emi', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        emisService: Ember.inject.service('emis'),\n        bankId: localStorage.getItem('bankId'),\n        loanId: localStorage.getItem('loanId'),\n        emis: [],\n        generatedEmis: [],\n\n        loadEmis: function loadEmis() {\n            var _this = this;\n\n            this.get('emisService').fetchEmis(this.get('loanId')).then(function (response) {\n                _this.set('emis', response);\n                _this.set('generatedEmis', _this.generateTable(_this.get('emis')));\n            }).catch(function (error) {\n                console.error(\"Failed to load EMIs:\", error);\n            });\n        },\n        generateTable: function generateTable(emis) {\n            var emiSchedule = [];\n\n            var totalEmis = this.get('loan').loan_duration;\n\n            var loanAvailedDate = this.get('loan').length <= 0 ? new Date() : new Date(this.get('loan').loan_availed_date.replace(/-/g, '/'));\n\n            var emisArray = this.get('emis');\n\n            for (var i = 0; i < emisArray.length; i++) {\n                var emi = emisArray[i];\n                var emiNumber = emi.emi_number || '-';\n                var transactionId = emi.transaction_id || '-';\n                var actualPaidDate = emi.actual_paid_date ? new Date(emi.actual_paid_date.replace(/-/g, '/')) : '-';\n\n                var toBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(toBePaidDate.getTime())) {\n                    toBePaidDate.setMonth(toBePaidDate.getMonth() + emiNumber);\n                } else {\n                    toBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: emiNumber,\n                    transactionId: transactionId,\n                    toBePaidDate: toBePaidDate instanceof Date ? toBePaidDate.toLocaleDateString() : toBePaidDate,\n                    actualPaidDate: actualPaidDate instanceof Date ? actualPaidDate.toLocaleDateString() : actualPaidDate\n                });\n            }\n\n            var nextEmiNumber = emis.length > 0 ? emis[emis.length - 1].emi_number + 1 : 1;\n            if (nextEmiNumber <= totalEmis) {\n                var nextToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(nextToBePaidDate.getTime())) {\n                    nextToBePaidDate.setMonth(nextToBePaidDate.getMonth() + nextEmiNumber);\n                } else {\n                    nextToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: nextEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: nextToBePaidDate instanceof Date ? nextToBePaidDate.toLocaleDateString() : nextToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            if (emiSchedule.length === 0) {\n                var firstEmiNumber = 1;\n                var firstToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(firstToBePaidDate.getTime())) {\n                    firstToBePaidDate.setMonth(firstToBePaidDate.getMonth() + firstEmiNumber);\n                } else {\n                    firstToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: firstEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: firstToBePaidDate instanceof Date ? firstToBePaidDate.toLocaleDateString() : firstToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            return emiSchedule;\n        },\n\n\n        actions: {\n            addNewEmi: function addNewEmi() {\n                var _this2 = this;\n\n                this.transitionToRoute('banks.bank.accounts.account.transactions.new', this.get('bankId'), this.get('loan').acc_number).then(function (newRoute) {\n                    newRoute.controller.setProperties({\n                        transaction_type: 'emi',\n                        transaction_amount: _this2.get('loanAmount'),\n                        accNo: _this2.get('loan').acc_number\n                    });\n                }).catch(function (error) {\n                    console.error(\"Transition failed\", error);\n                });\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/accounts/account/loans/loan/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    loansService: Ember.inject.service('loans'),\n    loan: [],\n    loadLoan: function loadLoan() {\n      var _this = this;\n\n      var accNo = localStorage.getItem('accNo');\n      var bankId = localStorage.getItem('bankId');\n      this.get('loansService').fetchLoan(accNo, bankId).then(function (response) {\n        console.log(response);\n        _this.set('loan', response);\n        _this.set('loan', _this.get('loan')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load loan:\", error);\n      });\n    },\n\n\n    actions: {\n      toEmis: function toEmis(loan, emiAmount) {\n\n        this.transitionToRoute(\"banks.bank.accounts.account.loans.loan.emi\", localStorage.getItem('bankId'), loan.acc_number, loan.loan_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            loan: loan,\n            loanAmount: emiAmount\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/account/loans/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.accounts.account.loans\", localStorage.getItem('accNo'));\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/accounts/account/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/accounts/account/transactions/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    transactionsService: Ember.inject.service('transactions'),\n    transactions: [],\n    bankId: localStorage.getItem('bankId'),\n    loadTransactions: function loadTransactions() {\n      var _this = this;\n\n      this.get('transactionsService').fetchTransactions(localStorage.getItem('accNo'), this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('transactions', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load transactions:\", error);\n        alert(\"Could not load transactions. Please try again later.\");\n      });\n    },\n\n\n    actions: {\n      viewTransaction: function viewTransaction(transaction) {\n        var _this2 = this;\n\n        localStorage.setItem('transactionId', transaction.transaction_id);\n        this.transitionToRoute('banks.bank.accounts.account.transactions.transaction', transaction.acc_number, transaction.transaction_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            branchId: _this2.get('branchId'),\n            transactionId: transaction.transaction_id\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewTransaction: function addNewTransaction(branchId) {\n        var _this3 = this;\n\n        console.log(branchId);\n        this.transitionToRoute('banks.bank.accounts.account.transactions.new').then(function (newRoute) {\n          newRoute.controller.setProperties({\n            accNo: _this3.get('accNo'),\n            branchId: branchId,\n            bankId: _this3.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to new transaction page failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/account/transactions/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        actions: {\n            toTransaction: function toTransaction() {\n                this.transitionToRoute(\"banks.bank.accounts.account.transactions\", localStorage.getItem('accNo'));\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/accounts/account/transactions/transaction', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    transactionsService: Ember.inject.service('transactions'),\n    transaction: [],\n    bankId: localStorage.getItem('bankId'),\n    loadTransaction: function loadTransaction() {\n      var _this = this;\n\n      this.get('transactionsService').fetchTransaction().then(function (response) {\n        console.log(response);\n        _this.set('transaction', response);\n        _this.set('transaction', _this.get('transaction')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load transaction:\", error);\n        alert(\"Could not load transaction. Please try again later.\");\n      });\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    branchesService: Ember.inject.service('branches'),\n    accountsService: Ember.inject.service('accounts'),\n    bankId: localStorage.getItem('bankId'),\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.get('branchSelection').on('branchChanged', this, this.handleBranchChange);\n    },\n    handleBranchChange: function handleBranchChange(newBranchId) {\n      this.loadAccounts();\n    },\n\n    accounts: [],\n\n    loadAccounts: function loadAccounts() {\n      var _this = this;\n\n      console.log(this.get('bankId'));\n      this.get('accountsService').fetchAccounts(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('accounts', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n\n    actions: {\n      viewaccount: function viewaccount(account) {\n        var _this2 = this;\n\n        localStorage.setItem('branchId', account.branch_id);\n        localStorage.setItem('accNo', account.acc_no);\n        // console.log(\"view....\"+this.get('bankId'));\n\n        this.transitionToRoute('banks.bank.accounts.account', this.get('bankId'), account.acc_no).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            branchId: account.branch_id,\n            account: account\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewAccount: function addNewAccount() {\n        var _this3 = this;\n\n        console.log(this.get('bankId'));\n        this.transitionToRoute('banks.bank.accounts.new').then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            bankId: _this3.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      editAccount: function editAccount(isEdit, account, branchId) {\n        var _this4 = this;\n\n        localStorage.setItem('branchId', branchId);\n        localStorage.setItem('accNo', account.acc_no);\n        this.transitionToRoute('banks.bank.accounts.account.edit', this.get('bankId'), account.acc_no).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            isEdit: isEdit,\n            accNo: account.acc_no,\n            acc_type: account.acc_type,\n            acc_balance: account.acc_balance,\n            acc_status: account.acc_status,\n            username: account.username,\n            fullname: account.user_fullname,\n            branch_name: account.branch_name,\n            branch_Id: branchId,\n            bankId: _this4.get('bankId'),\n            userId: account.user_id\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    },\n    willDestroy: function willDestroy() {\n      this._super.apply(this, arguments);\n      this.get('branchSelection').off('branchChanged', this, this.handleBranchChange);\n    }\n  });\n});","define('banker/controllers/banks/bank/accounts/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    actions: {\n      toAccount: function toAccount() {\n        this.transitionToRoute(\"banks.bank.accounts\", this.get('bankId'));\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/branches', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/branches/branch', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/branches/branch/delete', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define(\"banker/controllers/banks/bank/branches/branch/edit\", [\"exports\"], function (exports) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        actions: {\n            toBranch: function toBranch() {\n                this.transitionToRoute(\"banks.bank.branches\", localStorage.getItem(\"bankId\"));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/branches/branch/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchesService: Ember.inject.service('branches'),\n    branch: [],\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n    loadBranch: function loadBranch() {\n      var _this = this;\n\n      this.get('branchesService').fetchBranch(this.get('bankId')).then(function (response) {\n        _this.set('branch', response);\n        _this.set('branch', _this.get('branch')[0]);\n        console.log(_this.get('branch'));\n      }).catch(function (error) {\n        console.error(\"Failed to load branch:\", error);\n      });\n    },\n\n    actions: {\n      viewAccounts: function viewAccounts(branch) {\n        var _this2 = this;\n\n        localStorage.setItem(\"branchId\", branch.branch_id);\n        this.transitionToRoute('banks.bank.accounts', this.get('bankId')).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: localStorage.getItem('bankId'),\n            branchId: _this2.get('branchId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      delete: function _delete(branch) {\n        if (confirm('Are you sure you want to delete the branch: ' + branch.branch_name + '?')) {\n          this.get('branchesService').deleteBranch(this.get('bankId'), branch.branch_id).then(function () {\n            console.log('Branch deleted successfully');\n          }).catch(function (error) {\n            console.error(\"Failed to delete branch:\", error);\n            alert('Error occurred while deleting the branch.');\n          });\n        }\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/branches/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchesService: Ember.inject.service('branches'),\n    bankId: localStorage.getItem(\"bankId\"),\n    init: function init() {},\n\n    branches: [],\n\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      console.log(this.get('bankId'));\n      this.get('branchesService').fetchBranches(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('branches', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load branches:\", error);\n      });\n    },\n\n\n    actions: {\n      viewBranch: function viewBranch(branch) {\n        var _this2 = this;\n\n        localStorage.setItem('branchId', branch.branch_id);\n        this.transitionToRoute('banks.bank.branches.branch', this.get('bankId'), branch.branch_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            Branch: branch\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewBranch: function addNewBranch() {\n        var _this3 = this;\n\n        console.log(this.get('bankId'));\n        this.transitionToRoute('banks.bank.branches.new').then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this3.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      editBranch: function editBranch(branch) {\n        var _this4 = this;\n\n        localStorage.setItem('branchId', branch.branch_id);\n        this.transitionToRoute('banks.bank.branches.branch.edit', this.get('bankId'), branch.branch_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: true,\n            branchId: branch.branch_id,\n            branch_name: branch.branch_name,\n            branch_address: branch.branch_address,\n            branch_number: branch.branch_number,\n            manager_id: branch.manager_id,\n            manager_name: branch.manager_name,\n            bankId: _this4.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      deleteBranch: function deleteBranch(branch) {\n        var _this5 = this;\n\n        if (confirm('Are you sure you want to delete the branch: ' + branch.branch_name + '?')) {\n          this.get('branchesService').deleteBranch(this.get('bankId'), branch.branch_id).then(function () {\n            console.log('Branch deleted successfully');\n            _this5.loadBranches();\n          }).catch(function (error) {\n            console.error(\"Failed to delete branch:\", error);\n            alert('Error occurred while deleting the branch.');\n          });\n        }\n      }\n    }\n  });\n});","define(\"banker/controllers/banks/bank/branches/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    actions: {\n      toBranch: function toBranch() {\n        this.transitionToRoute(\"banks.bank.branches\", localStorage.getItem(\"bankId\"));\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    notification: Ember.inject.service('notify'),\n    banksService: Ember.inject.service('banks'),\n    branchesService: Ember.inject.service('branches'),\n    branches: [],\n    bankId: localStorage.getItem('bankId'),\n    init: function init() {\n      this._super.apply(this, arguments);\n      console.log(\"Loan form initialized...\");\n      this.loadBranches();\n    },\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      this.get('branchesService').fetchBranches(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('branches', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        this.get('banksService').updateBank(this.get('branchId'), this.get('bank')).then(function () {\n          // console.log(\"bank update successfully.\");\n          _this2.get('notification').showNotification('Bank Edited successfully!', 'success');\n\n          Ember.run.later(function () {\n            _this2.transitionToRoute('banks.bank', _this2.get('bankId'));\n          }, 2000);\n        }).catch(function (error) {\n          console.error(\"Failed to load accounts:\", error);\n        });\n      },\n      cancel: function cancel() {\n        this.transitionToRoute('banks.bank');\n      }\n    }\n\n  });\n});","define('banker/controllers/banks/bank/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchesService: Ember.inject.service('branches'),\n    banksService: Ember.inject.service('banks'),\n    bankId: localStorage.getItem('bankId'),\n    branch: [],\n    banks: [],\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n    loadBanks: function loadBanks() {\n      var _this = this;\n\n      this.get('banksService').fetchBank(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('banks', response);\n        _this.set('branchId', localStorage.getItem('branchId'));\n        localStorage.setItem('branchId', _this.get('banks')[0].main_branch_id);\n        _this.get('branchesService').fetchBranch(_this.get('bankId')).then(function (response) {\n          console.log(response);\n          localStorage.setItem('branchId', _this.get('branchId'));\n          _this.set('branch', response);\n          _this.set('branch', _this.get('branch')[0]);\n        }).catch(function (error) {\n          console.error(\"Failed to load banks:\", error);\n        });\n      }).catch(function (error) {\n        console.error(\"Failed to load banks:\", error);\n      });\n    },\n\n\n    actions: {\n      updateMainBranch: function updateMainBranch(bank) {\n        this.transitionToRoute('banks.bank.edit', bank.bank_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            bank: bank\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n\n  });\n});","define('banker/controllers/banks/bank/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/loans/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    loansService: Ember.inject.service('loans'),\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.get('branchSelection').on('branchChanged', this, this.handleBranchChange);\n    },\n    handleBranchChange: function handleBranchChange(newBranchId) {\n      this.loadLoans();\n    },\n\n\n    loans: [],\n    loadLoans: function loadLoans() {\n      var _this = this;\n\n      console.log(this.get('accNo'));\n      this.get('loansService').fetchLoans(localStorage.getItem('accNo'), localStorage.getItem('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('loans', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load loans:\", error);\n      });\n    },\n\n    bankId: localStorage.getItem('bankId'),\n    actions: {\n      viewloan: function viewloan(loan) {\n        var _this2 = this;\n\n        localStorage.setItem(\"accNo\", loan.acc_number);\n        // console.log(\"view....\"+this.get('bankId'));\n        localStorage.setItem(\"loanId\", loan.loan_id);\n        this.transitionToRoute('banks.bank.loans.loan', this.get('bankId'), loan.loan_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            branchId: _this2.get('branchId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewLoan: function addNewLoan(branchId) {\n        var _this3 = this;\n\n        console.log(branchId);\n        this.transitionToRoute('banks.bank.loans.new').then(function (newRoute) {\n          newRoute.controller.setProperties({\n            accNo: _this3.get('accNo'),\n            branchId: branchId,\n            bankId: _this3.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      },\n      editLoan: function editLoan(isEdit, loan, branchId) {\n        var _this4 = this;\n\n        localStorage.setItem(\"accNo\", loan.acc_number);\n        this.transitionToRoute('banks.bank.loans.loan.edit', loan.loan_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: isEdit,\n            loan_id: loan.loan_id,\n            loan_type: loan.loan_type,\n            loan_amount: loan.loan_amount,\n            loan_interest: loan.loan_interest,\n            loan_duration: loan.loan_duration,\n            loan_status: loan.loan_status,\n            loan_availed_date: loan.loan_availed_date,\n            accNo: loan.acc_number,\n            bankId: _this4.get('bankId'),\n            branchId: branchId\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to edit loan page failed\", error);\n        });\n      }\n    },\n    willDestroy: function willDestroy() {\n      this._super.apply(this, arguments);\n      this.get('branchSelection').off('branchChanged', this, this.handleBranchChange);\n    }\n  });\n});","define('banker/controllers/banks/bank/loans/loan', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/loans/loan/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.loans\", localStorage.getItem('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/loans/loan/emi', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        emisService: Ember.inject.service('emis'),\n        bankId: localStorage.getItem('bankId'),\n        loanId: localStorage.getItem('loanId'),\n        emis: [],\n        generatedEmis: [],\n\n        loadEmis: function loadEmis() {\n            var _this = this;\n\n            this.get('emisService').fetchEmis(this.get('loanId')).then(function (response) {\n                _this.set('emis', response);\n                _this.set('generatedEmis', _this.generateTable(_this.get('emis')));\n            }).catch(function (error) {\n                console.error(\"Failed to load EMIs:\", error);\n                _this.set('generatedEmis', _this.generateTable([]));\n            });\n        },\n        generateTable: function generateTable(emis) {\n            var emiSchedule = [];\n\n            console.log(this.get('loan'));\n            var totalEmis = this.get('loan').loan_duration;\n            var loanAvailedDate = this.get('loan').length <= 0 ? new Date() : new Date(this.get('loan').loan_availed_date.replace(/-/g, '/'));\n\n            var emisArray = this.get('emis');\n\n            for (var i = 0; i < emisArray.length; i++) {\n                var emi = emisArray[i];\n                var emiNumber = emi.emi_number || '-';\n                var transactionId = emi.transaction_id || '-';\n                var actualPaidDate = emi.actual_paid_date ? new Date(emi.actual_paid_date.replace(/-/g, '/')) : '-';\n\n                var toBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(toBePaidDate.getTime())) {\n                    toBePaidDate.setMonth(toBePaidDate.getMonth() + emiNumber);\n                } else {\n                    toBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: emiNumber,\n                    transactionId: transactionId,\n                    toBePaidDate: toBePaidDate instanceof Date ? toBePaidDate.toLocaleDateString() : toBePaidDate,\n                    actualPaidDate: actualPaidDate instanceof Date ? actualPaidDate.toLocaleDateString() : actualPaidDate\n                });\n            }\n\n            var nextEmiNumber = emis.length > 0 ? emis[emis.length - 1].emi_number + 1 : 1;\n            if (nextEmiNumber <= totalEmis) {\n                var nextToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(nextToBePaidDate.getTime())) {\n                    nextToBePaidDate.setMonth(nextToBePaidDate.getMonth() + nextEmiNumber);\n                } else {\n                    nextToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: nextEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: nextToBePaidDate instanceof Date ? nextToBePaidDate.toLocaleDateString() : nextToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            if (emiSchedule.length === 0) {\n                var firstEmiNumber = 1;\n                var firstToBePaidDate = new Date(loanAvailedDate);\n                if (!isNaN(firstToBePaidDate.getTime())) {\n                    firstToBePaidDate.setMonth(firstToBePaidDate.getMonth() + firstEmiNumber);\n                } else {\n                    firstToBePaidDate = 'Invalid Date';\n                }\n\n                emiSchedule.push({\n                    emiNumber: firstEmiNumber,\n                    transactionId: '-',\n                    toBePaidDate: firstToBePaidDate instanceof Date ? firstToBePaidDate.toLocaleDateString() : firstToBePaidDate,\n                    actualPaidDate: '-'\n                });\n            }\n\n            return emiSchedule;\n        },\n\n\n        actions: {\n            addNewEmi: function addNewEmi() {\n                var _this2 = this;\n\n                this.transitionToRoute('banks.bank.accounts.account.transactions.new', this.get('bankId'), this.get('loan').acc_number).then(function (newRoute) {\n                    newRoute.controller.setProperties({\n                        transaction_type: 'emi',\n                        transaction_amount: _this2.get('loanAmount'),\n                        accNo: _this2.get('loan').acc_number\n                    });\n                }).catch(function (error) {\n                    console.error(\"Transition failed\", error);\n                });\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/loans/loan/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    bankId: localStorage.getItem('bankId'),\n    loansService: Ember.inject.service('loans'),\n    loan: [],\n    loadLoan: function loadLoan() {\n      var _this = this;\n\n      var accNo = localStorage.getItem('accNo');\n      var bankId = localStorage.getItem('bankId');\n      this.get('loansService').fetchLoan(accNo, bankId).then(function (response) {\n        console.log(response);\n        _this.set('loan', response);\n        _this.set('loan', _this.get('loan')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load loan:\", error);\n      });\n    },\n\n    actions: {\n      toEmis: function toEmis(loan, emiAmount) {\n\n        this.transitionToRoute(\"banks.bank.loans.loan.emi\", this.get('bankId'), loan.loan_id).then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            loan: loan,\n            loanAmount: emiAmount\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/loans/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        actions: {\n            toLoan: function toLoan() {\n                this.transitionToRoute(\"banks.bank.loans\", localStorage.getItem('bankId'));\n            }\n        }\n    });\n});","define('banker/controllers/banks/bank/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/transactions/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    branchSelection: Ember.inject.service('branch-select'),\n    transactionsService: Ember.inject.service('transactions'),\n    transactions: [],\n    bankId: localStorage.getItem('bankId'),\n    accNo: localStorage.getItem('accNo'),\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.get('branchSelection').on('branchChanged', this, this.handleBranchChange);\n    },\n    handleBranchChange: function handleBranchChange(newBranchId) {\n      this.loadTransactions();\n    },\n    loadTransactions: function loadTransactions() {\n      var _this = this;\n\n      console.log(this.get('accNo'));\n      this.get('transactionsService').fetchTransactions(this.get('accNo'), this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('transactions', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load transactions:\", error);\n        alert(\"Could not load transactions. Please try again later.\");\n      });\n    },\n\n\n    actions: {\n      viewTransaction: function viewTransaction(transaction) {\n        var _this2 = this;\n\n        localStorage.setItem('transactionId', transaction.transaction_id);\n        this.transitionToRoute('banks.bank.transactions.transaction', this.get('bankId'), transaction.transaction_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            branchId: _this2.get('branchId'),\n            transactionId: transaction.transaction_id\n          });\n          console.log(\"inner view transactions\");\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewTransaction: function addNewTransaction(branchId) {\n        var _this3 = this;\n\n        console.log(branchId);\n        this.transitionToRoute('banks.bank.transactions.new', this.get('bankId')).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            accNo: _this3.get('accNo'),\n            branchId: branchId,\n            bankId: _this3.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition to new transaction page failed\", error);\n        });\n      }\n    },\n    willDestroy: function willDestroy() {\n      this._super.apply(this, arguments);\n      this.get('branchSelection').off('branchChanged', this, this.handleBranchChange);\n    }\n  });\n});","define('banker/controllers/banks/bank/transactions/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        actions: {\n            toTransaction: function toTransaction() {\n                this.transitionToRoute(\"banks.bank.transactions\", localStorage.getItem('bankId'));\n            }\n        }\n\n    });\n});","define('banker/controllers/banks/bank/transactions/transaction', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    transactionsService: Ember.inject.service('transactions'),\n    transaction: [],\n    bankId: localStorage.getItem('bankId'),\n    init: function init() {},\n    loadTransaction: function loadTransaction() {\n      var _this = this;\n\n      this.get('transactionsService').fetchTransaction().then(function (response) {\n        console.log(response);\n        _this.set('transaction', response);\n        _this.set('transaction', _this.get('transaction')[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load transaction:\", error);\n        alert(\"Could not load transaction. Please try again later.\");\n      });\n    }\n  });\n});","define('banker/controllers/banks/bank/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/users/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    usersService: Ember.inject.service('users'),\n    bankId: localStorage.getItem(\"bankId\"),\n\n    init: function init() {},\n\n    users: [],\n\n    loadUsers: function loadUsers() {\n      var _this = this;\n\n      console.log(this.get('bankId'));\n      this.get('usersService').fetchUsers(this.get('bankId')).then(function (response) {\n        console.log(response);\n        _this.set('users', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load users:\", error);\n      });\n    },\n\n\n    actions: {\n      viewUser: function viewUser(user) {\n        var _this2 = this;\n\n        localStorage.setItem('userId', user.user_id);\n        this.transitionToRoute('banks.bank.users.user', this.get('bankId'), user.user_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId'),\n            User: user\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      editUser: function editUser(user) {\n        var _this3 = this;\n\n        this.transitionToRoute('banks.bank.users.user.edit', this.get('bankId'), user.user_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: true,\n            userId: user.user_id,\n            fullname: user.fullname,\n            username: user.username,\n            user_role: user.user_role,\n            date_of_birth: user.date_of_birth,\n            user_phonenumber: user.user_phonenumber,\n            user_address: user.user_address,\n            user_status: user.user_status,\n            bankId: _this3.get('bankId')\n          });\n\n          _this3.loadUsers();\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      deleteUser: function deleteUser(user) {\n        var _this4 = this;\n\n        if (confirm('Are you sure you want to delete the user: ' + user.fullname + '?')) {\n          this.get('usersService').deleteUser(this.get('bankId'), user.user_id).then(function () {\n            console.log('User deleted successfully');\n            _this4.loadUsers();\n          }).catch(function (error) {\n            console.error(\"Failed to delete user:\", error);\n            alert('Error occurred while deleting the user.');\n          });\n        }\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/bank/users/user/dashboard', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    dashboardService: Ember.inject.service('dashboard'),\n\n    role: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_role;\n      }\n    }),\n\n    init: function init() {\n      var _this = this;\n\n      console.log(\"dashboard\");\n      this._super.apply(this, arguments);\n      this.get('dashboardService').fetchAdminDashboard().then(function (response) {\n        _this.set('branches', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load dashboard:\", error);\n      });\n    }\n  });\n});","define('banker/controllers/banks/bank/users/user/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    usersService: Ember.inject.service('users'),\n    statuses: ['active', 'inactive', 'pending'],\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this = this;\n\n        if (!this.get('fullname') || !this.get('date_of_birth') || !this.get('user_address') || !this.get('user_phonenumber')) {\n          this.set('errorMessage', 'All fields are required');\n          return;\n        }\n\n        if (this.get('user_phonenumber').length !== 10 || isNaN(this.get('user_phonenumber'))) {\n          this.set('errorMessage', 'Please enter a valid 10-digit phone number.');\n          return;\n        }\n\n        if (!this.get('statuses').includes(this.get('user_status'))) {\n          this.set(\"errorMessage\", 'Please select a valid status.');\n          return;\n        }\n\n        var userData = {\n          userId: this.get('userId'),\n          fullname: this.get('fullname'),\n          username: this.get('username'),\n          user_role: this.get('user_role'),\n          date_of_birth: this.get('date_of_birth'),\n          user_phonenumber: this.get('user_phonenumber'),\n          user_address: this.get('user_address'),\n          user_status: this.get('user_status')\n        };\n\n        this.get('usersService').updateUser(userData).then(function () {\n          console.log(\"User updated successfully!\");\n          _this.resetForm();\n          _this.transitionToRoute('banks.bank.users', localStorage.getItem(\"bankId\"));\n        }).catch(function (error) {\n          console.error('Error updating user:', error);\n        });\n      },\n      toUsers: function toUsers() {\n        this.transitionToRoute(\"banks.bank.users\", localStorage.getItem(\"bankId\"));\n      }\n    }\n  });\n});","define('banker/controllers/banks/bank/users/user/index', ['exports'], function (exports) {\n   'use strict';\n\n   Object.defineProperty(exports, \"__esModule\", {\n      value: true\n   });\n   exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/banks/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    banksService: Ember.inject.service('banks'),\n    bankId: localStorage.getItem(\"bankId\"),\n\n    banks: [],\n\n    loadBanks: function loadBanks() {\n      var _this = this;\n\n      this.get('banksService').fetchBanks().then(function (response) {\n        console.log(response);\n        _this.set('banks', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load banks:\", error);\n      });\n    },\n\n\n    actions: {\n      viewBank: function viewBank(bank) {\n        var _this2 = this;\n\n        localStorage.setItem('bankId', bank.bank_id);\n        this.transitionToRoute('banks.bank', bank.bank_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      addNewBank: function addNewBank() {\n        this.transitionToRoute('banks.new').then(function () {}).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/banks/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    notification: Ember.inject.service('notify'),\n    banksService: Ember.inject.service('banks'),\n    usersService: Ember.inject.service('users'),\n    errorMessage: '',\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      console.log(\"init...\");\n    },\n    loadAdmins: function loadAdmins() {\n      var _this = this;\n\n      this.get('usersService').fetchAdmins().then(function (response) {\n        _this.set('admins', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load admins:\", error);\n      });\n    },\n\n\n    bankId: '',\n    bank_name: '',\n    bank_code: '',\n    admin_name: '',\n    isEdit: false,\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('bank_name') || this.get('bank_name').trim() === '') {\n          this.set(\"errorMessage\", 'Please provide a bank name.');\n          return;\n        }\n\n        if (!this.get('bank_code') || this.get('bank_code').trim() === '') {\n          this.set(\"errorMessage\", 'Please provide a bank code.');\n          return;\n        }\n        if (!this.get('admin_name')) {\n          this.set(\"errorMessage\", 'Please select an admin');\n          return;\n        }\n\n        var bankData = {\n          bank_name: this.get('bank_name'),\n          bank_code: this.get('bank_code'),\n          admin_name: this.get('admin_name')\n        };\n\n        this.get('banksService').createBank(bankData).then(function () {\n          _this2.resetForm();\n          _this2.get('notification').showNotification('Bank created successfully!', 'success');\n          Ember.run.later(function () {\n            _this2.transitionToRoute('banks');\n          }, 2000);\n        }).catch(function (error) {\n          console.error('Error creating bank:', error);\n        });\n      },\n      cancel: function cancel() {\n        this.resetForm();\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        bankId: '',\n        bank_name: '',\n        bank_code: '',\n        bank_status: '',\n        admin_name: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/controllers/login', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    errorMessage: '',\n    userId: '',\n    getUserIdFromCookie: function getUserIdFromCookie() {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    },\n\n    actions: {\n      login: function login(credentials) {\n        var _this = this;\n\n        // console.log('Login action triggered'); \n        // console.log(credentials);\n        this.get('session').login(credentials).then(function () {\n          _this.set('userId', _this.getUserIdFromCookie());\n          if (_this.get('userId')) {\n\n            _this.transitionToRoute('banks.bank.users.user.dashboard', localStorage.getItem('bankId'), _this.get('userId'));\n          } else {\n            _this.set('errorMessage', 'User ID not found in cookies');\n          }\n        }).catch(function (error) {\n          _this.set('errorMessage', error.message || 'Login failed');\n        });\n      },\n      signup: function signup(credentials) {\n        var _this2 = this;\n\n        // console.log('signup action triggered'); \n\n        this.get('session').signup(credentials).then(function () {\n          _this2.transitionToRoute('login');\n        }).catch(function (error) {\n          _this2.set('errorMessage', error.message || 'Signup failed');\n        });\n      },\n      logout: function logout() {\n        var _this3 = this;\n\n        this.get('session').logout().then(function () {\n          _this3.transitionToRoute('login');\n        });\n      },\n      toggleMode: function toggleMode() {\n        // console.log(isSignup);\n\n        this.transitionToRoute('register');\n      }\n    }\n  });\n});","define('banker/controllers/register', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    errorMessage: '',\n    actions: {\n      signup: function signup(credentials) {\n        var _this = this;\n\n        // console.log('signup action triggered'); \n\n        this.get('session').signup(credentials).then(function () {\n          _this.transitionToRoute('login');\n        }).catch(function (error) {\n          _this.set('errorMessage', error.message || 'Signup failed');\n        });\n      },\n      toggleMode: function toggleMode() {\n        // console.log(isSignup);\n        this.transitionToRoute('login');\n      }\n    }\n  });\n});","define('banker/controllers/super-admin-login', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        session: Ember.inject.service(),\n        actions: {\n            SuperAdminLogin: function SuperAdminLogin(credentials) {\n                var _this = this;\n\n                credentials.isSuperAdmin = true;\n                this.get('session').login(credentials).then(function () {\n\n                    _this.transitionToRoute('users');\n                }).catch(function (error) {\n                    _this.set('errorMessage', error.message || 'Login failed');\n                });\n            }\n        }\n\n    });\n});","define('banker/controllers/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/users/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    usersService: Ember.inject.service('users'),\n    bankId: localStorage.getItem(\"bankId\"),\n\n    notification: Ember.inject.service('notify'),\n    users: [],\n    selectedUserRole: '',\n    selectedUserStatus: '',\n\n    filteredUsers: Ember.computed('users', 'selectedUserRole', 'selectedUserStatus', function () {\n      var users = this.get('users');\n      var selectedUserRole = this.get('selectedUserRole');\n      var selectedUserStatus = this.get('selectedUserStatus');\n\n      if (selectedUserRole) {\n        users = users.filter(function (user) {\n          return user.user_role === selectedUserRole;\n        });\n      }\n\n      if (selectedUserStatus) {\n        users = users.filter(function (user) {\n          return user.user_status === selectedUserStatus;\n        });\n      }\n\n      return users;\n    }),\n\n    loadUsers: function loadUsers() {\n      var _this = this;\n\n      this.get('usersService').fetchUsers().then(function (response) {\n        console.log(response);\n        _this.set('users', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load users:\", error);\n      });\n    },\n\n\n    actions: {\n      viewUser: function viewUser(user) {\n        var _this2 = this;\n\n        localStorage.setItem('userId', user.user_id);\n        this.transitionToRoute('users.user', user.user_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            bankId: _this2.get('bankId')\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      editUser: function editUser(user) {\n        var _this3 = this;\n\n        localStorage.setItem('userId', user.user_id);\n        this.transitionToRoute('users.user.edit', user.user_id).then(function (newRoute) {\n          newRoute.controller.setProperties({\n            isEdit: true,\n            userId: user.user_id,\n            fullname: user.fullname,\n            username: user.username,\n            user_role: user.user_role,\n            date_of_birth: user.date_of_birth,\n            user_phonenumber: user.user_phonenumber,\n            user_address: user.user_address,\n            user_status: user.user_status,\n            bankId: _this3.get('bankId')\n          });\n\n          _this3.loadUsers();\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      },\n      deleteUser: function deleteUser(user) {\n        var _this4 = this;\n\n        if (confirm('Are you sure you want to delete the user: ' + user.fullname + '?')) {\n          this.get('usersService').deleteUser(user.user_id).then(function () {\n            console.log('User deleted successfully');\n            _this4.loadUsers();\n          }).catch(function (error) {\n            console.error(\"Failed to delete user:\", error);\n            alert('Error occurred while deleting the user.');\n          });\n        }\n      },\n      updateUserRole: function updateUserRole(role) {\n        this.set('selectedUserRole', role);\n      },\n      updateUserStatus: function updateUserStatus(status) {\n        this.set('selectedUserStatus', status);\n      }\n    }\n  });\n});","define('banker/controllers/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('banker/controllers/users/user/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    notification: Ember.inject.service('notify'),\n    usersService: Ember.inject.service('users'),\n    statuses: ['active', 'inactive', 'pending'],\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this = this;\n\n        var userData = {\n\n          user_status: this.get('user_status')\n        };\n\n        this.get('usersService').updateUser(userData).then(function () {\n          console.log(\"User updated successfully!\");\n          _this.resetForm();\n          _this.get('notification').showNotification('User Edited successfully!', 'success');\n          Ember.run.later(function () {\n            _this.transitionToRoute('users');\n          }, 2000);\n        }).catch(function (error) {\n          console.error('Error updating user:', error);\n        });\n      },\n      toUsers: function toUsers() {\n        this.transitionToRoute(\"banks.bank.users\", localStorage.getItem(\"bankId\"));\n      }\n    },\n    resetForm: function resetForm() {\n      this.setProperties({\n        userId: '',\n        user_status: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/controllers/users/user/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    usersService: Ember.inject.service('users'),\n    loadUser: function loadUser() {\n      var _this = this;\n\n      this.get('usersService').fetchUsers().then(function (response) {\n        console.log(response);\n        _this.set('user', response[0]);\n      }).catch(function (error) {\n        console.error(\"Failed to load users:\", error);\n      });\n    }\n  });\n});","define('banker/helpers/app-version', ['exports', 'banker/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('banker/helpers/eq', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.eq = eq;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function eq(_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        param1 = _ref2[0],\n        param2 = _ref2[1];\n\n    return param1 === param2;\n  }\n\n  exports.default = Ember.Helper.helper(eq);\n});","define('banker/helpers/format-date', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formatDate = formatDate;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function formatDate(_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        date = _ref2[0];\n\n    if (!date) {\n      return '';\n    }\n    return new Date(date).toLocaleDateString();\n  }\n\n  exports.default = Ember.Helper.helper(formatDate);\n});","define('banker/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('banker/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('banker/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'banker/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var name = void 0,\n      version = void 0;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('banker/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('banker/initializers/data-adapter', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('banker/initializers/export-application-global', ['exports', 'banker/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('banker/initializers/injectStore', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/store', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/transforms', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"banker/instance-initializers/ember-data\", [\"exports\", \"ember-data/instance-initializers/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('banker/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('banker/router', ['exports', 'banker/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('index', { path: \"/banker\" });\n    this.route('login', { path: \"/banker/login\" });\n    this.route('register', { path: \"/banker/register\" });\n\n    this.route('users', { path: \"/banker/users\" }, function () {\n      this.route('user', { path: \"/:userId\" }, function () {\n        this.route('edit');\n      });\n    });\n\n    this.route('super-admin-login', { path: \"/banker/super-admin-login\" });\n\n    this.route('banks', { path: \"/banker/banks\" }, function () {\n      this.route('bank', { path: \"/:bankId\" }, function () {\n        this.route('accounts', function () {\n          this.route('account', { path: \"/:accNo\" }, function () {\n            this.route('transactions', function () {\n              this.route('transaction', { path: \"/:transactionId\" });\n              this.route('new');\n            });\n            this.route('loans', function () {\n              this.route('loan', { path: \"/:loanId\" }, function () {\n                this.route('edit');\n                this.route('emi');\n              });\n              this.route('new');\n            });\n            this.route('edit');\n          });\n          this.route('new');\n        });\n        this.route('branches', function () {\n          this.route('branch', { path: \"/:branchId\" }, function () {\n            this.route('edit');\n          });\n          this.route('new');\n        });\n        this.route('loans', function () {\n          this.route('loan', { path: \"/:loanId\" }, function () {\n            this.route('edit');\n            this.route('emi');\n          });\n          this.route('new');\n        });\n        this.route('transactions', function () {\n          this.route('transaction', { path: \"/:transactionId\" });\n          this.route('new');\n        });\n        this.route('users', { path: \"/users\" }, function () {\n          this.route('user', { path: \"/:userId\" }, function () {\n            this.route('dashboard');\n          });\n        });\n        this.route('edit');\n      });\n      this.route('new');\n    });\n  });\n\n  exports.default = Router;\n});","define('banker/routes/banks', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        model: function model(params) {\n            return {\n                bankId: params.bankId\n            };\n        }\n    });\n});","define('banker/routes/banks/bank/accounts', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n\n        // model(params) {\n        //     return this.modelFor('banks.bank'); // fetches the model from the parent route\n        //   },\n        //   setupController(controller, model) {\n        //     controller.set('bankId', model.bankId); // sets the bankId in the controller\n        //     this._super(controller, model);\n        //     controller.loadAccounts();\n        //   }\n\n    });\n});","define('banker/routes/banks/bank/accounts/account', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var bankId = localStorage.getItem('bankId');\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else if (role == 'CUSTOMER') {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadAccount();\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account/loans/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n      localStorage.setItem('transactionId', '*');\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadLoans();\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account/loans/loan/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var role = sessionData.user_role;\n\n            if (role == 'SUPERADMIN') {\n                this.transitionTo('users');\n                return;\n            } else if (role == 'CUSTOMER') {\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan/emi', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadEmis();\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/loans/loan/index', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var role = sessionData.user_role;\n\n            if (role == 'SUPERADMIN') {\n                this.transitionTo('users');\n                return;\n            }\n        },\n        setupController: function setupController(controller, model) {\n            this._super(controller, model);\n            controller.loadLoan();\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/loans/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var role = sessionData.user_role;\n\n            if (role == 'SUPERADMIN') {\n                this.transitionTo('users');\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/accounts/account/transactions/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadTransactions();\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/account/transactions/new', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var role = sessionData.user_role;\n\n            if (role == 'SUPERADMIN') {\n                this.transitionTo('users');\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/accounts/account/transactions/transaction', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadTransaction();\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n\n      localStorage.setItem('transactionId', '*');\n      localStorage.setItem('accNo', '*');\n      if (role != 'MANAGER') {\n        localStorage.setItem('branchId', '*');\n      }\n      localStorage.setItem('loanId', '*');\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadAccounts();\n    }\n  });\n});","define('banker/routes/banks/bank/accounts/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/branches', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/branches/branch', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/branches/branch/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else if (role == 'CUSTOMER' || role == 'MANAGER') {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/branches/branch/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else if (role == 'CUSTOMER') {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadBranch();\n    }\n  });\n});","define('banker/routes/banks/bank/branches/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else if (role == 'CUSTOMER' || role == 'MANAGER') {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n\n      localStorage.setItem('accNo', '*');\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n      localStorage.setItem('branchId', '*');\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadBranches();\n    }\n  });\n});","define('banker/routes/banks/bank/branches/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else if (role == 'CUSTOMER' || role == 'MANAGER') {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var bankId = localStorage.getItem('bankId');\n\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var role = sessionData.user_role;\n\n            if (role == 'SUPERADMIN') {\n                this.transitionTo('users');\n                return;\n            } else if (role == 'CUSTOMER') {\n\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var bankId = localStorage.getItem('bankId');\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      localStorage.setItem('accNo', '*');\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n      if (sessionData.user_role != 'MANAGER') {\n        localStorage.setItem('branchId', '*');\n      }\n    },\n    setupController: function setupController(controller, model) {\n      controller.loadBanks();\n    }\n  });\n});","define('banker/routes/banks/bank/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/loans/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n\n      localStorage.setItem('accNo', '*');\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n      if (sessionData.user_role != 'MANAGER') {\n        localStorage.setItem('branchId', '*');\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadLoans();\n    }\n  });\n});","define('banker/routes/banks/bank/loans/loan', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/loans/loan/edit', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else if (role == 'CUSTOMER') {\n\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/loans/loan/emi', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadEmis();\n    }\n  });\n});","define('banker/routes/banks/bank/loans/loan/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadLoan();\n    }\n  });\n});","define('banker/routes/banks/bank/loans/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/transactions/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    resetNamespace: true, // Ensure fresh route\n    queryParams: {\n      refreshModel: true // Reload model on param change\n    },\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n\n      localStorage.setItem('accNo', '*');\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n      if (sessionData.user_role != 'MANAGER') {\n        localStorage.setItem('branchId', '*');\n      }\n    },\n    setupController: function setupController(controller, model) {\n\n      this._super(controller, model);\n\n      controller.loadTransactions();\n    }\n  });\n});","define('banker/routes/banks/bank/transactions/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/transactions/transaction', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n      controller.loadTransaction();\n    }\n  });\n});","define('banker/routes/banks/bank/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/users/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var bankId = localStorage.getItem('bankId');\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n      }\n    }\n  });\n});","define('banker/routes/banks/bank/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/banks/bank/users/user/dashboard', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var bankId = localStorage.getItem('bankId');\n\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('login');\n                return;\n            }\n            var role = sessionData.user_role;\n\n            if (role == 'SUPERADMIN') {\n                this.transitionTo('users');\n                return;\n            }\n        }\n    });\n});","define('banker/routes/banks/bank/users/user/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role == 'SUPERADMIN') {\n        this.transitionTo('users');\n        return;\n      } else {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n      }\n    }\n  });\n});","define('banker/routes/banks/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var bankId = localStorage.getItem('bankId');\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role !== 'SUPERADMIN') {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n\n      localStorage.setItem('bankId', '*');\n      localStorage.setItem('accNo', '*');\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('userId', '*');\n      localStorage.setItem('transactionId', '*');\n      localStorage.setItem('branchId', '*');\n    },\n    setupController: function setupController(controller, model) {\n      controller.loadBanks();\n    }\n  });\n});","define('banker/routes/banks/new', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var bankId = localStorage.getItem('bankId');\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role !== 'SUPERADMIN') {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n    },\n    setupController: function setupController(controller, model) {\n      controller.loadAdmins();\n    }\n  });\n});","define('banker/routes/login', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var value = '; ' + document.cookie;\n            var parts = value.split('; ' + 'sessionData' + '=');\n            if (parts.length === 2) {\n                var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                var sessionData = JSON.parse(cookieData);\n                if (document.cookie != '') {\n                    this.transitionTo('banks.bank.users.user.dashboard', localStorage.getItem('bankId'), sessionData.user_id);\n                }\n            }\n        }\n    });\n});","define('banker/routes/register', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            var value = '; ' + document.cookie;\n            var parts = value.split('; ' + 'sessionData' + '=');\n            if (parts.length === 2) {\n                var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                var sessionData = JSON.parse(cookieData);\n                if (document.cookie != '') {\n                    this.transitionTo('banks.bank.users.user.dashboard', localStorage.getItem('bankId'), sessionData.user_id);\n                }\n            }\n        }\n    });\n});","define('banker/routes/super-admin-login', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            if (document.cookie != '') {\n                this.transitionTo('users');\n            }\n            localStorage.setItem('bankId', \"*\");\n        }\n    });\n});","define('banker/routes/users/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel: function beforeModel() {\n      var bankId = localStorage.getItem('bankId');\n\n      var getSessionData = function getSessionData() {\n        var value = '; ' + document.cookie;\n        var parts = value.split('; sessionData=');\n        if (parts.length === 2) {\n          var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n          return JSON.parse(cookieData);\n        }\n        return null;\n      };\n\n      var sessionData = getSessionData();\n\n      if (!sessionData) {\n        this.transitionTo('super-admin-login');\n        return;\n      }\n\n      var userId = sessionData.user_id;\n      var role = sessionData.user_role;\n\n      if (role !== 'SUPERADMIN') {\n        this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n        return;\n      }\n\n      localStorage.setItem('accNo', '*');\n      localStorage.setItem('loanId', '*');\n      localStorage.setItem('transactionId', '*');\n      localStorage.setItem('branchId', '*');\n      localStorage.setItem('bankId', \"*\");\n      localStorage.setItem('userId', \"*\");\n    },\n    setupController: function setupController(controller, model) {\n      controller.loadUsers();\n    }\n  });\n});","define('banker/routes/users/user', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/users/user/edit', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n\n            var bankId = localStorage.getItem('bankId');\n\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('super-admin-login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var role = sessionData.user_role;\n\n            if (role !== 'SUPERADMIN') {\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        }\n    });\n});","define('banker/routes/users/user/index', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n\n            var bankId = localStorage.getItem('bankId');\n\n            var getSessionData = function getSessionData() {\n                var value = '; ' + document.cookie;\n                var parts = value.split('; sessionData=');\n                if (parts.length === 2) {\n                    var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n                    return JSON.parse(cookieData);\n                }\n                return null;\n            };\n\n            var sessionData = getSessionData();\n\n            if (!sessionData) {\n                this.transitionTo('super-admin-login');\n                return;\n            }\n\n            var userId = sessionData.user_id;\n            var role = sessionData.user_role;\n\n            if (role !== 'SUPERADMIN') {\n                this.transitionTo('banks.bank.users.user.dashboard', bankId, userId);\n                return;\n            }\n        },\n        setupController: function setupController(controller, model) {\n            controller.loadUser();\n        }\n    });\n});","define('banker/services/accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n\n    fetchAccounts: function fetchAccounts(bankid) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = localStorage.getItem(\"branchId\");\n      var bankId = localStorage.getItem('bankId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      url = url + '/accounts';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"accounts\");\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching accounts:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching accounts.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchActiveAccounts: function fetchActiveAccounts(bankid) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = localStorage.getItem(\"branchId\");\n      var bankId = localStorage.getItem('bankId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      url = url + '/accounts?acc_status=1';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"accounts\");\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching accounts:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching accounts.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    fetchAccount: function fetchAccount(bankid) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem('bankId');\n      var branchId = localStorage.getItem(\"branchId\");\n      var accNo = localStorage.getItem('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accNo != \"*\") {\n        url = url + ('/accounts/' + accNo);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error3) {\n          console.error(\"Error fetching account:\", _error3);\n          if (_error3.responseJSON) {\n            alert('Error: ' + _error3.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching account.\");\n          }\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    },\n    createAccount: function createAccount(accountDetails) {\n      var bankId = localStorage.getItem('bankId');\n      var acc_type = accountDetails.acc_type,\n          acc_status = accountDetails.acc_status,\n          username = accountDetails.username;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = localStorage.getItem(\"branchId\");\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      url = url + '/accounts';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          acc_type: acc_type,\n          username: username,\n          acc_status: acc_status\n        }),\n\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error4) {\n          console.log(\"insert...err\");\n          throw _error4.responseJSON || _error4;\n        }\n      });\n    },\n    updateAccount: function updateAccount(accountDetails) {\n      var acc_type = accountDetails.acc_type,\n          acc_status = accountDetails.acc_status,\n          fullname = accountDetails.fullname,\n          username = accountDetails.username;\n\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem('bankId');\n      var branchId = localStorage.getItem(\"branchId\");\n      var accNo = localStorage.getItem('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accNo != \"*\") {\n        url = url + ('/accounts/' + accNo);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'PUT',\n        contentType: 'application/json',\n\n        data: JSON.stringify({\n\n          acc_type: acc_type,\n          fullname: fullname,\n          acc_status: acc_status,\n          username: username\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error5) {\n          throw _error5.responseJSON || _error5;\n        }\n      });\n    }\n  });\n});","define('banker/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('banker/services/banks', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n    fetchBanks: function fetchBanks() {\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/banks',\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          // console.log(\"banks\");\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching banks:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching banks.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchBank: function fetchBank(bankId) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          // console.log(\"banks\");\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching banks:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching banks.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    updateBank: function updateBank(main_branch_id, bankData) {\n      var bankId = localStorage.getItem(\"bankId\");\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (bankId != '*') {\n        url = url + ('banks/' + bankId);\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'PUT',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          bank_name: bankData.bank_name,\n          admin_id: bankData.admin_id,\n          main_branch_id: main_branch_id\n\n        }),\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          // alert('Bank updated successfully!');\n          return response;\n        },\n        error: function error(_error3) {\n          console.error(\"Error updating bank:\", _error3);\n          if (_error3.responseJSON) {\n            alert('Error: ' + _error3.responseJSON.message);\n          } else {\n            alert(\"An error occurred while updating the bank.\");\n          }\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    }\n  });\n});","define('banker/services/branch-select', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend(Ember.Evented, {\n    selectedBranchId: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.set('selectedBranchId', localStorage.getItem('branchId') || this.getDefaultBranchId());\n    },\n    changeBranch: function changeBranch(branchId) {\n      this.set('selectedBranchId', branchId);\n      localStorage.setItem('branchId', branchId);\n\n      this.trigger('branchChanged', branchId);\n    },\n    getDefaultBranchId: function getDefaultBranchId() {\n      return '-1';\n    }\n  });\n});","define('banker/services/branches', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n    branchId: '',\n    BankId: localStorage.getItem('bankId'),\n\n    fetchBranches: function fetchBranches(bankId) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (this.get('BankId') != \"*\") {\n        url = url + ('banks/' + this.get('BankId'));\n      }\n\n      url = url + '/branches';\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"branches\");\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching branches:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching branches.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchBranch: function fetchBranch(bankId) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = localStorage.getItem('branchId');\n      if (this.get('BankId') != \"*\") {\n        url = url + ('banks/' + this.get('BankId'));\n      }\n      if (branchId != \"*\") {\n        url = url + ('/branches/' + branchId);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching branch:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching branch.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    createBranch: function createBranch(branchDetails) {\n      var name = branchDetails.name,\n          address = branchDetails.address,\n          manager_id = branchDetails.manager_id,\n          bankId = branchDetails.bankId;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (this.get('BankId') != \"*\") {\n        url = url + ('banks/' + this.get('BankId'));\n      }\n\n      url = url + '/branches';\n      console.log(\"insert...\");\n      return Ember.$.ajax({\n        url: url,\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          branch_name: name,\n          branch_address: address,\n          manager_id: manager_id\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error3) {\n          console.log(\"insert...err\");\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    },\n    updateBranch: function updateBranch(branchDetails) {\n      var branchId = branchDetails.branchId,\n          name = branchDetails.name,\n          address = branchDetails.address,\n          manager_id = branchDetails.manager_id,\n          bankId = branchDetails.bankId;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (this.get('BankId') != \"*\") {\n        url = url + ('banks/' + this.get('BankId'));\n      }\n\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'PUT',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          branch_name: name,\n          branch_address: address,\n          manager_id: manager_id\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error4) {\n          throw _error4.responseJSON || _error4;\n        }\n      });\n    },\n    deleteBranch: function deleteBranch(bankId, branch_id) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      if (this.get('BankId') != \"*\") {\n        url = url + ('banks/' + this.get('BankId'));\n      }\n\n      if (branch_id != '*') {\n        url = url + ('/branches/' + branch_id);\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'DELETE',\n        contentType: 'application/json',\n        success: function success(response) {\n          console.log(\"Branch deleted successfully\");\n          return response;\n        },\n        error: function error(_error5) {\n          console.error(\"Error deleting branch:\", _error5);\n          throw _error5.responseJSON || _error5;\n        }\n      });\n    }\n  });\n});","define('banker/services/dashboard', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n    bankId: localStorage.getItem('bankId'),\n    userId: Ember.computed(function () {\n      var value = '; ' + document.cookie;\n      var parts = value.split('; ' + 'sessionData' + '=');\n      if (parts.length === 2) {\n        var cookieData = decodeURIComponent(parts.pop().split(';').shift());\n        var sessionData = JSON.parse(cookieData);\n        return sessionData.user_id;\n      }\n    }),\n\n    fetchCustomerDashboard: function fetchCustomerDashboard() {\n      var url = 'http://localhost:8080/banker/api/v1/banks/' + this.get('bankId') + '/users/' + this.get('userId') + '/dashboard';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching dashboard:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching dashboard.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchAdminDashboard: function fetchAdminDashboard() {\n      var url = 'http://localhost:8080/banker/api/v1/banks/' + this.get('bankId') + '/users/' + this.get('userId') + '/dashboard';\n\n      return Ember.$.ajax({\n        url: url,\n        method: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching dashboard:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching dashboard.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    fetchManagerDashboard: function fetchManagerDashboard() {\n      var url = 'http://localhost:8080/banker/api/v1/banks/' + this.get('bankId') + '/users/' + this.get('userId') + '/dashboard';\n\n      return Ember.$.ajax({\n        url: url,\n        method: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error3) {\n          console.error(\"Error fetching dashboard:\", _error3);\n          if (_error3.responseJSON) {\n            alert('Error: ' + _error3.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching dashboard.\");\n          }\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    }\n  });\n});","define('banker/services/emis', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Service.extend({\n        ajax: Ember.inject.service(),\n\n        fetchEmis: function fetchEmis(loanId) {\n            var bankId = localStorage.getItem('bankId');\n            var url = 'http://localhost:8080/banker/api/v1/';\n\n            if (bankId != \"*\") {\n                url = url + ('banks/' + bankId);\n            }\n\n            if (loanId != '*') {\n                url = url + ('/loans/' + loanId);\n            }\n            url = url + '/emis';\n            return Ember.$.ajax({\n                url: url,\n                type: 'GET',\n                contentType: 'application/json',\n                credentials: 'include',\n                xhrFields: {\n                    withCredentials: true\n                },\n                success: function success(response) {\n                    return response;\n                },\n                error: function error(_error) {\n                    console.error(\"Error fetching EMIs:\", _error);\n                    if (_error.responseJSON) {\n                        alert('Error: ' + _error.responseJSON.message);\n                    } else {\n                        alert(\"An error occurred while fetching EMIs.\");\n                    }\n                    throw _error.responseJSON || _error;\n                }\n            });\n        },\n        makePayment: function makePayment(emiId) {\n            var bankId = localStorage.getItem('bankId');\n            var loanId = localStorage.getItem('loanId');\n            var url = 'http://localhost:8080/banker/api/v1/';\n\n            if (bankId != \"*\") {\n                url = url + ('banks/' + bankId);\n            }\n\n            if (loanId != '*') {\n                url = url + ('/loans/' + loanId + '/emis');\n            }\n            return Ember.$.ajax({\n                url: url,\n                type: 'POST',\n                contentType: 'application/json',\n                credentials: 'include',\n                xhrFields: {\n                    withCredentials: true\n                },\n                success: function success(response) {\n                    return response;\n                },\n                error: function error(_error2) {\n                    console.error(\"Error making payment:\", _error2);\n                    if (_error2.responseJSON) {\n                        alert('Error: ' + _error2.responseJSON.message);\n                    } else {\n                        alert(\"An error occurred while making the payment.\");\n                    }\n                    throw _error2.responseJSON || _error2;\n                }\n            });\n        }\n    });\n});","define('banker/services/loans', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n\n    ajax: Ember.inject.service(),\n\n    fetchLoans: function fetchLoans(accNo, bankid) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem(\"bankId\");\n      var branchId = localStorage.getItem(\"branchId\");\n      var accno = localStorage.getItem('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + '/loans';\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"loans\");\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching loans:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching loans.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchLoan: function fetchLoan(accNo, bankid) {\n      var bankId = localStorage.getItem(\"bankId\");\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var branchId = localStorage.getItem(\"branchId\");\n      var accno = localStorage.getItem('accNo');\n      var loanId = localStorage.getItem('loanId');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (loanId != \"*\") {\n        url = url + ('/loans/' + loanId);\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching loan:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching loan.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    createLoan: function createLoan(Details) {\n      var loan_type = Details.loan_type,\n          loan_status = Details.loan_status,\n          loan_duration = Details.loan_duration,\n          loan_amount = Details.loan_amount;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem(\"bankId\");\n      var branchid = localStorage.getItem(\"branchId\");\n      var accno = Details.accNo;\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchid != '*') {\n        url = url + ('/branches/' + branchid);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + '/loans';\n      console.log(\"insert...\");\n      return Ember.$.ajax({\n        url: url,\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n\n          loan_type: loan_type,\n          loan_amount: loan_amount,\n          loan_duration: loan_duration,\n          loan_status: loan_status\n\n        }),\n\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error3) {\n          console.log(\"insert...err\");\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    },\n    updateLoan: function updateLoan(loanDetails) {\n      var loan_type = loanDetails.loan_type,\n          loan_status = loanDetails.loan_status,\n          loan_duration = loanDetails.loan_duration,\n          loan_amount = loanDetails.loan_amount,\n          loan_id = loanDetails.loan_id;\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem(\"bankId\");\n      var branchid = localStorage.getItem(\"branchId\");\n      var accno = localStorage.getItem('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchid != '*') {\n        url = url + ('/branches/' + branchid);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (loan_id != \"*\") {\n\n        url = url + ('/loans/' + loan_id);\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'PUT',\n        contentType: 'application/json',\n\n        data: JSON.stringify({\n\n          loan_type: loan_type,\n          loan_amount: loan_amount,\n          loan_duration: loan_duration,\n          loan_status: loan_status\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error4) {\n          throw _error4.responseJSON || _error4;\n        }\n      });\n    }\n  });\n});","define('banker/services/notify', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    message: '',\n    type: '',\n    isNotificationVisible: false,\n\n    showNotification: function showNotification(message, type) {\n      this.set('message', message);\n      this.set('type', type);\n      this.set('isNotificationVisible', true);\n\n      Ember.run.later(this, function () {\n        this.clearNotification();\n      }, 2000);\n    },\n    clearNotification: function clearNotification() {\n      this.set('isNotificationVisible', false);\n      this.set('message', '');\n      this.set('type', '');\n    }\n  });\n});","define('banker/services/session', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n\n    login: function login(credentials) {\n      var bankId = localStorage.getItem('bankId');\n      var username = credentials.username,\n          password = credentials.password,\n          isSuperAdmin = credentials.isSuperAdmin;\n\n      // console.log(credentials);\n\n      var url = 'http://localhost:8080/banker/api/v1/auth?action=login';\n      if (isSuperAdmin) {\n        url = url + '&isSuperAdmin=true';\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'POST',\n        credentials: 'include',\n        contentType: 'application/json',\n        data: JSON.stringify({ username: username, password: password, bank_id: bankId }),\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response, txtStatus, xhr) {\n          console.log(xhr);\n          return response;\n        },\n        error: function error(_error) {\n          alert(\"Invalid credentials!!\");\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    signup: function signup(credentials) {\n      var username = credentials.username,\n          password = credentials.password,\n          selectedRole = credentials.selectedRole,\n          name = credentials.name,\n          dob = credentials.dob,\n          pno = credentials.pno,\n          addr = credentials.addr;\n\n      // console.log(credentials+'signup');\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/auth?action=register',\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          username: username,\n          password: password,\n          user_role: selectedRole,\n          full_name: name,\n          date_of_birth: dob,\n          user_phonenumber: pno,\n          user_address: addr\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    logout: function logout() {\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/auth?action=logout',\n        type: 'GET',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          document.cookie = document.cookie + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n          return response;\n        },\n        error: function error(_error3) {\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    }\n  });\n});","define('banker/services/transactions', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n\n    ajax: Ember.inject.service(),\n\n    fetchTransactions: function fetchTransactions(accNo, bankid) {\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem('bankId');\n      var branchId = localStorage.getItem(\"branchId\");\n      var accno = localStorage.getItem('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + '/transactions';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"transactions\");\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching transactions:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching transactions.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchTransaction: function fetchTransaction() {\n      var transactionId = localStorage.getItem(\"transactionId\");\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = localStorage.getItem('bankId');\n      var branchId = localStorage.getItem(\"branchId\");\n      var accno = localStorage.getItem('accNo');\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      if (transactionId != \"*\") {\n\n        url = url + ('/transactions/' + transactionId);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"transactions\");\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching transactions:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching transactions.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    createTransaction: function createTransaction(details) {\n\n      var url = 'http://localhost:8080/banker/api/v1/';\n      var bankId = details.bankId;\n      var branchId = details.branchId;\n      var accno = details.accNo;\n      if (bankId != \"*\") {\n        url = url + ('banks/' + bankId);\n      }\n      if (branchId != '*') {\n        url = url + ('/branches/' + branchId);\n      }\n      if (accno != \"*\") {\n        url = url + ('/accounts/' + accno);\n      }\n      url = url + '/transactions';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          transaction_type: details.transaction_type,\n          transaction_amount: details.transaction_amount,\n          acc_number: details.accNo\n        }),\n        success: function success(response) {\n          console.log(\"transactions\");\n          return response;\n        },\n        error: function error(_error3) {\n          console.log(\"insert...err\");\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    }\n  });\n});","define('banker/services/users', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n    bankId: localStorage.getItem('bankId'),\n    fetchUsers: function fetchUsers(bankid) {\n      var bankId = this.get('bankId');\n      var userId = localStorage.getItem('userId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + '/users';\n      if (userId != \"*\") {\n        url = url + ('/' + userId);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching users:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching users.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    fetchManagers: function fetchManagers() {\n      var bankId = this.get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + '/users?filter_manager=true';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          console.error(\"Error fetching managers:\", _error2);\n          if (_error2.responseJSON) {\n            alert('Error: ' + _error2.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching managers.\");\n          }\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    fetchAdmins: function fetchAdmins() {\n      var bankId = this.get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n\n      url = url + '/users?filter_admin=true';\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error3) {\n          console.error(\"Error fetching admins:\", _error3);\n          if (_error3.responseJSON) {\n            alert('Error: ' + _error3.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching admins.\");\n          }\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    },\n    deleteUser: function deleteUser(userId) {\n      var bankId = this.get('bankId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n      if (userId != \"*\") {\n        url = url + ('/users/' + userId);\n      }\n\n      return Ember.$.ajax({\n        url: url,\n        type: 'DELETE',\n        contentType: 'application/json',\n        success: function success(response) {\n          console.log(\"user deleted successfully\");\n          return response;\n        },\n        error: function error(_error4) {\n          console.error(\"Error deleting user:\", _error4);\n          throw _error4.responseJSON || _error4;\n        }\n      });\n    },\n    updateUser: function updateUser(userData) {\n      var userId = localStorage.getItem('userId');\n      var url = 'http://localhost:8080/banker/api/v1';\n      var bankId = this.get('bankId');\n      if (bankId != \"*\") {\n        url = url + ('/banks/' + bankId);\n      }\n      if (userId != \"*\") {\n        url = url + ('/users/' + userId);\n      }\n      return Ember.$.ajax({\n        url: url,\n        type: 'PUT',\n        contentType: 'application/json',\n        data: JSON.stringify({\n\n          user_status: userData.user_status\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error5) {\n          throw _error5.responseJSON || _error5;\n        }\n      });\n    }\n  });\n});","define(\"banker/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"nxILoI70\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isAuthRoute\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\n    \\\"],[1,[33,[\\\"nav-bar\\\"],null,[[\\\"logout\\\",\\\"toAccounts\\\",\\\"todashboard\\\",\\\"toBranch\\\",\\\"toBranches\\\",\\\"toTransactions\\\",\\\"toLoans\\\",\\\"toBank\\\",\\\"toBanks\\\",\\\"toUsers\\\"],[[33,[\\\"action\\\"],[[28,[null]],\\\"logout\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toAccounts\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"todashboard\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranches\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toTransactions\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toLoans\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBank\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toBanks\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toUsers\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/application.hbs\" } });\n});","define(\"banker/templates/banks\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"BM7BMKZk\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks.hbs\" } });\n});","define(\"banker/templates/banks/bank\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xZPdNM0D\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"fK6faTLW\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VALQHMq6\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"s5FOMDG5\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"account-input\\\"],null,[[\\\"isEdit\\\",\\\"accNo\\\",\\\"acc_type\\\",\\\"acc_balance\\\",\\\"acc_status\\\",\\\"username\\\",\\\"fullname\\\",\\\"branch_name\\\",\\\"branch_Id\\\",\\\"bankId\\\",\\\"userId\\\",\\\"toAccount\\\"],[true,[28,[null,\\\"accNo\\\"]],[28,[null,\\\"acc_type\\\"]],[28,[null,\\\"acc_balance\\\"]],[28,[null,\\\"acc_status\\\"]],[28,[null,\\\"username\\\"]],[28,[null,\\\"fullname\\\"]],[28,[null,\\\"branch_name\\\"]],[28,[null,\\\"branch_Id\\\"]],[28,[null,\\\"bankId\\\"]],[28,[null,\\\"userId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toAccount\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"mtE1scgJ\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-account\\\"],null,[[\\\"bankId\\\",\\\"branchId\\\",\\\"acc\\\",\\\"accNo\\\",\\\"toLoans\\\",\\\"toTransactions\\\"],[[28,[null,\\\"bankId\\\"]],[28,[\\\"branchId\\\"]],[28,[null,\\\"acc\\\"]],[28,[null,\\\"accNo\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toLoans\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toTransactions\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6GvgTOdB\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"shXIbO3f\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loans\\\"],null,[[\\\"accNo\\\",\\\"bankId\\\",\\\"loans\\\",\\\"branchId\\\",\\\"loanId\\\",\\\"viewLoan\\\",\\\"toaddNewLoan\\\",\\\"toeditLoan\\\"],[[28,[\\\"accNo\\\"]],[28,[null,\\\"bankId\\\"]],[28,[null,\\\"loans\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"loanId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"viewloan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewLoan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"editLoan\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JPkaz3Fx\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"CazRpE6K\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"isEdit\\\",\\\"loan_id\\\",\\\"loan_type\\\",\\\"loan_amount\\\",\\\"loan_interest\\\",\\\"loan_duration\\\",\\\"loan_status\\\",\\\"loan_availed_date\\\",\\\"accNo\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"isDirect\\\",\\\"toLoan\\\"],[true,[28,[null,\\\"loan_id\\\"]],[28,[null,\\\"loan_type\\\"]],[28,[null,\\\"loan_amount\\\"]],[28,[null,\\\"loan_interest\\\"]],[28,[null,\\\"loan_duration\\\"]],[28,[null,\\\"loan_status\\\"]],[28,[null,\\\"loan_availed_date\\\"]],[28,[null,\\\"accNo\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],false,[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan/emi\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FsALyvBv\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-emi-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewEmi\\\"]],[13],[0,\\\"Make Payment\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"emi-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"EMI Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"To Be Paid Date\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actual Paid Date\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"generatedEmis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"emiNumber\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"transactionId\\\"]],false],[0,\\\"\\\\n           \\\"],[11,\\\"div\\\",[]],[16,\\\"class\\\",[34,[\\\"status-box \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"to-be-paid\\\",\\\"paid\\\"],null]]]],[13],[1,[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"To Be Paid\\\",\\\"Paid\\\"],null],false],[14],[0,\\\"\\\\n         \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"toBePaidDate\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"actualPaidDate\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"emi\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan/emi.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/loan/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9YlKNVZ5\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loan\\\"],null,[[\\\"bankId\\\",\\\"branchId\\\",\\\"loan\\\",\\\"toEmis\\\"],[[28,[null,\\\"bankId\\\"]],[28,[\\\"branchId\\\"]],[28,[null,\\\"loan\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toEmis\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/loan/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/loans/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3GL06aX+\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"accNo\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"isDirect\\\",\\\"toLoan\\\"],[[28,[null,\\\"accNo\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],false,[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/loans/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"H1qcN2hg\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"RvlXeyVa\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-transactions\\\"],null,[[\\\"accNo\\\",\\\"bankId\\\",\\\"transactions\\\",\\\"branchId\\\",\\\"transactionId\\\",\\\"viewTransaction\\\",\\\"toaddNewTransaction\\\"],[[28,[\\\"accNo\\\"]],[28,[null,\\\"bankId\\\"]],[28,[null,\\\"transactions\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"transactionId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"viewTransaction\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewTransaction\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"X/O9WhnA\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"transaction-input\\\"],null,[[\\\"accNo\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"isDirect\\\",\\\"transaction_type\\\",\\\"transaction_amount\\\",\\\"toTransaction\\\"],[[28,[null,\\\"accNo\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],false,[28,[null,\\\"transaction_type\\\"]],[28,[null,\\\"transaction_amount\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toTransaction\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/account/transactions/transaction\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"raFJWroW\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-transaction\\\"],null,[[\\\"bankId\\\",\\\"branchId\\\",\\\"transaction\\\"],[[28,[null,\\\"bankId\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"transaction\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/account/transactions/transaction.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"OtnXICsj\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-accounts\\\"],null,[[\\\"bankId\\\",\\\"accounts\\\",\\\"branchId\\\",\\\"viewaccount\\\",\\\"toaddNewAccount\\\",\\\"toeditAccount\\\"],[[28,[null,\\\"bankId\\\"]],[28,[null,\\\"accounts\\\"]],[28,[null,\\\"branchId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"viewaccount\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewAccount\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"editAccount\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/accounts/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wVRUmXlh\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"account-input\\\"],null,[[\\\"bankId\\\",\\\"toAccount\\\"],[[28,[null,\\\"bankId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toAccount\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/accounts/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cf/KS/cW\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/branch\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"D9WRcHTI\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/branch.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/branch/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Fj9VYQfC\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"branch-input\\\"],null,[[\\\"isEdit\\\",\\\"address\\\",\\\"name\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"branch_number\\\",\\\"manager_id\\\",\\\"manager_name\\\",\\\"toBranch\\\"],[true,[28,[null,\\\"branch_address\\\"]],[28,[null,\\\"branch_name\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],[28,[null,\\\"branch_number\\\"]],[28,[null,\\\"manager_id\\\"]],[28,[null,\\\"manager_name\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/branch/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/branch/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"/9OyCk2K\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Branch Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch ID:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_number\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_address\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Manager Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"viewAccounts\\\",[28,[\\\"branch\\\"]]]],[13],[0,\\\"View Accounts\\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"MANAGER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"delete\\\",[28,[\\\"branch\\\"]]]],[13],[0,\\\"delete Branch\\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/branch/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"MlD+lEFc\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branches-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-branch-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewBranch\\\"]],[13],[0,\\\"New Branch\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"branches-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Branch ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Branch Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Branch Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewBranch\\\",[28,[\\\"branch\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"branch\\\",\\\"branch_id\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"branch\\\",\\\"branch_number\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editBranch\\\",[28,[\\\"branch\\\"]]]],[13],[0,\\\"Edit\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"deleteBranch\\\",[28,[\\\"branch\\\"]]]],[13],[0,\\\"Delete\\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/branches/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Nbyrqh5x\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"branch-input\\\"],null,[[\\\"bankId\\\",\\\"toBranch\\\"],[[28,[null,\\\"bankId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/branches/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"70kIfiQY\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Edit Bank\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bankId\\\"],[13],[0,\\\"Bank ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"BankId\\\"],[16,\\\"value\\\",[26,[\\\"bankId\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branchId\\\"],[13],[0,\\\"Branch ID\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branchId\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branchId\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_id\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_id\\\"]],[28,[\\\"bank\\\",\\\"main_branch_id\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Update Bank\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"EeF4B/uU\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Bank Details\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"banks\\\"]]],null,{\\\"statements\\\":[[0,\\\"     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Id:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"bank_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Code:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"bank_code\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Bank Admin:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"admin_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Main Branch ID:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"bank\\\",\\\"main_branch_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Main Branch Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Main Branch Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"branch_address\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"ADMIN\\\"],null]],null,{\\\"statements\\\":[[0,\\\"    \\\\n    \\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"updateMainBranch\\\",[28,[\\\"bank\\\"]]]],[13],[0,\\\"Update Main Branch\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[\\\"bank\\\"]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xKCT9FUw\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wTjJa3bq\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loans\\\"],null,[[\\\"accNo\\\",\\\"bankId\\\",\\\"loans\\\",\\\"branchId\\\",\\\"loanId\\\",\\\"viewLoan\\\",\\\"toaddNewLoan\\\",\\\"toeditLoan\\\"],[[28,[\\\"accNo\\\"]],[28,[null,\\\"bankId\\\"]],[28,[null,\\\"loans\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"loanId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"viewloan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewLoan\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"editLoan\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6v9/r6Fn\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VLHqbdEf\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"isEdit\\\",\\\"loan_id\\\",\\\"loan_type\\\",\\\"loan_amount\\\",\\\"loan_interest\\\",\\\"loan_duration\\\",\\\"loan_status\\\",\\\"loan_availed_date\\\",\\\"accNo\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"toLoan\\\"],[true,[28,[null,\\\"loan_id\\\"]],[28,[null,\\\"loan_type\\\"]],[28,[null,\\\"loan_amount\\\"]],[28,[null,\\\"loan_interest\\\"]],[28,[null,\\\"loan_duration\\\"]],[28,[null,\\\"loan_status\\\"]],[28,[null,\\\"loan_availed_date\\\"]],[28,[null,\\\"accNo\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan/emi\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"nfWE8SNt\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-emi-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewEmi\\\"]],[13],[0,\\\"Make Payment\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"emi-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"EMI Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"To Be Paid Date\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actual Paid Date\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"generatedEmis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"emiNumber\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"transactionId\\\"]],false],[0,\\\"\\\\n           \\\"],[11,\\\"div\\\",[]],[16,\\\"class\\\",[34,[\\\"status-box \\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"to-be-paid\\\",\\\"paid\\\"],null]]]],[13],[1,[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"emi\\\",\\\"transactionId\\\"]],\\\"-\\\"],null],\\\"To Be Paid\\\",\\\"Paid\\\"],null],false],[14],[0,\\\"\\\\n         \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"toBePaidDate\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"actualPaidDate\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"emi\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan/emi.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/loan/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"zPaLWao/\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-loan\\\"],null,[[\\\"bankId\\\",\\\"branchId\\\",\\\"loan\\\",\\\"toEmis\\\"],[[28,[null,\\\"bankId\\\"]],[28,[\\\"branchId\\\"]],[28,[null,\\\"loan\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toEmis\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/loan/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/loans/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"kRoVUad9\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"loan-input\\\"],null,[[\\\"accNo\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"isDirect\\\",\\\"toLoan\\\"],[[28,[null,\\\"accNo\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],true,[33,[\\\"action\\\"],[[28,[null]],\\\"toLoan\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/loans/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lG1GKROB\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"5KlPlxxu\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"view-transactions\\\"],null,[[\\\"accNo\\\",\\\"bankId\\\",\\\"transactions\\\",\\\"branchId\\\",\\\"transactionId\\\",\\\"viewTransaction\\\",\\\"toaddNewTransaction\\\"],[[28,[null,\\\"accNo\\\"]],[28,[null,\\\"bankId\\\"]],[28,[null,\\\"transactions\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"transactionId\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"viewTransaction\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"addNewTransaction\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"GMOrPfW0\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"transaction-input\\\"],null,[[\\\"accNo\\\",\\\"branchId\\\",\\\"bankId\\\",\\\"isDirect\\\",\\\"toTransaction\\\"],[[28,[null,\\\"accNo\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"bankId\\\"]],true,[33,[\\\"action\\\"],[[28,[null]],\\\"toTransaction\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions/new.hbs\" } });\n});","define(\"banker/templates/banks/bank/transactions/transaction\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"gYHi6pv3\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"view-transaction\\\"],null,[[\\\"bankId\\\",\\\"branchId\\\",\\\"transaction\\\"],[[28,[null,\\\"bankId\\\"]],[28,[null,\\\"branchId\\\"]],[28,[null,\\\"transaction\\\"]]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/transactions/transaction.hbs\" } });\n});","define(\"banker/templates/banks/bank/users\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"j0SLfskV\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rWKEw7A8\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"users-list\\\"],[13],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"users-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"User ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Full Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Phone Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"users\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_id\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"fullname\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_phonenumber\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"Edit\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"deleteUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"Delete\\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"user\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/index.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/user\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"poyFvRzi\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/user.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/user/dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"KrlRS6vi\", \"block\": \"{\\\"statements\\\":[[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"ADMIN\\\"],null]],null,{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"   \\\"],[1,[33,[\\\"admin-dashboard\\\"],null,[[\\\"branchName\\\",\\\"accountCount\\\",\\\"loansAvailed\\\",\\\"totalDeposits\\\"],[[28,[\\\"branch\\\",\\\"branchName\\\"]],[28,[\\\"branch\\\",\\\"accountCount\\\"]],[28,[\\\"branch\\\",\\\"loansAvailed\\\"]],[28,[\\\"branch\\\",\\\"totalDeposits\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"MANAGER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[26,[\\\"manager-dashboard\\\"]],false],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[26,[\\\"customer-dashboard\\\"]],false],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/user/dashboard.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/user/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"2malYICU\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Edit User\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userId\\\"],[13],[0,\\\"User ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"userId\\\"],[16,\\\"value\\\",[26,[\\\"userId\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"fullname\\\"],[13],[0,\\\"Full Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"fullname\\\"],[16,\\\"value\\\",[26,[\\\"fullname\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"fullname\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"username\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"user_role\\\"],[13],[0,\\\"User Role\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"user_role\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Role\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"roles\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"role\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],[28,[\\\"user_role\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"role\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"role\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"user_phonenumber\\\"],[13],[0,\\\"Phone Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"user_phonenumber\\\"],[16,\\\"value\\\",[26,[\\\"user_phonenumber\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"user_phonenumber\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"user_address\\\"],[13],[0,\\\"Address\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"textarea\\\",[]],[15,\\\"id\\\",\\\"user_address\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"user_address\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[1,[26,[\\\"user_address\\\"]],false],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"user_status\\\"],[13],[0,\\\"User Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"user_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"user_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"user_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Update User\\\"],[14],[0,\\\"\\\\n      \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"banks.bank.users\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/user/edit.hbs\" } });\n});","define(\"banker/templates/banks/bank/users/user/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1fcac4WX\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"User Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"User ID:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"user_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Full Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"fullname\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Username:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Phone Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"user_phonenumber\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"user_address\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Role:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"user_role\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"User\\\",\\\"user_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n   \\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/bank/users/user/index.hbs\" } });\n});","define(\"banker/templates/banks/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ZaU9Mox4\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"banks-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-bank-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewBank\\\"]],[13],[0,\\\"New Bank\\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"banks-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Bank ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Bank Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Bank Code\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Admin Name\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"banks\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewBank\\\",[28,[\\\"bank\\\"]]]],[13],[0,\\\" \\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"bank_id\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"bank_code\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"bank\\\",\\\"admin_name\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"bank\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/index.hbs\" } });\n});","define(\"banker/templates/banks/new\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"meRrCTXy\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"bank-form\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Create New Bank\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n   \\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bank_name\\\"],[13],[0,\\\"Bank Name\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"bank_name\\\"],[16,\\\"value\\\",[26,[\\\"bank_name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"bank_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bank_code\\\"],[13],[0,\\\"Bank Code\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"bank_code\\\"],[16,\\\"value\\\",[26,[\\\"bank_code\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"bank_code\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n   \\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"admin_name\\\"],[13],[0,\\\"Admin Name\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"admin_name\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"admin_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Admin\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"admins\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"admin\\\",\\\"admin_id\\\"]],null],[13],[1,[28,[\\\"admin\\\",\\\"admin_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"admin\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n \\\\n\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Create Bank\\\"],[14],[0,\\\"\\\\n   \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"banks\\\"],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/banks/new.hbs\" } });\n});","define(\"banker/templates/components/account-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"DsfhaoVx\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-form\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Account\\\",\\\"Create New Account\\\"],null],false],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accNo\\\"],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"accNo\\\"],[16,\\\"value\\\",[26,[\\\"accNo\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"accNo\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_type\\\"],[13],[0,\\\"Account Type\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"acc_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_status\\\"],[13],[0,\\\"Account Status\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"acc_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"username\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"username\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"   \\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branch_name\\\"],[13],[0,\\\"Branch Name\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branch_name\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branch_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select branch\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branchNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_name\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_name\\\"]],[28,[\\\"branch_name\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Account\\\",\\\"Create Account\\\"],null],false],[14],[0,\\\"\\\\n   \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"banks.bank.accounts\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/account-input.hbs\" } });\n});","define(\"banker/templates/components/admin-dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tRVvGpsA\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-card\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[15,\\\"class\\\",\\\"branch-name\\\"],[13],[1,[26,[\\\"branchName\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Accounts:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[26,[\\\"accountCount\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loans:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[26,[\\\"loansAvailed\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Total Deposits:\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs. \\\"],[1,[26,[\\\"totalDeposits\\\"]],false],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/admin-dashboard.hbs\" } });\n});","define(\"banker/templates/components/auth-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lMu8ikKD\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Register\\\",\\\"Login\\\"],null],false],[14],[0,\\\"\\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"if\\\"],[[28,[\\\"isSuper\\\"]],\\\"superAdminForm\\\",\\\"submitForm\\\"],null]],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"name\\\"],[13],[0,\\\"Name\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"name\\\"],[15,\\\"type\\\",\\\"text\\\"],[16,\\\"value\\\",[26,[\\\"name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your full name\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"dob\\\"],[13],[0,\\\"Date of Birth\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"dob\\\"],[15,\\\"type\\\",\\\"date\\\"],[16,\\\"value\\\",[26,[\\\"dob\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"dob\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"pno\\\"],[13],[0,\\\"Phone Number\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"pno\\\"],[15,\\\"type\\\",\\\"number\\\"],[16,\\\"value\\\",[26,[\\\"pno\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your phone number\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"pno\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"addr\\\"],[13],[0,\\\"Address\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"textarea\\\",[]],[15,\\\"id\\\",\\\"addr\\\"],[16,\\\"value\\\",[26,[\\\"addr\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your address\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"addr\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"username\\\"],[15,\\\"type\\\",\\\"text\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your username\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"username\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"password\\\"],[13],[0,\\\"Password\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"password\\\"],[15,\\\"type\\\",\\\"password\\\"],[16,\\\"value\\\",[26,[\\\"password\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your password\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"password\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"confirmPassword\\\"],[13],[0,\\\"Confirm Password\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"confirmPassword\\\"],[15,\\\"type\\\",\\\"password\\\"],[16,\\\"value\\\",[26,[\\\"confirmPassword\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Confirm your password\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"confirmPassword\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"role\\\"],[13],[0,\\\"Role\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"role\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedRole\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[15,\\\"class\\\",\\\"form-control\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[15,\\\"disabled\\\",\\\"\\\"],[15,\\\"selected\\\",\\\"\\\"],[13],[0,\\\"Select a role\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"manager\\\"],[13],[0,\\\"Manager\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"customer\\\"],[13],[0,\\\"Customer\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"admin\\\"],[13],[0,\\\"Admin\\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[28,[\\\"isSuper\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"bank_name\\\"],[13],[0,\\\"Bank Name\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"bank_name\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"bank_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n              \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select bank\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"bankNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"bank\\\",\\\"bank_name\\\"]],null],[13],[1,[28,[\\\"bank\\\",\\\"bank_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"bank\\\"]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Register\\\",\\\"Login\\\"],null],false],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isSuper\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"switch\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Switch to Login\\\",\\\"Switch to Register\\\"],null],false],[0,\\\"\\\\n        \\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/auth-form.hbs\" } });\n});","define(\"banker/templates/components/branch-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"mT9/9tow\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Branch\\\",\\\"Create New Branch\\\"],null],false],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branchId\\\"],[13],[0,\\\"Branch ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"branchId\\\"],[16,\\\"value\\\",[26,[\\\"branchId\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branchId\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"name\\\"],[13],[0,\\\"Branch Name\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"name\\\"],[16,\\\"value\\\",[26,[\\\"name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n  \\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"address\\\"],[13],[0,\\\"Branch Address\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"address\\\"],[16,\\\"value\\\",[26,[\\\"address\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"address\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branch_number\\\"],[13],[0,\\\"Branch Number\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"branch_number\\\"],[16,\\\"value\\\",[26,[\\\"branch_number\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branch_number\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"manager_id\\\"],[13],[0,\\\"Manager Name\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"manager_id\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"manager_id\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[26,[\\\"manager_id\\\"]],null],[13],[1,[26,[\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Manager\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]}],[6,[\\\"each\\\"],[[28,[\\\"availableManagers\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"manager\\\",\\\"manager_id\\\"]],null],[13],[1,[28,[\\\"manager\\\",\\\"manager_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"manager\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n\\\\n  \\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Branch\\\",\\\"Create Branch\\\"],null],false],[14],[0,\\\"\\\\n      \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"banks.bank.branches\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/branch-input.hbs\" } });\n});","define(\"banker/templates/components/customer-dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"LrT1Lpx9\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-container\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-section section-1\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Loans Overview\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accountList\\\"]]],null,{\\\"statements\\\":[[6,[\\\"if\\\"],[[28,[\\\"item\\\",\\\"loan_details\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card\\\"],[13],[0,\\\"\\\\n                        \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Loan ID: \\\"],[1,[28,[\\\"item\\\",\\\"loan_details\\\",\\\"loan_id\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loan Type:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"item\\\",\\\"loan_details\\\",\\\"loan_type\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loan Amount:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"item\\\",\\\"loan_details\\\",\\\"loan_amount\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loan Duration:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"item\\\",\\\"loan_details\\\",\\\"loan_duration\\\"]],false],[0,\\\" months\\\"],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Availed Date:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"item\\\",\\\"loan_details\\\",\\\"loan_availed_date\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"showEmiModal\\\",[28,[\\\"item\\\",\\\"loan_details\\\",\\\"loan_id\\\"]]]],[13],[0,\\\"Emi Schedule\\\"],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[\\\"item\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"right-container\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-section section-2\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Transactions Overview\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accountList\\\"]]],null,{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"item\\\",\\\"transactions\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Transaction ID: \\\"],[1,[28,[\\\"transaction\\\",\\\"transaction_id\\\"]],false],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Type:\\\"],[14],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_type\\\"]],false],[14],[0,\\\"\\\\n                            \\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Date:\\\"],[14],[0,\\\"\\\\n                                \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_datetime\\\"]],false],[14],[0,\\\"\\\\n                            \\\"],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"transaction\\\"]},null]],\\\"locals\\\":[\\\"item\\\"]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"dashboard-section section-3\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Accounts Overview\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card-container\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accountList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card\\\"],[13],[0,\\\"\\\\n                        \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Account Number: \\\"],[1,[28,[\\\"item\\\",\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Balance:\\\"],[14],[0,\\\"\\\\n                            \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"item\\\",\\\"account\\\",\\\"acc_balance\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[14],[0,\\\"\\\\n                    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"item\\\"]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-modal\\\"],[15,\\\"id\\\",\\\"emiModal\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"emi-modal-content\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"close-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"closeEmiModal\\\"]],[13],[0,\\\"×\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"EMI Schedule for Loan ID: Rs.\\\"],[1,[26,[\\\"selectedLoanId\\\"]],false],[14],[11,\\\"span\\\",[]],[13],[0,\\\"EMI Amount: Rs.\\\"],[1,[28,[\\\"emi\\\",\\\"emiAmount\\\"]],false],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"emi-table\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n                \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n                    \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"EMI Number\\\"],[14],[0,\\\"\\\\n                    \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"To-Be Paid Date\\\"],[14],[0,\\\"\\\\n                \\\"],[14],[0,\\\"\\\\n            \\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"emiSchedule\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n                        \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"emi\\\",\\\"emiNumber\\\"]],false],[14],[0,\\\"\\\\n                        \\\"],[11,\\\"td\\\",[]],[13],[1,[33,[\\\"format-date\\\"],[[28,[\\\"emi\\\",\\\"toBePaidDate\\\"]]],null],false],[14],[0,\\\"\\\\n                    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"emi\\\"]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/customer-dashboard.hbs\" } });\n});","define(\"banker/templates/components/loan-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"kCFl0gDx\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Loan\\\",\\\"Create New Loan\\\"],null],false],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_id\\\"],[13],[0,\\\"Loan ID\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"loan_id\\\"],[16,\\\"value\\\",[26,[\\\"loan_id\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_id\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_type\\\"],[13],[0,\\\"Loan Type\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"loan_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accNo\\\"],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accNo\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"accNo\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Account Number\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"account\\\",\\\"acc_no\\\"]],null],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_amount\\\"],[13],[0,\\\"Loan Amount\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"number\\\"],[15,\\\"id\\\",\\\"loan_amount\\\"],[16,\\\"value\\\",[26,[\\\"loan_amount\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_amount\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_duration\\\"],[13],[0,\\\"Loan Duration\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_duration\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_duration\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select duration\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"durations\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"duration\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"duration\\\"]],[28,[\\\"loan_duration\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"duration\\\"]],false],[0,\\\" Months\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"duration\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_status\\\"],[13],[0,\\\"Loan Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"loan_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loan_status\\\"],[13],[0,\\\"Loan Status\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loan_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"loan_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredStatuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"loan_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\\n\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Loan\\\",\\\"Create Loan\\\"],null],false],[14],[0,\\\"\\\\n   \\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[6,[\\\"link-to\\\"],[\\\"banks.bank.loans\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[6,[\\\"link-to\\\"],[\\\"banks.bank.accounts.account.loans\\\",[28,[\\\"bankId\\\"]],[28,[\\\"accNo\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/loan-input.hbs\" } });\n});","define(\"banker/templates/components/manager-dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JtA9hxs9\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card-container\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card account-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[15,\\\"class\\\",\\\"card-title\\\"],[13],[0,\\\"Accounts\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Savings Accounts:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"savingsAccountCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Business Accounts:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"businessAccountCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card deposit-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[15,\\\"class\\\",\\\"card-title\\\"],[13],[0,\\\"Deposits\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Savings Deposits:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs. \\\"],[1,[28,[\\\"branch\\\",\\\"totalSavingsDeposits\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Business Deposits:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs. \\\"],[1,[28,[\\\"branch\\\",\\\"totalBusinessDeposits\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"card loan-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[15,\\\"class\\\",\\\"card-title\\\"],[13],[0,\\\"Loans\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Home Loans:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"homeLoanCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Education Loans:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"educationLoanCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Business Loans:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"branch\\\",\\\"businessLoanCount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/manager-dashboard.hbs\" } });\n});","define(\"banker/templates/components/nav-bar\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NljV+o8k\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"navbar\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"ul\\\",[]],[15,\\\"class\\\",\\\"nav-items\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"SUPERADMIN\\\"],null]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toUsers\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Users\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toBanks\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Banks\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"SUPERADMIN\\\"],null]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"todashboard\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"DashBoard\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toBank\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Bank\\\"],[14],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"ADMIN\\\"],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toBranches\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Branches\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"MANAGER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toBranch\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Branch\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toAccounts\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Accounts\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toTransactions\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Transactions\\\"],[14],[14],[0,\\\"\\\\n      \\\"],[11,\\\"li\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"toLoans\\\"]],[13],[11,\\\"a\\\",[]],[13],[0,\\\"Loans\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"SUPERADMIN\\\"],null]],null,{\\\"statements\\\":[[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"MANAGER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"branch-dropdown\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branch\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"setbranch\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"all\\\"],[13],[0,\\\"All Branches\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branches\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_name\\\"]],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"logout\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"logout\\\"]],[13],[0,\\\"Logout\\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/nav-bar.hbs\" } });\n});","define(\"banker/templates/components/notify-box\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"x9D31usa\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[16,\\\"class\\\",[34,[\\\"notification-top-right \\\",[26,[\\\"type\\\"]]]]],[13],[0,\\\"\\\\n  \\\"],[1,[26,[\\\"message\\\"]],false],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/notify-box.hbs\" } });\n});","define(\"banker/templates/components/transaction-input\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"4VI0eq6Y\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Make new Payment\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isEmi\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transaction_type\\\"],[13],[0,\\\"Transaction Type\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"transaction_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"transaction_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"transaction_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[28,[\\\"isEmi\\\"]]],null,{\\\"statements\\\":[[0,\\\"         \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transaction_type\\\"],[13],[0,\\\"Transaction Type\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"transaction_type\\\"],[16,\\\"value\\\",[26,[\\\"transaction_type\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transaction_amount\\\"],[13],[0,\\\"Transaction Amount\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"number\\\"],[15,\\\"id\\\",\\\"transaction_amount\\\"],[16,\\\"value\\\",[26,[\\\"transaction_amount\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"transaction_amount\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEmi\\\"]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isDirect\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accNo\\\"],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accNo\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"accNo\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Account Number\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"account\\\",\\\"acc_no\\\"]],null],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Proceed\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isEmi\\\"]]],null,{\\\"statements\\\":[[6,[\\\"link-to\\\"],[\\\"banks.bank.transactions\\\",[28,[\\\"bankId\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEmi\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\\n          \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n      \\\\n\\\"]],\\\"locals\\\":[]},null],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/transaction-input.hbs\" } });\n});","define(\"banker/templates/components/view-account\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9seAlH4V\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Account Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Type:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_type\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Balance:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_balance\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Branch Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"acc\\\",\\\"acc_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"acc\\\",\\\"acc_status\\\"]],\\\"active\\\"],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"loans\\\"]],[13],[0,\\\"View Loans\\\"],[14],[0,\\\"\\\\n         \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"transactions\\\"]],[13],[0,\\\"View Transactions\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-account.hbs\" } });\n});","define(\"banker/templates/components/view-accounts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uGuoC2K6\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"accounts-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-account-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewAccount\\\"]],[13],[0,\\\"New Account\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accountType\\\"],[13],[0,\\\"Type \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accountType\\\"],[16,\\\"value\\\",[26,[\\\"selectedAccountType\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedAccountType\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"savings\\\"],[13],[0,\\\"Savings\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"business\\\"],[13],[0,\\\"Business\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"accountStatus\\\"],[13],[0,\\\"Status \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"accountStatus\\\"],[16,\\\"value\\\",[26,[\\\"selectedAccountStatus\\\"]],null],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedAccountStatus\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"active\\\"],[13],[0,\\\"Active\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"inactive\\\"],[13],[0,\\\"Inactive\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedAccountType\\\"]]],null]],[[\\\"value\\\"],[\\\"\\\"]]],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedAccountStatus\\\"]]],null]],[[\\\"value\\\"],[\\\"\\\"]]],[13],[0,\\\"Clear\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"accounts-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Account No\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Type\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Balance\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Fullname\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"BranchName\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredAccounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewAccount\\\",[28,[\\\"account\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_type\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"account\\\",\\\"acc_balance\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_status\\\"]],false],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"user_fullname\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n              \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editAccount\\\",[28,[\\\"account\\\"]]]],[13],[0,\\\"Edit\\\"],[14],[0,\\\"\\\\n            \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-accounts.hbs\" } });\n});","define(\"banker/templates/components/view-loan\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"HoNd7bE/\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Loan Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loan Id:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loan Type:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_type\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Loan Amount:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"loan\\\",\\\"loan_amount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Interest:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_interest\\\"]],false],[0,\\\"%\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Duration:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_duration\\\"]],false],[0,\\\" Months\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Availed Date:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"loan_availed_date\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loan-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"loan\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"loan\\\",\\\"loan_status\\\"]],\\\"approved\\\"],null]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"view-wrap\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"toEmis\\\",[28,[\\\"loan\\\"]]]],[13],[0,\\\"View Emis\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-loan.hbs\" } });\n});","define(\"banker/templates/components/view-loans\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"BmAE2T5f\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"loans-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-loan-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewLoan\\\"]],[13],[0,\\\"New Loan\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loanType\\\"],[13],[0,\\\"Type\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loanType\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedLoanType\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"homeloan\\\"],[13],[0,\\\"Home Loan\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"businessloan\\\"],[13],[0,\\\"Business Loan\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"educationloan\\\"],[13],[0,\\\"Education Loan\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"loanStatus\\\"],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"loanStatus\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedLoanStatus\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"approved\\\"],[13],[0,\\\"Approved\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"rejected\\\"],[13],[0,\\\"Rejected\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"closed\\\"],[13],[0,\\\"Closed\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"clearFilters\\\"]],[13],[0,\\\"Clear\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"loans-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Loan Id\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Loan Type\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Loan Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Amount\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Availed Date\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Action\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredLoans\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewLoan\\\",[28,[\\\"loan\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_id\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_type\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_status\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"loan\\\",\\\"loan_amount\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"loan\\\",\\\"loan_availed_date\\\"]],false],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n              \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"view-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"editLoan\\\",[28,[\\\"loan\\\"]]]],[13],[0,\\\"Edit\\\"],[14],[0,\\\"\\\\n            \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"loan\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-loans.hbs\" } });\n});","define(\"banker/templates/components/view-transaction\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1BS0Z6Lz\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Transaction Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Transaction Id:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Transaction Type:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_type\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Transaction Amount:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"transaction\\\",\\\"transaction_amount\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Date and Time:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_datetime\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transaction-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Account Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"transaction\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n   \\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-transaction.hbs\" } });\n});","define(\"banker/templates/components/view-transactions\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"H1+hAVjl\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"transactions-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-transaction-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewTransaction\\\"]],[13],[0,\\\"New Transaction\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transactionType\\\"],[13],[0,\\\"Type\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"transactionType\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedTransactionType\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"emi\\\"],[13],[0,\\\"EMI\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"debit\\\"],[13],[0,\\\"Debit\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"credit\\\"],[13],[0,\\\"Credit\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"transactionStatus\\\"],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"transactionStatus\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedTransactionStatus\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"success\\\"],[13],[0,\\\"Success\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedTransactionType\\\"]]],null],\\\"\\\"]],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedTransactionStatus\\\"]]],null],\\\"\\\"]],[13],[0,\\\"Clear\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"transactions-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction Id\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Transaction Type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Amount\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Date and Time\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredTransactions\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewTransaction\\\",[28,[\\\"transaction\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_id\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_type\\\"]],false],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"role\\\"]],\\\"CUSTOMER\\\"],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"acc_number\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"Rs.\\\"],[1,[28,[\\\"transaction\\\",\\\"transaction_amount\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"transaction\\\",\\\"transaction_datetime\\\"]],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"transaction\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/view-transactions.hbs\" } });\n});","define(\"banker/templates/login\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ReGcfSnU\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSignup\\\",\\\"onLogin\\\",\\\"toSignup\\\"],[false,[33,[\\\"action\\\"],[[28,[null]],\\\"login\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/login.hbs\" } });\n});","define(\"banker/templates/register\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"A1DaQ2EA\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSignup\\\",\\\"onSignup\\\",\\\"toLogin\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"signup\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/register.hbs\" } });\n});","define(\"banker/templates/super-admin-login\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"2cA4znvo\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSuper\\\",\\\"toSuperAdmin\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"SuperAdminLogin\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/super-admin-login.hbs\" } });\n});","define(\"banker/templates/users\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lod6kaI3\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users.hbs\" } });\n});","define(\"banker/templates/users/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"+LHIfMcq\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"filters\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userRole\\\"],[13],[0,\\\"Role\\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"userRole\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateUserRole\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"admin\\\"],[13],[0,\\\"Admin\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"customer\\\"],[13],[0,\\\"Customer\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"manager\\\"],[13],[0,\\\"Manager\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userStatus\\\"],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"userStatus\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"updateUserStatus\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"All\\\"],[14],[0,\\\"\\\\n     \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"pending\\\"],[13],[0,\\\"Pending\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"active\\\"],[13],[0,\\\"Active\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"inactive\\\"],[13],[0,\\\"Inactive\\\"],[14],[0,\\\"\\\\n   \\\\n  \\\"],[14],[0,\\\"\\\\n   \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"clear\\\"],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedAccountType\\\"]]],null],\\\"\\\"]],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedAccountStatus\\\"]]],null],\\\"\\\"]],[13],[0,\\\"Clear\\\"],[14],[0,\\\"\\\\n  \\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"users-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"users-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"User ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Role\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"filteredUsers\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"viewUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_id\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_role\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"user\\\",\\\"user_status\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"Edit\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"user\\\",\\\"user_status\\\"]],\\\"pending\\\"],null]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"deleteUser\\\",[28,[\\\"user\\\"]]]],[13],[0,\\\"Delete\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"user\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/index.hbs\" } });\n});","define(\"banker/templates/users/user\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"T61ZsWzC\", \"block\": \"{\\\"statements\\\":[[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/user.hbs\" } });\n});","define(\"banker/templates/users/user/edit\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1xNPVeOL\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-form\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Edit User\\\"],[14],[0,\\\"\\\\n    \\\\n    \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"userId\\\"],[13],[0,\\\"User ID\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"userId\\\"],[16,\\\"value\\\",[26,[\\\"userId\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"disabled\\\",\\\"\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"user_status\\\"],[13],[0,\\\"User Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"user_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"user_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n          \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"user_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[0,\\\"Update User\\\"],[14],[0,\\\"\\\\n      \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"users\\\"],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"notify-box\\\"],null,[[\\\"message\\\",\\\"type\\\"],[[28,[\\\"notification\\\",\\\"message\\\"]],[28,[\\\"notification\\\",\\\"type\\\"]]]]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/user/edit.hbs\" } });\n});","define(\"banker/templates/users/user/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"XZAq4Sdc\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-card-wrapper\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-card\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"User Details\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"User ID:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_id\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Full Name:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"fullname\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Username:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"username\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Phone Number:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_phonenumber\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Address:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_address\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Role:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_role\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"user-field\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-label\\\"],[13],[0,\\\"Status:\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"field-value\\\"],[13],[1,[28,[\\\"user\\\",\\\"user_status\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n   \\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/users/user/index.hbs\" } });\n});","\n","define('banker/config/environment', ['ember'], function(Ember) {\n  var prefix = 'banker';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"banker/app\")[\"default\"].create({\"name\":\"banker\",\"version\":\"0.0.0+a9be6d7c\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfxrvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvtpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfpbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtzhjBA;AACA;AACA;","file":"banker.js"}