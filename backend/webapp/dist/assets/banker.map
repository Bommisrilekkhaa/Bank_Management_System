{"version":3,"sources":["vendor/ember-cli/app-prefix.js","banker/app.js","banker/components/auth-form.js","banker/components/input-form.js","banker/components/welcome-page.js","banker/controllers/accounts.js","banker/controllers/dashboard.js","banker/controllers/inputform.js","banker/controllers/login.js","banker/controllers/register.js","banker/helpers/app-version.js","banker/helpers/eq.js","banker/helpers/pluralize.js","banker/helpers/singularize.js","banker/initializers/app-version.js","banker/initializers/container-debug-adapter.js","banker/initializers/data-adapter.js","banker/initializers/ember-data.js","banker/initializers/export-application-global.js","banker/initializers/injectStore.js","banker/initializers/store.js","banker/initializers/transforms.js","banker/instance-initializers/ember-data.js","banker/resolver.js","banker/router.js","banker/routes/accounts.js","banker/routes/dashboard.js","banker/routes/inputform.js","banker/routes/login.js","banker/routes/register.js","banker/services/accounts.js","banker/services/ajax.js","banker/services/session.js","banker/templates/accounts.js","banker/templates/application.js","banker/templates/components/auth-form.js","banker/templates/components/input-form.js","banker/templates/dashboard.js","banker/templates/inputform.js","banker/templates/login.js","banker/templates/register.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('banker/app', ['exports', 'banker/resolver', 'ember-load-initializers', 'banker/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('banker/components/auth-form', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    accountsService: Ember.inject.service('accounts'),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    confirmPassword: '',\n    errorMessage: '',\n    bank_name: '',\n    BankNames: [],\n    isSignup: false,\n    BankId: '',\n    init: function init() {\n      this._super.apply(this, arguments);\n      // this.loadBanks();\n    },\n\n\n    // loadBanks() {\n    //   this.get('accountsService').fetchBanks().then((response) => {\n    //     this.set('bankNames', response);\n    //   }).catch((error) => {\n    //     console.error(\"Failed to load banks:\", error);\n    //   });\n    // },\n\n    // setBankId()\n    // {\n    //   for(bank in bankNames)\n    //   {\n    //     if(bank.bank_name == bank_name)\n    //     {\n    //       this.set('BankId',bank.bank_id);\n    //       console.log(bankId);\n    //     }\n    //   }\n    // },\n    actions: {\n      submitForm: function submitForm() {\n        var username = this.get('username');\n        var password = this.get('password');\n        var selectedRole = this.get('selectedRole');\n\n        if (!username || !password) {\n          this.set('errorMessage', 'Username and password are required.');\n          return;\n        }\n\n        if (password.length < 8) {\n          this.set('errorMessage', 'Password must be at least 8 characters long.');\n          return;\n        }\n\n        if (this.get('isSignup')) {\n          var confirmPassword = this.get('confirmPassword');\n          if (password !== confirmPassword) {\n            this.set('errorMessage', 'Passwords do not match.');\n            return;\n          }\n\n          if (!this.get('name') || !this.get('dob') || !this.get('addr') || !this.get('pno') || !selectedRole) {\n            this.set('errorMessage', 'All fields are required for signup.');\n            return;\n          }\n\n          if (this.get('pno').length !== 10 || isNaN(this.get('pno'))) {\n            this.set('errorMessage', 'Please enter a valid 10-digit phone number.');\n            return;\n          }\n        }\n\n        this.set('errorMessage', '');\n\n        var action = this.get('isSignup') ? 'onSignup' : 'onLogin';\n\n        // console.log('Submit button pressed'+action);  \n\n        var credentials = {\n          username: this.get('username'),\n          password: this.get('password'),\n          selectedRole: this.get('selectedRole'),\n          name: this.get('name'),\n          dob: this.get('dob'),\n          addr: this.get('addr'),\n          pno: this.get('pno')\n        };\n        this.sendAction(action, credentials);\n        // this.setBankId();\n      },\n      toggleMode: function toggleMode() {\n        var action = this.get('isSignup') ? 'toLogin' : 'toSignup';\n        if (action == 'toLogin') this.set('isSignup', false);else this.set('isSignup', true);\n\n        this.sendAction(action);\n      }\n    }\n  });\n});","define('banker/components/input-form', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n\n    accountsService: Ember.inject.service('accounts'),\n    errorMessage: '',\n    branchNames: [],\n    statuses: ['active', 'pending', 'inactive'],\n    types: ['savings', 'business'],\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.loadBranches();\n    },\n\n    acc_no: '',\n    acc_type: '',\n    // acc_balance: '',\n    fullname: '',\n    acc_status: '',\n    username: '',\n    branch_name: '',\n    isEdit: false,\n\n    loadBranches: function loadBranches() {\n      var _this = this;\n\n      this.get('accountsService').fetchBranches().then(function (response) {\n        _this.set('branchNames', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load branches:\", error);\n      });\n    },\n    isBranchSelected: function isBranchSelected(branch) {\n      return this.get('branch_name') === branch;\n    },\n\n\n    actions: {\n      submitForm: function submitForm() {\n        var _this2 = this;\n\n        if (!this.get('types').includes(this.get('acc_type'))) {\n          this.set(\"errorMessage\", 'Please select a valid account type.');\n          return;\n        }\n\n        if (!this.get('statuses').includes(this.get('acc_status'))) {\n          this.set(\"errorMessage\", \"Please select a valid account status.\");\n          return;\n        }\n\n        if (!this.get('username') || this.get('username').trim() === '') {\n          this.set(\"errorMessage\", 'Username cannot be empty.');\n          return;\n        }\n\n        if (!this.get('branch_name') || this.get('branch_name').trim() === '') {\n          this.set(\"errorMessage\", 'Please select a branch.');\n          return;\n        }\n\n        var accountData = {\n          acc_no: this.get('acc_no'),\n          acc_type: this.get('acc_type'),\n          // acc_balance: this.get('acc_balance'),\n          acc_status: this.get('acc_status'),\n          fullname: this.get('fullname'),\n          username: this.get('username'),\n          branch_name: this.get('branch_name')\n        };\n\n        if (this.get('isEdit')) {\n\n          this.get('accountsService').updateAccount(accountData).then(function () {\n            // alert('Account updated successfully!');\n            _this2.resetForm();\n            _this2.sendAction(\"toAccount\");\n          }).catch(function (error) {\n            // alert('Error updating account');\n            console.error(error);\n          });\n        } else {\n\n          this.get('accountsService').createAccount(accountData).then(function () {\n            // alert('Account created successfully!');\n            _this2.resetForm();\n            _this2.sendAction(\"toAccount\");\n          }).catch(function (error) {\n            // alert('Error creating account');\n            console.error(error);\n          });\n        }\n      }\n    },\n\n    resetForm: function resetForm() {\n      this.setProperties({\n        acc_no: '',\n        acc_type: '',\n        // acc_balance: '',\n        fullname: '',\n        acc_status: '',\n        username: '',\n        branch_name: '',\n        isEdit: false\n      });\n    }\n  });\n});","define('banker/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('banker/controllers/accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    accountsService: Ember.inject.service('accounts'),\n\n    accounts: [],\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.loadAccounts();\n    },\n    loadAccounts: function loadAccounts() {\n      var _this = this;\n\n      this.get('accountsService').fetchAccounts().then(function (response) {\n        _this.set('accounts', response);\n      }).catch(function (error) {\n        console.error(\"Failed to load accounts:\", error);\n      });\n    },\n\n\n    actions: {\n      addNewAccount: function addNewAccount() {\n\n        this.transitionToRoute('inputform');\n      },\n      editAccount: function editAccount(account) {\n        this.transitionToRoute('inputform').then(function (newRoute) {\n\n          newRoute.controller.setProperties({\n            isEdit: true,\n            acc_no: account.acc_no,\n            acc_type: account.acc_type,\n            acc_balance: account.acc_balance,\n            acc_status: account.acc_status,\n            username: account.username,\n            fullname: account.user_fullname,\n            branch_name: account.branch_name\n          });\n        }).catch(function (error) {\n          console.error(\"Transition failed\", error);\n        });\n      }\n    }\n  });\n});","define('banker/controllers/dashboard', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        session: Ember.inject.service(),\n        actions: {\n            logout: function logout() {\n                var _this = this;\n\n                this.get('session').logout().then(function () {\n                    _this.transitionToRoute('login');\n                });\n            }\n        }\n    });\n});","define(\"banker/controllers/inputform\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    actions: {\n      toAccount: function toAccount() {\n        this.transitionToRoute(\"accounts\");\n      }\n    }\n  });\n});","define('banker/controllers/login', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    errorMessage: '',\n\n    actions: {\n      login: function login(credentials) {\n        var _this = this;\n\n        // console.log('Login action triggered'); \n        // console.log(credentials);\n        this.get('session').login(credentials).then(function () {\n          _this.transitionToRoute('dashboard');\n        }).catch(function (error) {\n          _this.set('errorMessage', error.message || 'Login failed');\n        });\n      },\n      signup: function signup(credentials) {\n        var _this2 = this;\n\n        // console.log('signup action triggered'); \n\n        this.get('session').signup(credentials).then(function () {\n          _this2.transitionToRoute('dashboard');\n        }).catch(function (error) {\n          _this2.set('errorMessage', error.message || 'Signup failed');\n        });\n      },\n      logout: function logout() {\n        var _this3 = this;\n\n        this.get('session').logout().then(function () {\n          _this3.transitionToRoute('login');\n        });\n      },\n      toggleMode: function toggleMode() {\n        // console.log(isSignup);\n\n        this.transitionToRoute('register');\n      }\n    }\n  });\n});","define('banker/controllers/register', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    username: '',\n    password: '',\n    selectedRole: '',\n    name: '',\n    dob: '',\n    addr: '',\n    pno: '',\n    errorMessage: '',\n    actions: {\n      signup: function signup(credentials) {\n        var _this = this;\n\n        // console.log('signup action triggered'); \n\n        this.get('session').signup(credentials).then(function () {\n          _this.transitionToRoute('dashboard');\n        }).catch(function (error) {\n          _this.set('errorMessage', error.message || 'Signup failed');\n        });\n      },\n      toggleMode: function toggleMode() {\n        // console.log(isSignup);\n        this.transitionToRoute('login');\n      }\n    }\n  });\n});","define('banker/helpers/app-version', ['exports', 'banker/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('banker/helpers/eq', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.eq = eq;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function eq(_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        param1 = _ref2[0],\n        param2 = _ref2[1];\n\n    return param1 === param2;\n  }\n\n  exports.default = Ember.Helper.helper(eq);\n});","define('banker/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('banker/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('banker/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'banker/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var name = void 0,\n      version = void 0;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('banker/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('banker/initializers/data-adapter', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('banker/initializers/export-application-global', ['exports', 'banker/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('banker/initializers/injectStore', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/store', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('banker/initializers/transforms', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"banker/instance-initializers/ember-data\", [\"exports\", \"ember-data/instance-initializers/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('banker/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('banker/router', ['exports', 'banker/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('index', { path: \"/banker\" });\n    this.route('login', { path: \"/banker/login\" });\n    this.route('register', { path: \"/banker/register\" });\n    this.route('dashboard', { path: \"/banker/dashboard\" });\n    this.route('accounts', { path: \"/banker/banks/:bankId/accounts\" });\n    this.route('inputform', { path: \"/banker/inputform\" });\n  });\n\n  exports.default = Router;\n});","define('banker/routes/accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('banker/routes/dashboard', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            if (document.cookie == '') {\n                this.transitionTo('login');\n            }\n        }\n    });\n});","define('banker/routes/inputform', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({});\n});","define('banker/routes/login', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            if (document.cookie != '') {\n                this.transitionTo('dashboard');\n            }\n        }\n    });\n});","define('banker/routes/register', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        beforeModel: function beforeModel() {\n            if (document.cookie != '') {\n                this.transitionTo('dashboard');\n            }\n        }\n    });\n});","define('banker/services/accounts', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n\n    fetchAccounts: function fetchAccounts() {\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/accounts',\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          console.log(\"accounts\");\n          return response;\n        },\n        error: function error(_error) {\n          console.error(\"Error fetching accounts:\", _error);\n          if (_error.responseJSON) {\n            alert('Error: ' + _error.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching accounts.\");\n          }\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    createAccount: function createAccount(accountDetails) {\n      var acc_type = accountDetails.acc_type,\n          acc_status = accountDetails.acc_status,\n          username = accountDetails.username,\n          branch_name = accountDetails.branch_name;\n\n\n      console.log(\"insert...\");\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/accounts',\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          // acc_no,\n          acc_type: acc_type,\n          // acc_balance,\n          acc_status: acc_status,\n          username: username,\n          branch_name: branch_name\n        }),\n\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          console.log(\"insert...err\");\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n\n\n    // Update an account\n    updateAccount: function updateAccount(accountDetails) {\n      var acc_no = accountDetails.acc_no,\n          acc_type = accountDetails.acc_type,\n          acc_status = accountDetails.acc_status,\n          fullname = accountDetails.fullname,\n          username = accountDetails.username,\n          branch_name = accountDetails.branch_name;\n\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/accounts/' + acc_no,\n        type: 'PUT',\n        contentType: 'application/json',\n\n        data: JSON.stringify({\n\n          acc_type: acc_type,\n          // acc_balance,\n          fullname: fullname,\n          acc_status: acc_status,\n          username: username,\n          branch_name: branch_name\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error3) {\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    },\n    fetchBranches: function fetchBranches() {\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/branch',\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          // console.log(\"branches\");\n          return response;\n        },\n        error: function error(_error4) {\n          console.error(\"Error fetching branches:\", _error4);\n          // if (error.responseJSON) {\n          //   alert(`Error: ${error.responseJSON.message}`);\n          // } else {\n          //   alert(\"An error occurred while fetching branches.\");\n          // }\n          throw _error4.responseJSON || _error4;\n        }\n      });\n    },\n    fetchBanks: function fetchBanks() {\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/banks',\n        type: 'GET',\n        contentType: 'application/json',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          // console.log(\"banks\");\n          return response;\n        },\n        error: function error(_error5) {\n          console.error(\"Error fetching banks:\", _error5);\n          if (_error5.responseJSON) {\n            alert('Error: ' + _error5.responseJSON.message);\n          } else {\n            alert(\"An error occurred while fetching banks.\");\n          }\n          throw _error5.responseJSON || _error5;\n        }\n      });\n    }\n  });\n});","define('banker/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('banker/services/session', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n    ajax: Ember.inject.service(),\n\n    login: function login(credentials) {\n      var username = credentials.username,\n          password = credentials.password,\n          selectedRole = credentials.selectedRole;\n\n      // console.log(credentials);\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/login?action=login',\n        type: 'POST',\n        credentials: 'include',\n        contentType: 'application/json',\n        data: JSON.stringify({ username: username, password: password, user_role: selectedRole }),\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response, txtStatus, xhr) {\n          console.log(xhr);\n          return response;\n        },\n        error: function error(_error) {\n          alert(\"Invalid credentials!!\");\n          throw _error.responseJSON || _error;\n        }\n      });\n    },\n    signup: function signup(credentials) {\n      var username = credentials.username,\n          password = credentials.password,\n          selectedRole = credentials.selectedRole,\n          name = credentials.name,\n          dob = credentials.dob,\n          pno = credentials.pno,\n          addr = credentials.addr;\n\n      // console.log(credentials+'signup');\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/login?action=register',\n        type: 'POST',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          username: username,\n          password: password,\n          user_role: selectedRole,\n          full_name: name,\n          date_of_birth: dob,\n          user_phonenumber: pno,\n          user_address: addr\n        }),\n        success: function success(response) {\n          return response;\n        },\n        error: function error(_error2) {\n          throw _error2.responseJSON || _error2;\n        }\n      });\n    },\n    logout: function logout() {\n\n      return Ember.$.ajax({\n        url: 'http://localhost:8080/banker/api/v1/login?action=logout',\n        type: 'GET',\n        credentials: 'include',\n        xhrFields: {\n          withCredentials: true\n        },\n        success: function success(response) {\n          document.cookie = document.cookie + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n          return response;\n        },\n        error: function error(_error3) {\n          throw _error3.responseJSON || _error3;\n        }\n      });\n    }\n  });\n});","define(\"banker/templates/accounts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"N6svI8D8\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"accounts-list\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"new-account-btn\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addNewAccount\\\"]],[13],[0,\\\"New Account\\\"],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"table\\\",[]],[15,\\\"class\\\",\\\"accounts-table\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"thead\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Account No\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Type\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Balance\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Status\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Fullname\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"BranchName\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"th\\\",[]],[13],[0,\\\"Actions\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"tbody\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"accounts\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"tr\\\",[]],[13],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_no\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_type\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_balance\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"acc_status\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"user_fullname\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[1,[28,[\\\"account\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n          \\\"],[11,\\\"td\\\",[]],[13],[0,\\\"\\\\n            \\\"],[11,\\\"button\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"editAccount\\\",[28,[\\\"account\\\"]]]],[13],[0,\\\"Edit\\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"account\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/accounts.hbs\" } });\n});","define(\"banker/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"jgsFTrz+\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[26,[\\\"outlet\\\"]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/application.hbs\" } });\n});","define(\"banker/templates/components/auth-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tvgfgsMw\", \"block\": \"{\\\"statements\\\":[[11,\\\"body\\\",[]],[13],[0,\\\"\\\\n\\\"],[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"auth-form\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Register\\\",\\\"Login\\\"],null],false],[14],[0,\\\"\\\\n      \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"name\\\"],[13],[0,\\\"Name\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"name\\\"],[15,\\\"type\\\",\\\"text\\\"],[16,\\\"value\\\",[26,[\\\"name\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your full name\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"dob\\\"],[13],[0,\\\"Date of Birth\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"dob\\\"],[15,\\\"type\\\",\\\"date\\\"],[16,\\\"value\\\",[26,[\\\"dob\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"dob\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"pno\\\"],[13],[0,\\\"Phone Number\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"pno\\\"],[15,\\\"type\\\",\\\"number\\\"],[16,\\\"value\\\",[26,[\\\"pno\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your phone number\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"pno\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"addr\\\"],[13],[0,\\\"Address\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"textarea\\\",[]],[15,\\\"id\\\",\\\"addr\\\"],[16,\\\"value\\\",[26,[\\\"addr\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your address\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"addr\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"username\\\"],[15,\\\"type\\\",\\\"text\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your username\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"username\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n          \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"password\\\"],[13],[0,\\\"Password\\\"],[14],[0,\\\"\\\\n          \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"password\\\"],[15,\\\"type\\\",\\\"password\\\"],[16,\\\"value\\\",[26,[\\\"password\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Enter your password\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"password\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"confirmPassword\\\"],[13],[0,\\\"Confirm Password\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"input\\\",[]],[15,\\\"id\\\",\\\"confirmPassword\\\"],[15,\\\"type\\\",\\\"password\\\"],[16,\\\"value\\\",[26,[\\\"confirmPassword\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[15,\\\"placeholder\\\",\\\"Confirm your password\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"confirmPassword\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n          \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n            \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"role\\\"],[13],[0,\\\"Role\\\"],[14],[0,\\\"\\\\n            \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"role\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedRole\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[15,\\\"class\\\",\\\"form-control\\\"],[13],[0,\\\"\\\\n              \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[15,\\\"disabled\\\",\\\"\\\"],[15,\\\"selected\\\",\\\"\\\"],[13],[0,\\\"Select a role\\\"],[14],[0,\\\"\\\\n              \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"manager\\\"],[13],[0,\\\"Manager\\\"],[14],[0,\\\"\\\\n              \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"customer\\\"],[13],[0,\\\"Customer\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"unless\\\"],[[28,[\\\"isSignup\\\"]]],null,{\\\"statements\\\":[[0,\\\"               \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"admin\\\"],[13],[0,\\\"Admin\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"            \\\"],[14],[0,\\\"\\\\n          \\\"],[14],[0,\\\"\\\\n\\\"],[0,\\\"         \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Register\\\",\\\"Login\\\"],null],false],[14],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n        \\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"switch\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isSignup\\\"]],\\\"Switch to Login\\\",\\\"Switch to Register\\\"],null],false],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n\\\"],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/auth-form.hbs\" } });\n});","define(\"banker/templates/components/input-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ypIYaWQL\", \"block\": \"{\\\"statements\\\":[[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"account-form\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Edit Account\\\",\\\"Create New Account\\\"],null],false],[14],[0,\\\"\\\\n  \\\\n  \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"submitForm\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_no\\\"],[13],[0,\\\"Account Number\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"acc_no\\\"],[16,\\\"value\\\",[26,[\\\"acc_no\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_no\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[16,\\\"disabled\\\",[26,[\\\"isEdit\\\"]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_type\\\"],[13],[0,\\\"Account Type\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_type\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_type\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select type\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"types\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"type\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"type\\\"]],[28,[\\\"acc_type\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"type\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"type\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"acc_status\\\"],[13],[0,\\\"Account Status\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"acc_status\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"acc_status\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select Status\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"statuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"status\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"status\\\"]],[28,[\\\"acc_status\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"status\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"status\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"username\\\"],[13],[0,\\\"Username\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"username\\\"],[16,\\\"value\\\",[26,[\\\"username\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"username\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"fullname\\\"],[13],[0,\\\"Fullname\\\"],[14],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"text\\\"],[15,\\\"id\\\",\\\"fullname\\\"],[16,\\\"value\\\",[26,[\\\"fullname\\\"]],null],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"oninput\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"fullname\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"form-group\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"branch_name\\\"],[13],[0,\\\"Branch Name\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"select\\\",[]],[15,\\\"id\\\",\\\"branch_name\\\"],[15,\\\"class\\\",\\\"form-control\\\"],[16,\\\"onchange\\\",[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"branch_name\\\"]]],null]],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[13],[0,\\\"\\\\n        \\\"],[11,\\\"option\\\",[]],[15,\\\"value\\\",\\\"\\\"],[13],[0,\\\"Select branch\\\"],[14],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"branchNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"option\\\",[]],[16,\\\"value\\\",[28,[\\\"branch\\\",\\\"branch_name\\\"]],null],[16,\\\"selected\\\",[33,[\\\"if\\\"],[[33,[\\\"eq\\\"],[[28,[\\\"branch\\\",\\\"branch_name\\\"]],[28,[\\\"branch_name\\\"]]],null],\\\"selected\\\"],null],null],[13],[1,[28,[\\\"branch\\\",\\\"branch_name\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"branch\\\"]},null],[0,\\\"      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"button\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[1,[33,[\\\"if\\\"],[[28,[\\\"isEdit\\\"]],\\\"Update Account\\\",\\\"Create Account\\\"],null],false],[14],[0,\\\"\\\\n   \\\\n\\\"],[6,[\\\"link-to\\\"],[\\\"accounts\\\",1],null,{\\\"statements\\\":[[0,\\\"    \\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-secondary\\\"],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"error-message\\\"],[13],[0,\\\"* \\\"],[1,[26,[\\\"errorMessage\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/components/input-form.hbs\" } });\n});","define(\"banker/templates/dashboard\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"d0uyzTND\", \"block\": \"{\\\"statements\\\":[[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-primary\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"logout\\\"]],[13],[0,\\\"Logout\\\"],[14],[0,\\\"\\\\n\\\"],[11,\\\"button\\\",[]],[15,\\\"class\\\",\\\"btn-primary\\\"],[13],[6,[\\\"link-to\\\"],[\\\"accounts\\\",[28,[\\\"bank\\\",\\\"bankId\\\"]]],null,{\\\"statements\\\":[],\\\"locals\\\":[]},null],[14]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/dashboard.hbs\" } });\n});","define(\"banker/templates/inputform\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"P2iha0DX\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"input-form\\\"],null,[[\\\"isEdit\\\",\\\"acc_no\\\",\\\"acc_type\\\",\\\"acc_balance\\\",\\\"acc_status\\\",\\\"username\\\",\\\"branch_name\\\",\\\"toAccount\\\"],[[28,[null,\\\"isEdit\\\"]],[28,[null,\\\"acc_no\\\"]],[28,[null,\\\"acc_type\\\"]],[28,[null,\\\"acc_balance\\\"]],[28,[null,\\\"acc_status\\\"]],[28,[null,\\\"username\\\"]],[28,[null,\\\"branch_name\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"toAccount\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/inputform.hbs\" } });\n});","define(\"banker/templates/login\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ReGcfSnU\", \"block\": \"{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSignup\\\",\\\"onLogin\\\",\\\"toSignup\\\"],[false,[33,[\\\"action\\\"],[[28,[null]],\\\"login\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/login.hbs\" } });\n});","define(\"banker/templates/register\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"P3cMDazk\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"auth-form\\\"],null,[[\\\"isSignup\\\",\\\"onSignup\\\",\\\"toLogin\\\"],[true,[33,[\\\"action\\\"],[[28,[null]],\\\"signup\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"toggleMode\\\"],null]]]],false]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"banker/templates/register.hbs\" } });\n});","\n","define('banker/config/environment', ['ember'], function(Ember) {\n  var prefix = 'banker';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"banker/app\")[\"default\"].create({\"name\":\"banker\",\"version\":\"0.0.0+81d8493e\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"banker.js"}